<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="cca44dfd-4c47-4e24-8250-642360c17030" activeEnvironment="Default" name="custodian"
                    resourceRoot="" defaultScriptLanguage="Groovy" soapui-version="5.5.0" encryptionMode="Not encrypted"
                    updated="2.7.0 2019-05-30T13:25:24Z" abortOnError="false" runType="SEQUENTIAL"
                    xmlns:con="http://eviware.com/soapui/config">
    <con:settings>
        <con:setting id="cca44dfd-4c47-4e24-8250-642360c17030fileName">交易所钱包服务P2-soapui-project</con:setting>
    </con:settings>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:requirements/>
    <con:properties>
        <con:property>
            <con:name>custodianServer</con:name>
        </con:property>
        <con:property>
            <con:name>interfacePort</con:name>
        </con:property>
        <con:property>
            <con:name>BTC同步节点地址</con:name>
        </con:property>
        <con:property>
            <con:name>insight比特币地址</con:name>
        </con:property>
        <con:property>
            <con:name>BTC同步节点-多签</con:name>
        </con:property>
        <con:property>
            <con:name>ETH同步节点地址</con:name>
        </con:property>
        <con:property>
            <con:name>LTC同步节点地址</con:name>
        </con:property>
        <con:property>
            <con:name>USDT同步节点地址</con:name>
        </con:property>
    </con:properties>
    <con:wssContainer/>
    <con:databaseConnectionContainer>
        <con:databaseConnection>
            <con:name>cus-test</con:name>
            <con:driver>com.mysql.jdbc.Driver</con:driver>
            <con:connectionString>jdbc:mysql://127.0.0.1:3306/1?user=1&amp;password=PASS_VALUE</con:connectionString>
            <con:password>1</con:password>
            <con:connectionProperties/>
        </con:databaseConnection>
    </con:databaseConnectionContainer>
    <con:jmsConnectionContainer/>
    <con:oAuth2ProfileContainer/>
    <con:oAuth1ProfileContainer/>
    <con:reporting>
        <con:xmlTemplates/>
        <con:parameters/>
    </con:reporting>
    <con:sensitiveInformation/>
    <con:environment name="QA" id="18c03823-0f2b-4dc0-93e6-01e5c14e9cbd">
        <con:property>
            <con:name>custodianServer</con:name>
            <con:value>139.219.140.220</con:value>
        </con:property>
        <con:property>
            <con:name>interfacePort</con:name>
            <con:value>8443</con:value>
        </con:property>
        <con:property>
            <con:name>BTC同步节点地址</con:name>
            <con:value>42.159.153.121:20337</con:value>
        </con:property>
        <con:property>
            <con:name>insight比特币地址</con:name>
            <con:value>test-insight.bitpay.com</con:value>
        </con:property>
        <con:property>
            <con:name>BTC同步节点-多签</con:name>
            <con:value>139.219.140.220:20332</con:value>
        </con:property>
        <con:property>
            <con:name>ETH同步节点地址</con:name>
            <con:value>42.159.153.121:10331</con:value>
        </con:property>
        <con:property>
            <con:name>LTC同步节点地址</con:name>
            <con:value>42.159.153.121:20336</con:value>
        </con:property>
        <con:property>
            <con:name>USDT同步节点地址</con:name>
            <con:value/>
        </con:property>
        <con:databaseConnectionContainer>
            <con:databaseConnection>
                <con:name>cus-test</con:name>
                <con:driver>com.mysql.jdbc.Driver</con:driver>
                <con:connectionString>jdbc:mysql://139.219.140.220:3306/wallet?user=custodian&amp;password=PASS_VALUE
                </con:connectionString>
                <con:password>custodian</con:password>
                <con:connectionProperties/>
            </con:databaseConnection>
        </con:databaseConnectionContainer>
        <con:jmsConnectionContainer/>
    </con:environment>
    <con:testSuite id="b1100d65-6e85-44c0-9252-2727ec8be875" name="BTC冒烟用例">
        <con:settings>
            <con:setting id="0737d4d2-65b1-4f1c-a20c-5f2093cc2e97fileName">ONT钱包服务</con:setting>
            <con:setting id="45435b0a-c995-425e-9f63-fe171bf14aecfileName">ONT冒烟用例</con:setting>
            <con:setting id="30fd042b-b0ba-459b-825b-5fd8b39fe70efileName">BTC冒烟用例1</con:setting>
            <con:setting id="IncludeOverview">true</con:setting>
            <con:setting id="IncludeResults">true</con:setting>
            <con:setting id="FlowLayout">false</con:setting>
            <con:setting id="ErrorDetails">true</con:setting>
            <con:setting id="IncludeCoverage">true</con:setting>
            <con:setting id="b1100d65-6e85-44c0-9252-2727ec8be875fileName">BTC冒烟用例</con:setting>
        </con:settings>
        <con:savedRecentRuns>1</con:savedRecentRuns>
        <con:runType>SEQUENTIAL</con:runType>
        <con:properties>
            <con:property>
                <con:name>币种</con:name>
                <con:value>BTC</con:value>
            </con:property>
            <con:property>
                <con:name>返回tx_id</con:name>
                <con:value>20190221085420109208</con:value>
            </con:property>
            <con:property>
                <con:name>入金amount</con:name>
                <con:value>20000</con:value>
            </con:property>
            <con:property>
                <con:name>amount</con:name>
                <con:value>10000</con:value>
            </con:property>
            <con:property>
                <con:name>外部币池</con:name>
                <con:value>msgrPLKzTz2j8oZ9ruLbnjKu1K219mnGZf</con:value>
            </con:property>
            <con:property>
                <con:name>外部币池私钥</con:name>
                <con:value>cMmeobe2QuWuUTpMYyAsByg9gf1BiFpfYumb3r2KgxJVJTQnn4Dc</con:value>
            </con:property>
            <con:property>
                <con:name>新用户地址</con:name>
                <con:value>2NAwWjQtpjKphW5jAGeovNFFsf7fk7qWp8s</con:value>
            </con:property>
            <con:property>
                <con:name>出金tx_id</con:name>
                <con:value>autotest_BTC_withdrew_53</con:value>
            </con:property>
            <con:property>
                <con:name>单签地址1</con:name>
                <con:value>mo7WGjhAhtw19t5JuJSnsRLpaaPUreHGB9</con:value>
            </con:property>
            <con:property>
                <con:name>单签地址2</con:name>
                <con:value>msaUm9Bkd3JtNoudNvLWpa4miULQYPQS25</con:value>
            </con:property>
            <con:property>
                <con:name>单签地址3</con:name>
                <con:value>mvWDkHtuMLY4PKyxGi2onknDEbS1MULyhj</con:value>
            </con:property>
            <con:property>
                <con:name>单签地址4</con:name>
                <con:value>miTwLTmLdWzhw5F3vFLBaZb2rpTETLgqQz</con:value>
            </con:property>
            <con:property>
                <con:name>单签地址5</con:name>
                <con:value>mfeHxBsBqrgatxXwLdoepyjPxQeXfGPbko</con:value>
            </con:property>
            <con:property>
                <con:name>多签地址私钥</con:name>
                <con:value>
                    cU3GcGMuEQ2HS538eAUiKZWCDcaAiQhFdEM9o792fR1ivUQ7CvDg,cVbWqin8u9199qpMpgCxkxsWhkw6EdGqPvAYaoeQtuT7Ch4G3nL2
                </con:value>
            </con:property>
            <con:property>
                <con:name>入金hash</con:name>
                <con:value>ec6b42b0ed7a07cd6e7a74f44d265655e5b3d0ffc41a00437aa426bd8831b726</con:value>
            </con:property>
            <con:property>
                <con:name>出金hash</con:name>
                <con:value>65d6d95d1ce70a71803128d38eb5791199b71568e1638118087c48fc94aed03a</con:value>
            </con:property>
        </con:properties>
        <con:reportParameters/>
        <con:testCase id="9f854a3c-8bee-4449-a3b8-919837689ad5" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="多签地址生成-4/5签" searchProperties="true">
            <con:settings>
                <con:setting id="71e903b7-7910-4ab4-923b-6acfb18cee7afileName">普通客户单币种开户-正常</con:setting>
                <con:setting id="da1825e7-b809-4662-9f5d-3f3c2e169dfbfileName">普通客户单币种开户-正常</con:setting>
                <con:setting id="8cc66d22-f6b7-4e72-8c56-5b1fe56e8adbfileName">多签地址生成</con:setting>
                <con:setting id="9f854a3c-8bee-4449-a3b8-919837689ad5fileName">多签地址生成-4%2F5签</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="calltestcase" name="Run TestCase - 获得批次号" id="77df3c16-f538-4c3c-b03b-e7097ff9fdfb">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>acd94a41-69ff-43e5-8575-d3421c6fb2c1</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>批次号</con:name>
                            <con:value>50</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>批次号</con:entry>
                    </con:returnProperties>
                    <con:runMode>SINGLETON_AND_WAIT</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址1" id="25417d20-7f45-4fde-be1f-af4e401ca64f">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>n2MAxA3697e8oY2sKnxo4n4AQzpCEkRfoV</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址1的公钥"
                          id="063fe02b-e28f-489b-a426-a979dada80c4">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址1#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>029b928072c576c446cd7b12c1e8fd3c6a2fb4f26072edd0e30490bf25101ac543</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址2" id="442ad636-8ca7-485e-b7e0-9e0c7d229d37">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>mnc8fHKhqfmCMAY2yQc12wCYtcVc1ewZsX</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址2的公钥"
                          id="0a4b413e-5066-47fc-96bb-73e959cbfb7b">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址2#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>039b22fe6a3a0e8bb18269406f387070110437083a2cbb38ab66ab25e4c854f847</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址3" id="cb4f9e03-d52a-4f1e-90d2-125dab904e6b">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>mvWDkHtuMLY4PKyxGi2onknDEbS1MULyhj</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址3的公钥"
                          id="30b6fee1-a6a3-4dbd-830f-83f12488de26">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址3#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>039b56fd1888148f21371f8eba039f4ba124a2c186823197ca7145c4e5ce877618</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址4" id="ef7fdb12-b86f-49b5-bb13-3f7a60a1a2f0">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>miTwLTmLdWzhw5F3vFLBaZb2rpTETLgqQz</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址4的公钥"
                          id="e34f6a4a-a32d-47a8-882e-98ca9188d076">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址4#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>021e282c5a20d5628b2c61d9f9f64a59a591a1288a6945a3232114ce11abc10961</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址5" id="d2236cfe-8394-485e-bdd9-164ba6fb6ee5">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>mfeHxBsBqrgatxXwLdoepyjPxQeXfGPbko</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址5的公钥"
                          id="240e7f93-07d0-4c41-8fa3-9e662e841883">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址5#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>022af9d2870299c4c0cc00e6f10ecc98ab87b5c0d6829be9e0c9c5922e5630d5b4</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-创建多签地址" id="bf47f906-e4a4-4ff1-9931-e3c720caefcc">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4388fc92-fafd-43a0-89a3-076fc44579b1</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>tx_id</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>required</con:name>
                            <con:value>4</con:value>
                        </con:property>
                        <con:property>
                            <con:name>addr_info</con:name>
                            <con:value>
                                ${Run TestCase-生成单签地址1#address}:${Run TestCase - 获得单签地址1的公钥#pubKey},${Run TestCase-生成单签地址2#address}:${Run TestCase - 获得单签地址2的公钥#pubKey},${Run TestCase-生成单签地址3#address}:${Run TestCase - 获得单签地址3的公钥#pubKey},${Run TestCase-生成单签地址4#address}:${Run TestCase - 获得单签地址4的公钥#pubKey},${Run TestCase-生成单签地址5#address}:${Run TestCase - 获得单签地址5的公钥#pubKey}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>{"msg_id":"autotest","code":0,"msg":"","data":null}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言地址生成" id="b7ef4be3-f800-4a0f-a224-219ff640a91a">
                <con:settings/>
                <con:config>
                    <script>def code = context.expand( '${Run TestCase-创建多签地址#return_msg#$.code}' )
                        assert code == "0"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 查询私钥列表" id="34d71341-5136-46f7-8726-668fcbf3a505">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>3fc374a5-df02-4c6c-85d1-95863dfb6d68</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址列表</con:name>
                            <con:value>
                                ${Run TestCase-生成单签地址1#address},${Run TestCase-生成单签地址2#address},${Run TestCase-生成单签地址3#address},${Run TestCase-生成单签地址4#address},${Run TestCase-生成单签地址5#address}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>prikeySet</con:name>
                            <con:value>
                                cUCQyUkXnhnXHHmDu9u62hqGf5eRfz6LDvFJf9vfHLUn22iCGtHC,cUEqUhQvUGmju9vYvhijkYpyTCaQ3QFSvue1yapXfYvoXirVmCyH,cV3qFsGkgdDvUabprWXFXTnMeKzUqS8HJmh4Z7CSuo1UgTaorVPa,cRveaD7EYERxdiNr4Y6oXhqjanR5K9En5M7JJx9YVNFhHbZfduFZ,cPZiRP1XBPS5pG79EdG6geNTxrRvMSmz7SM14hkikWjobn3uXQvW
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>prikeySet</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="delay" name="Delay" id="4dd75fd3-8a61-4d4d-9a85-32e203151264">
                <con:settings/>
                <con:config>
                    <delay>5000</delay>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="等待地址生成消息" id="6a4dbbc3-9612-4696-8564-2a820a4731ca">
                <con:settings/>
                <con:config>
                    <script>def tx_id = context.expand( '${Run TestCase-创建多签地址#tx_id}' )
                        def 返回tx_id = context.expand( '${#TestSuite#返回tx_id}' )
                        def prikeySet = context.expand( '${Run TestCase - 查询私钥列表#prikeySet}' )

                        if( !tx_id.equals(返回tx_id)){
                        log.info "没有找到地址生成消息，继续等待"
                        testRunner.gotoStepByName("Delay")
                        }else{//找到入金确认消息
                        log.info "找到地址生成消息"
                        testRunner.testCase.testSuite.setPropertyValue("多签地址私钥",prikeySet);
                        // testRunner.gotoStepByName("Run TestCase-记录账户交易后ONT")
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="93fd6d5a-b8d2-4fc2-ad3a-7227a4f35ce7">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>1</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址1</con:sourceStep>
                        <con:targetType>单签地址1</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>2</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址2</con:sourceStep>
                        <con:targetType>单签地址2</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>3</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址3</con:sourceStep>
                        <con:targetType>单签地址3</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>4</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址4</con:sourceStep>
                        <con:targetType>单签地址4</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>5</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址5</con:sourceStep>
                        <con:targetType>单签地址5</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="设置为入金地址" id="76e903e6-0906-47ca-9a1d-93225139802e" disabled="true">
                <con:settings/>
                <con:config>
                    <script>def 多签地址 = context.expand( '${#TestSuite#多签地址}' )

                        testRunner.testCase.testSuite.setPropertyValue("新用户地址",多签地址);
                    </script>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>7bac0008-ca14-4cc8-845d-a514a9ee183e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="9a45ef2b-4ae4-4414-98ca-a40e01e07ab5" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="多签地址生成-2/3签" searchProperties="true">
            <con:settings>
                <con:setting id="71e903b7-7910-4ab4-923b-6acfb18cee7afileName">普通客户单币种开户-正常</con:setting>
                <con:setting id="da1825e7-b809-4662-9f5d-3f3c2e169dfbfileName">普通客户单币种开户-正常</con:setting>
                <con:setting id="8cc66d22-f6b7-4e72-8c56-5b1fe56e8adbfileName">多签地址生成</con:setting>
                <con:setting id="9f854a3c-8bee-4449-a3b8-919837689ad5fileName">多签地址生成-4%2F5签</con:setting>
                <con:setting id="9a45ef2b-4ae4-4414-98ca-a40e01e07ab5fileName">多签地址生成-2%2F3签</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase - 获得批次号" id="7933a6fb-9b99-441c-967f-3a4c69e4db89">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>acd94a41-69ff-43e5-8575-d3421c6fb2c1</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>批次号</con:name>
                            <con:value>62</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>批次号</con:entry>
                    </con:returnProperties>
                    <con:runMode>SINGLETON_AND_WAIT</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址1" id="8b4ae7b1-b6de-44af-815a-8af38d2a9585">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>mj74FnGoK4EjEGodkcHrPpR65LFfk3YRex</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址1的公钥"
                          id="047fcbe6-bf5e-4ee9-9787-61fc52e651aa">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址1#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>03b0005fc9edc14ffd54bcd598bc315a39e0d86e869486c9edf0d018fdd44e54e6</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址2" id="32b6517b-c180-41d3-8cfe-5ed2a818b846">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>mzYa1voLqbdZTHVJwtkSLQNT9fzVMxXqX7</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址2的公钥"
                          id="2a23274c-0b34-4dac-a7eb-dfd98dd7ebec">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址2#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>03527cd1117fc744705627f847267770495088baf2d3ec2b7145a99bdd5fd7bcb5</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-创建多签地址" id="f4107328-6d78-46b2-81b8-8b07784f3d43">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4388fc92-fafd-43a0-89a3-076fc44579b1</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>tx_id</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>required</con:name>
                            <con:value>2</con:value>
                        </con:property>
                        <con:property>
                            <con:name>addr_info</con:name>
                            <con:value>
                                ${Run TestCase-生成单签地址1#address}:${Run TestCase - 获得单签地址1的公钥#pubKey},${Run TestCase-生成单签地址2#address}:${Run TestCase - 获得单签地址2的公钥#pubKey}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>{"msg_id":"autotest","code":0,"msg":"","data":null}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言地址生成" id="8c8b6cd4-f8c5-48cd-b34f-e917cc01732d">
                <con:settings/>
                <con:config>
                    <script>def code = context.expand( '${Run TestCase-创建多签地址#return_msg#$.code}' )
                        assert code == "0"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 查询私钥列表" id="89b2968c-7d1e-453d-9c09-7c61f934d908">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>3fc374a5-df02-4c6c-85d1-95863dfb6d68</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址列表</con:name>
                            <con:value>${Run TestCase-生成单签地址1#address},${Run TestCase-生成单签地址2#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>prikeySet</con:name>
                            <con:value>
                                cRPFc5wGYUMrrrpYXbGznVBk81XEjqNsiFadPdhJ2qhPnEEkqHb7,cQqaKWDwGUqd2WfFQid4pyCAojEARw4tp5RkKejMYAKHNTDWfvHg
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>prikeySet</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="delay" name="Delay" id="33cd5924-5aff-4643-b48f-2d076cedcbaa">
                <con:settings/>
                <con:config>
                    <delay>5000</delay>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="等待地址生成消息" id="cb8c9469-7889-47c1-8e9b-f965be4ae085">
                <con:settings/>
                <con:config>
                    <script>def tx_id = context.expand( '${Run TestCase-创建多签地址#tx_id}' )
                        def 返回tx_id = context.expand( '${#TestSuite#返回tx_id}' )
                        def prikeySet = context.expand( '${Run TestCase - 查询私钥列表#prikeySet}' )

                        if( !tx_id.equals(返回tx_id)){
                        log.info "没有找到地址生成消息，继续等待"
                        testRunner.gotoStepByName("Delay")
                        }else{//找到入金确认消息
                        log.info "找到地址生成消息"
                        testRunner.testCase.testSuite.setPropertyValue("多签地址私钥",prikeySet);
                        // testRunner.gotoStepByName("Run TestCase-记录账户交易后ONT")
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="1e9752e4-f706-4dbf-adf9-ee0659835226">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>1</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址1</con:sourceStep>
                        <con:targetType>单签地址1</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>2</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址2</con:sourceStep>
                        <con:targetType>单签地址2</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="设置为入金地址" id="9def3011-c635-4bed-9e0a-c2033a1d172a" disabled="true">
                <con:settings/>
                <con:config>
                    <script>def 多签地址 = context.expand( '${#TestSuite#多签地址}' )

                        testRunner.testCase.testSuite.setPropertyValue("新用户地址",多签地址);
                    </script>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>7bac0008-ca14-4cc8-845d-a514a9ee183e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>5620973d-9c5d-4eb1-84a6-467847773470</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="b4a374f4-d27a-4867-8124-2ec2d8289971" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="入金确认" searchProperties="true">
            <con:settings>
                <con:setting id="f4ec3b44-64b5-4b17-8c38-907e5d52a9a0fileName">入金</con:setting>
                <con:setting id="f3af21cf-6860-4a62-a3cd-3004a26c4dc7fileName">入金</con:setting>
                <con:setting id="468d696d-f068-4724-8ab8-918ce31e0678fileName">入金确认</con:setting>
                <con:setting id="c8a3a43e-c0b7-439d-b8f8-4038052f350ffileName">入金确认</con:setting>
                <con:setting id="395a9db1-31bf-4d31-aee7-453c6da5ed04fileName">入金确认</con:setting>
                <con:setting id="b4a374f4-d27a-4867-8124-2ec2d8289971fileName">入金确认</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-查询转出账户余额" id="fb98653e-05e2-459f-9eca-9c7d32d0a13a">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#外部币池}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>57421888</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="确保余额足够" id="c58fd1b0-0d36-4706-be8b-cf718642a95f">
                <con:settings/>
                <con:config>
                    <script>def amount = context.expand( '${#TestSuite#入金amount}' ).toBigDecimal()
                        def btc = context.expand( '${Run TestCase-查询转出账户余额#amount}' ).toBigDecimal()

                        //log.info btc
                        assert btc > amount

                        return amount / 1e+8
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录账户当前余额" id="0e99a090-f504-409f-9c8f-045bb8f53d42">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestCase#入金地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>0</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-btc转账2" id="5620973d-9c5d-4eb1-84a6-467847773470"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>746749d0-aa4d-4e44-afe4-d70335e45737</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>目的地址</con:name>
                            <con:value>${#TestCase#入金地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>金额</con:name>
                            <con:value>${#TestSuite#amount}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>源地址私钥</con:name>
                            <con:value>${#TestSuite#外部币池私钥}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>ac2105a4e28745c9b10a361980a24b25b50a3c4fd9ffb8490da37bcdc470fee5</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>hash</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-btc转账" id="2f6f655b-a7b5-4653-84e9-c9761c31bc46">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>746749d0-aa4d-4e44-afe4-d70335e45737</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>目的地址</con:name>
                            <con:value>${#TestCase#入金地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>金额</con:name>
                            <con:value>${#TestSuite#入金amount}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>源地址私钥</con:name>
                            <con:value>${#TestSuite#外部币池私钥}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>hash</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="delay" name="Delay" id="26b0bc12-8aec-4958-9292-067c8674e6ca">
                <con:settings/>
                <con:config>
                    <delay>300000</delay>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="等待入金6/6消息" id="8938d582-de22-44b4-b89c-c3d7926fdf9b">
                <con:settings/>
                <con:config>
                    <script>def 消息hash = context.expand( '${#TestSuite#入金hash}' )
                        def 入金交易hash = context.expand( '${Run TestCase-btc转账#hash}' )

                        if( !消息hash.equals(入金交易hash)){
                        log.info "没有找到入金确认消息，继续等待"
                        testRunner.gotoStepByName("Delay")
                        }else{//找到入金确认消息
                        log.info "找到入金确认消息"
                        // testRunner.gotoStepByName("Run TestCase-记录账户交易后ONT")
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询交易是否上链" id="0effdb37-8fd4-4c6e-8ffb-db76b243b7d2">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4f7f11b0-67ba-480b-8d74-44c5881ecf79</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>txid</con:name>
                            <con:value>${Run TestCase-btc转账#hash}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>confirmations</con:name>
                            <con:value>10</con:value>
                        </con:property>
                        <con:property>
                            <con:name>fee</con:name>
                            <con:value>0.001</con:value>
                        </con:property>
                        <con:property>
                            <con:name>voutindex</con:name>
                            <con:value>0</con:value>
                        </con:property>
                        <con:property>
                            <con:name>交易地址</con:name>
                            <con:value>${#TestCase#入金地址}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>confirmations</con:entry>
                        <con:entry>fee</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言上链" id="8528ad9d-cac2-44aa-83ce-f747253e7b26">
                <con:settings/>
                <con:config>
                    <script>def confirmations = context.expand( '${Run TestCase-查询交易是否上链#confirmations}' ).toInteger()

                        assert confirmations > 0
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录账户交易后余额" id="3c0d0eaa-3056-4667-9b03-5ce2cf7fa411">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestCase#入金地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>20000</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="jdbc" name="JDBC Request-查询数据库入金记录表" id="b98cf7ce-587d-4594-b67c-7f01b950f325">
                <con:settings>
                    <con:setting id="prettyPrintResponse">true</con:setting>
                </con:settings>
                <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dbConnectionName>cus-test</con:dbConnectionName>
                    <con:driver>com.mysql.jdbc.Driver</con:driver>
                    <con:connectionString>jdbc:mysql://139.219.140.220:3306/wallet?user=custodian&amp;password=PASS_VALUE</con:connectionString>
                    <con:password>custodian</con:password>
                    <con:connectionProperties/>
                    <con:query>select * from depositlog where txhash = '${Run TestCase-btc转账#hash}'</con:query>
                    <con:assertion type="XPath Match" id="19c71012-72ba-48ea-aaa5-d5cff8443cc3"
                                   name="Match content of [DEPOSITLOG.WALLETADDR]">
                        <con:configuration>
                            <path>//Results[1]/ResultSet[1]/Row[1]/DEPOSITLOG.WALLETADDR[1]/text()</path>
                            <content>${#TestCase#入金地址}</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="XPath Match" id="182df64b-c9fb-4cbd-8667-8af14cfb03cc"
                                   name="Match content of [DEPOSITLOG.TXHASH]">
                        <con:configuration>
                            <path>//Results[1]/ResultSet[1]/Row[1]/DEPOSITLOG.TXHASH[1]/text()</path>
                            <content>${Run TestCase-btc转账#hash}</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:properties/>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询冷钱包余额" id="f2dc9d7f-f24b-4fe6-b9ee-33e37f2c68ac">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>29ade236-3a4b-4ff9-b703-aa7bf41d51c2</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>addresses</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","data":[{"address":"2N5x2Yr4pDcPpfBdrUdsp8LWQcdB2KVCyjX","amount":"0.0002"}]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言" id="2347832c-c69b-4aa6-a8a8-7ccdbf424338">
                <con:settings/>
                <con:config>
                    <script>def db_amount = context.expand(
                        '${JDBC Request-查询数据库入金记录表#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/DEPOSITLOG.AMOUNT[1]}'
                        ).toBigDecimal()
                        def 入金_amount = context.expand( '${确保余额足够#result}' ).toBigDecimal()
                        assert db_amount == 入金_amount

                        def 接口余额 = context.expand( '${Run TestCase-查询冷钱包余额#return_msg#$.data.data[0].amount}'
                        ).toBigDecimal()
                        def 链上余额 = context.expand( '${Run TestCase-记录账户交易后余额#amount}' ).toBigDecimal()
                        assert 链上余额 == 接口余额 * 1e+8


                        def 交易前余额 = context.expand( '${Run TestCase-记录账户当前余额#amount}' ).toBigDecimal()
                        def 交易后余额 = context.expand( '${Run TestCase-记录账户交易后余额#amount}' ).toBigDecimal()
                        def amount = context.expand( '${Run TestCase-btc转账#金额}' ).toBigDecimal()

                        //log.info 交易后余额

                        assert 交易前余额 + amount == 交易后余额
                    </script>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>入金地址</con:name>
                    <con:value>${#TestSuite#新用户地址}</con:value>
                </con:property>
                <con:property>
                    <con:name>voutTxid</con:name>
                    <con:value>4fed28126926b5f0e214c350f011ee4d071e7bf023cfd6cff5c525ce50944877</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>a7a7774a-27ef-4239-8539-5d2a6ea0a251</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>235435d3-7924-4784-a304-c3795877f187</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>1f5720b5-4b7e-4ded-8c76-f879606c5720</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>f7665af1-1f69-4eaf-8d7d-219f68fb2a8c</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="fafd4d98-098d-4261-8753-59d714f5c32b" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="出金申请" searchProperties="true">
            <con:settings>
                <con:setting id="f4ec3b44-64b5-4b17-8c38-907e5d52a9a0fileName">入金</con:setting>
                <con:setting id="a6968614-6e90-44c7-9249-123ab34f0338fileName">出金</con:setting>
                <con:setting id="4959fedf-13a7-462c-8af1-1e9734d9f36ffileName">足额出金</con:setting>
                <con:setting id="d5444faa-3fd0-4a32-b975-dfb75e39b227fileName">出金申请</con:setting>
                <con:setting id="50b9afd4-b593-45f8-ad8f-31b5eb9e982dfileName">出金申请</con:setting>
                <con:setting id="fafd4d98-098d-4261-8753-59d714f5c32bfileName">出金申请</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="清除retmsg" id="fbbb83d6-6f51-49b9-9c03-5061d89eef28">
                <con:settings/>
                <con:config>
                    <script>testRunner.testCase.setPropertyValue("ret_msg","");</script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 查询地址有效性" id="ac9fb6eb-2fa1-49e0-be3b-78a812e3ec98">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>2962146d-7878-4bdf-bb83-98e9a98f8d2c</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","is_valid":true}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言地址有效" id="68b5039a-5626-46a8-9028-9a2fb9001c17">
                <con:settings/>
                <con:config>
                    <script>def is_valid = context.expand( '${Run TestCase - 查询地址有效性#return_msg#$.data.is_valid}' )

                        assert is_valid == "true"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询出金账户余额" id="e97d9849-50af-4d1a-bfb0-692579d78415">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>20000</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="确保余额足够" id="ec786a40-20c2-429e-acd1-760fb8c68948">
                <con:settings/>
                <con:config>
                    <script>//def ont = context.expand( '${Run TestCase-查询出金账户余额#ont}' ).toBigDecimal()
                        def btc = context.expand( '${Run TestCase-查询出金账户余额#amount}' ).toBigDecimal()
                        def amount = context.expand( '${#TestSuite#amount}' ).toBigDecimal()

                        assert btc > amount

                        return amount / 1e+8
                        //assert ong > 1000000
                        //assert before_ont + amount == after_ont
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase -获取批次号" id="45254ccc-6efe-4a4f-8390-b97572b32b91">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>acd94a41-69ff-43e5-8575-d3421c6fb2c1</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>批次号</con:name>
                            <con:value>53</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>批次号</con:entry>
                    </con:returnProperties>
                    <con:runMode>SINGLETON_AND_WAIT</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-发起出金申请" id="2b5578c8-0fcf-4401-b22a-36e0dcbea6a4">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>8f58c9c9-5f0e-475c-a9bf-79a5947d7628</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>tx_id</con:name>
                            <con:value>autotest_${#TestSuite#币种}_withdrew_${Run TestCase -获取批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>from_addr</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>data</con:name>
                            <con:value>${#TestSuite#外部币池}:${确保余额足够#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","tx_id":"autotest_BTC_withdrew_53","txs":[{"fee":"0.0001","raw":"0200000001e6005e8b6d16ef102a994acf1d7eed993a25e22b3f60fa7b371b653045cd3b840000000000ffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","signer":"","tx_inputs":[{"amount":"0.0002","output_index":0,"prev_tx_id":"843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6","raw_input":"0100000001c7a1999edbf278fa33630c76334ac2822c1713ad7413a0e933c956d5f022b3f7010000006a47304402201cd0d8852f9d47569a9ecb608d31e0ea9c5dac0c774caa83d0f05cc31937f2390220427d93eafcd4f8143fefef8dd956297004a76a551589629ff3d10aee041d829b012103cf4b8ad1dbf57181f51d0395c766279cddc64c571cc6d015acfe35845ee68b04ffffffff02204e00000000000017a9148b5903f13b89e9728d8ee6736c3c90b32657101287805b6a03000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","script_pub_key":"a9148b5903f13b89e9728d8ee6736c3c90b32657101287","segwit":false}]}]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="382810ea-5a0b-40af-82fb-a33c45c87102">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>return_msg</con:sourceType>
                        <con:sourceStep>Run TestCase-发起出金申请</con:sourceStep>
                        <con:targetType>ret_msg</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言返回内容" id="b324c2be-0b70-48ae-846a-1695e79280c0">
                <con:settings/>
                <con:config>
                    <script>def code = context.expand( '${Run TestCase-发起出金申请#return_msg#$.code}' )
                        assert code == "0"
                        def return_msg = context.expand( '${Run TestCase-发起出金申请#return_msg}' )
                        //def txs = context.expand( '${Run TestCase-发起出金申请#return_msg#$.data.txs}' )
                        //def utxos = context.expand( '${Run TestCase-发起出金申请#return_msg#$.data.txs[0].tx_inputs}' )
                        //
                        testRunner.testCase.testSuite.testCases["出金确认"].setPropertyValue("出金申请ret_msg",return_msg);
                    </script>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>ret_msg</con:name>
                    <con:value>
                        {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","tx_id":"autotest_BTC_withdrew_53","txs":[{"fee":"0.0001","raw":"0200000001e6005e8b6d16ef102a994acf1d7eed993a25e22b3f60fa7b371b653045cd3b840000000000ffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","signer":"","tx_inputs":[{"amount":"0.0002","output_index":0,"prev_tx_id":"843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6","raw_input":"0100000001c7a1999edbf278fa33630c76334ac2822c1713ad7413a0e933c956d5f022b3f7010000006a47304402201cd0d8852f9d47569a9ecb608d31e0ea9c5dac0c774caa83d0f05cc31937f2390220427d93eafcd4f8143fefef8dd956297004a76a551589629ff3d10aee041d829b012103cf4b8ad1dbf57181f51d0395c766279cddc64c571cc6d015acfe35845ee68b04ffffffff02204e00000000000017a9148b5903f13b89e9728d8ee6736c3c90b32657101287805b6a03000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","script_pub_key":"a9148b5903f13b89e9728d8ee6736c3c90b32657101287","segwit":false}]}]}}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>a7a7774a-27ef-4239-8539-5d2a6ea0a251</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>4fe91578-5db9-4279-beaf-c1afd3f824f9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>c3fa974a-c2f3-4757-9742-c0da509a5147</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>ed1cfacc-0866-41bc-876b-ebe21ddc3199</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>fbbb83d6-6f51-49b9-9c03-5061d89eef28</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="51c43f8e-81a7-4f92-aeef-b2070aa8887f" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="出金确认" searchProperties="true">
            <con:settings>
                <con:setting id="f4ec3b44-64b5-4b17-8c38-907e5d52a9a0fileName">入金</con:setting>
                <con:setting id="a6968614-6e90-44c7-9249-123ab34f0338fileName">出金</con:setting>
                <con:setting id="4959fedf-13a7-462c-8af1-1e9734d9f36ffileName">足额出金</con:setting>
                <con:setting id="05f9d3be-8e36-45de-a3f4-38bc372e4bf1fileName">出金批次确认</con:setting>
                <con:setting id="51c43f8e-81a7-4f92-aeef-b2070aa8887ffileName">出金批次确认</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="清楚出金hash" id="508d74ab-5954-48eb-8d69-951dcc513008">
                <con:settings/>
                <con:config>
                    <script>testRunner.testCase.testSuite.setPropertyValue("出金hash","");</script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录源地址交易前余额" id="f9d02775-f456-45e1-a036-c8544333a1ce">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>0</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录目标地址余额" id="d2a033c7-df52-49c7-aa49-333978e0d1aa">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#外部币池}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>57311888</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询utxo" id="65833000-0f76-4a0c-8036-7b9c3fa78b6a">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>3f4cb9c8-2326-4497-a51e-a55801b12b4f</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value>
                                {"result":[{"txid":"843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6","vout":0,"address":"2N5x2Yr4pDcPpfBdrUdsp8LWQcdB2KVCyjX","account":"","redeemScript":"5221023d533943bb87ca1696ae4edda06434a202862fe1c75141b8e39469e4cbc50d142102536c8ddf98e73a5c94407012d51f021f8cd297cff07716ca1f8cddf2461fe22952ae","scriptPubKey":"a9148b5903f13b89e9728d8ee6736c3c90b32657101287","amount":0.00020000,"confirmations":10,"spendable":false,"solvable":true,"safe":true}],"error":null,"id":"yctest"}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="解析redeem" id="4f95bf63-c787-44f9-8bfe-6009bf6c3c8b">
                <con:settings/>
                <con:config>
                    <script>import groovy.json.JsonSlurper

                        def ret_msg = context.expand( '${#TestCase#出金申请ret_msg}' )
                        def raw = context.expand( '${#TestCase#出金申请ret_msg#$.data.txs[0].raw}' )

                        //def ret_msg = context.expand( '${Run TestCase-出金申请#ret_msg}' )
                        assert ret_msg != ""

                        def result = context.expand( '${Run TestCase-查询utxo#result#$.result}' )
                        def slurper = new JsonSlurper()
                        def json = slurper.parseText(result)
                        //def raw = context.expand( '${Run TestCase-出金申请#ret_msg#$.data.txs[0].raw}' )
                        def 多签地址私钥 = context.expand( '${#TestSuite#多签地址私钥}' )

                        def utxos = "["
                        for(def utxo : json){
                        def utxoStr = '''{
                        "txid":"''' + utxo.txid + '''",
                        "vout":''' + utxo.vout + ''',
                        "redeemScript":"''' + utxo.redeemScript + '''",
                        "scriptPubKey":"''' + utxo.scriptPubKey + '''",
                        "amount":"''' + utxo.amount + '''"
                        },'''
                        utxos = utxos + utxoStr
                        }
                        utxos = utxos[0..-2]
                        utxos = utxos + "]"

                        多签地址私钥 = 多签地址私钥.split(",")
                        def prikeySet = "["
                        for(def prikey : 多签地址私钥){
                        prikeySet = prikeySet + '''"''' + prikey + '''",'''
                        }
                        prikeySet = prikeySet[0..-2]
                        prikeySet = prikeySet + "]"

                        def params = '''[
                        "''' + raw + '''",''' + utxos + ''',''' + prikeySet + ''']'''
                        log.info params
                        return params
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 签名" id="a30f2815-017c-419c-a69d-8a20a9d86be4">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>30ed8e6b-6571-412b-b3e9-91096f0eae2b</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>params</con:name>
                            <con:value>${解析redeem#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value>
                                0200000001e6005e8b6d16ef102a994acf1d7eed993a25e22b3f60fa7b371b653045cd3b8400000000da004730440220423977592676070a316ae0bd9bcc62495e4998b36bfbaf965a95a52e453db9db022037fdc72b410c9bb85566f04047ca14ccd724a1fbf42f49f6f262abc3a05e9fc501483045022100b7f0c2f31bbd0d676c856c0188b93abd333dd74d646779b1b82bc3934914036402205a1a3eb65b6a8c58cdbc3cdcdf8514391e0cb24ea13bdebf69542a90482f495501475221023d533943bb87ca1696ae4edda06434a202862fe1c75141b8e39469e4cbc50d142102536c8ddf98e73a5c94407012d51f021f8cd297cff07716ca1f8cddf2461fe22952aeffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 出金确认" id="d6f3f5d8-e331-4b30-9b1b-4517336fbe02">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>16d6c2b6-e5e0-4ed7-a524-44957d97422b</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>tx_id</con:name>
                            <con:value>${#TestCase#出金申请ret_msg#$.data.tx_id}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>tx_contents</con:name>
                            <con:value>${Run TestCase - 签名#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>{"msg_id":"autotest","code":0,"msg":"","data":null}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="delay" name="Delay" id="fe51f5ab-6281-45dc-86cf-0e5962099b6d">
                <con:settings/>
                <con:config>
                    <delay>5000</delay>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="等待出金消息确认" id="2ce80e5a-41fa-4c42-885d-110a23c46332">
                <con:settings/>
                <con:config>
                    <script>def code = context.expand( '${Run TestCase - 出金确认#return_msg#$.code}' )
                        assert code == "0"

                        def 待确认批次号 = context.expand( '${Run TestCase - 出金确认#tx_id}' )
                        def 已确认批次号 = context.expand( '${#TestSuite#出金tx_id}' )

                        if(待确认批次号.equals(已确认批次号)){//表明获得消息返回
                        def txHash = context.expand( '${#TestSuite#出金hash}' )//获取hash值
                        return txHash
                        }else{
                        testRunner.gotoStepByName("Delay")
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="delay" name="Delay 1" id="ac0149e2-49b0-4827-9ce3-bbaf768f8ed4">
                <con:settings/>
                <con:config>
                    <delay>300000</delay>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询链上该币交易状态" id="f820a63f-89c1-4c01-8037-9c4352a6d452">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4f7f11b0-67ba-480b-8d74-44c5881ecf79</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>txid</con:name>
                            <con:value>${#TestSuite#出金hash}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>confirmations</con:name>
                            <con:value>3</con:value>
                        </con:property>
                        <con:property>
                            <con:name>fee</con:name>
                            <con:value>1.0E-4</con:value>
                        </con:property>
                        <con:property>
                            <con:name>voutindex</con:name>
                            <con:value>0</con:value>
                        </con:property>
                        <con:property>
                            <con:name>交易地址</con:name>
                            <con:value>${#TestSuite#多签地址}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>confirmations</con:entry>
                        <con:entry>fee</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="等待链上确认" id="a7aa344c-83c2-4dc5-b838-61d3cbeb1c09">
                <con:settings/>
                <con:config>
                    <script>def 交易哈希 = context.expand( '${Run TestCase-查询链上该币交易状态#txid}' )
                        def confirmations = context.expand( '${Run TestCase-查询链上该币交易状态#confirmations}' ).toInteger()

                        if(confirmations > 0){
                        log.info "上链"
                        }else{
                        log.info 交易哈希 + "未确认，等待"
                        testRunner.gotoStepByName("Delay 1")
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录源地址交易后余额" id="57d6a693-8aea-43c0-b035-b6082335aca9">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>0</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录目标地址当前余额" id="a429620b-7505-4fde-a766-7de5329ee635">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#外部币池}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>57311888</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="jdbc" name="JDBC Request-查询数据库出金记录表" id="c47c3583-43d0-410c-8704-de732fe89e85">
                <con:settings>
                    <con:setting id="prettyPrintResponse">true</con:setting>
                </con:settings>
                <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dbConnectionName>cus-test</con:dbConnectionName>
                    <con:driver>com.mysql.jdbc.Driver</con:driver>
                    <con:connectionString>jdbc:mysql://139.219.140.220:3306/wallet?user=custodian&amp;password=PASS_VALUE</con:connectionString>
                    <con:password>custodian</con:password>
                    <con:connectionProperties/>
                    <con:query>select * from withdrawallog where fromaddr = '${#TestSuite#新用户地址}' order by operatetime
                        desc limit 1
                    </con:query>
                    <con:assertion type="XPath Match" id="95cebba6-94ac-4f6e-9889-0efbf7b777f7"
                                   name="Match content of [WITHDRAWALLOG.HANDLINGFEE]">
                        <con:configuration>
                            <path>//Results[1]/ResultSet[1]/Row[1]/WITHDRAWALLOG.HANDLINGFEE[1]/text()</path>
                            <content>0.0001</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="XPath Match" id="96fef555-a6c5-4d68-a598-707b700e7fec"
                                   name="Match content of [WITHDRAWALLOG.TXHASH]">
                        <con:configuration>
                            <path>//Results[1]/ResultSet[1]/Row[1]/WITHDRAWALLOG.TXHASH[1]/text()</path>
                            <content>${#TestSuite#出金hash}</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="XPath Match" id="31e8e189-1963-4fea-a2ff-b057aa9cf4f5"
                                   name="Match content of [WITHDRAWALLOG.TXID]">
                        <con:configuration>
                            <path>//Results[1]/ResultSet[1]/Row[1]/WITHDRAWALLOG.TXID[1]/text()</path>
                            <content>${Run TestCase - 出金确认#tx_id}</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:properties/>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言金额正确" id="ee096649-c5ba-46a5-965e-489e7b60bee5">
                <con:settings/>
                <con:config>
                    <script>def srcBefore = context.expand( '${Run TestCase-记录源地址交易前余额#amount}' ).toBigDecimal()
                        def destBefore = context.expand( '${Run TestCase-记录目标地址余额#amount}' ).toBigDecimal()
                        def srcAfter = context.expand( '${Run TestCase-记录源地址交易后余额#amount}' ).toBigDecimal()
                        def destAfter = context.expand( '${Run TestCase-记录目标地址当前余额#amount}' ).toBigDecimal()
                        def fee = context.expand( '${Run TestCase-查询链上该币交易状态#fee}' ).toBigDecimal()
                        def feeDB = context.expand(
                        '${JDBC Request-查询数据库出金记录表#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/WITHDRAWALLOG.HANDLINGFEE[1]}'
                        ).toBigDecimal()

                        //
                        //log.info srcBefore
                        //log.info destBefore
                        //log.info srcAfter
                        //log.info destAfter
                        //log.info fee
                        assert feeDB == fee
                        assert (srcBefore - srcAfter) / 1e+8 - fee == (destAfter - destBefore) / 1e+8
                        //log.info ((before_src_btc - after_src_btc) / 1e+8)
                        //assert before_ont + amount == after_ont
                    </script>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>出金申请ret_msg</con:name>
                    <con:value>
                        {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","tx_id":"autotest_BTC_withdrew_53","txs":[{"fee":"0.0001","raw":"0200000001e6005e8b6d16ef102a994acf1d7eed993a25e22b3f60fa7b371b653045cd3b840000000000ffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","signer":"","tx_inputs":[{"amount":"0.0002","output_index":0,"prev_tx_id":"843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6","raw_input":"0100000001c7a1999edbf278fa33630c76334ac2822c1713ad7413a0e933c956d5f022b3f7010000006a47304402201cd0d8852f9d47569a9ecb608d31e0ea9c5dac0c774caa83d0f05cc31937f2390220427d93eafcd4f8143fefef8dd956297004a76a551589629ff3d10aee041d829b012103cf4b8ad1dbf57181f51d0395c766279cddc64c571cc6d015acfe35845ee68b04ffffffff02204e00000000000017a9148b5903f13b89e9728d8ee6736c3c90b32657101287805b6a03000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","script_pub_key":"a9148b5903f13b89e9728d8ee6736c3c90b32657101287","segwit":false}]}]}}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>a7a7774a-27ef-4239-8539-5d2a6ea0a251</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>4fe91578-5db9-4279-beaf-c1afd3f824f9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>c3fa974a-c2f3-4757-9742-c0da509a5147</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>ed1cfacc-0866-41bc-876b-ebe21ddc3199</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>a1397e60-c7a0-4997-8004-1561307ab2e6</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>94d76229-eb7e-4cce-801b-2973727ddd0c</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>7c750ec2-ba1f-478e-a197-fef445eab6e6</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>a22f4f5a-15e2-4f12-a054-369373ca5cee</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>f14975a2-cf6f-477c-9829-d802d9ab81e1</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>c40bc4f3-51ee-4fc6-a06e-97f1c95b1476</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>4f49758a-36f8-4dae-baf1-a367ad3565e3</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>3f3e653c-3e14-4422-ae7f-dc5f94c97b7f</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>2ff1ef9a-50de-4aea-995a-c38273faa58f</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>a33c5305-bfa6-4252-816b-11eebf9916bb</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>f820a63f-89c1-4c01-8037-9c4352a6d452</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>c47c3583-43d0-410c-8704-de732fe89e85</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>ee096649-c5ba-46a5-965e-489e7b60bee5</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>d2a033c7-df52-49c7-aa49-333978e0d1aa</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>57d6a693-8aea-43c0-b035-b6082335aca9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>ac0149e2-49b0-4827-9ce3-bbaf768f8ed4</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>f9d02775-f456-45e1-a036-c8544333a1ce</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>a429620b-7505-4fde-a766-7de5329ee635</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="4c6e78aa-5e15-414d-8ecd-a97366f1eb77" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="查询上报消息" searchProperties="true">
            <con:settings>
                <con:setting id="418e98ea-43e0-4a37-9be2-d35674c83b02fileName">历史消息查询</con:setting>
                <con:setting id="66a3df52-d59c-4db5-88e3-38c43997abb0fileName">历史消息查询</con:setting>
                <con:setting id="4c6e78aa-5e15-414d-8ecd-a97366f1eb77fileName">历史消息查询</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-历史消息查询" id="3ea5285c-1828-4e54-8cd0-bb59ea253241">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>82f9e8b9-c976-4128-bac1-a7607f0ad7ea</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg_id</con:name>
                            <con:value>BTC1550115815</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"method":"withdrawal_status","data":["{\"data\":\"7b226d73675f6964223a2242544331353530313135383135222c2264617461223a7b22636f696e5f74797065223a22425443222c2274785f6964223a226175746f746573745f4254435f77697468647265775f3332222c2274785f68617368223a2231613636653264616161333335336538613562303333663239313265363437616665363132343264313432653038633361633037323533303737383630323361222c2269735f73756363657373223a747275652c226d657373616765223a22227d7d\",\"hash\":\"9cad38386d663df26e51ef087fbfc814c7df8035ff79d3e3bdf8db6e39fcf854\",\"signature\":\"ea85c6cbf95db62b5cacdcba748b5a5aa7fe418ac2c005a0cdb939b6760eddc435dafe4a94ac530c5629207a4475a39e723aa1c399da0bb3d4c49aaa7a40f043\"}"]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="datasource" name="DataSource-查询数据库消息" id="ab23d2ea-fbe2-4629-9793-afc99fa2b265">
                <con:settings>
                    <con:setting id="com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep@prepared-properties">
                        &lt;xml-fragment/>
                    </con:setting>
                </con:settings>
                <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dataSource type="Data Connection">
                        <con:configuration>
                            <Connection>cus-test( QA )</Connection>
                            <query>Select sendmsglog.msgcontent as sendmsglog_msgcontent
                                From sendmsglog
                                Where sendmsglog.msgid = '${Run TestCase-历史消息查询#msg_id}'
                            </query>
                            <fetchSize/>
                            <stored-procedure>false</stored-procedure>
                        </con:configuration>
                    </con:dataSource>
                    <con:property>sendmsglog_msgcontent</con:property>
                    <con:restartOnRun>true</con:restartOnRun>
                </con:config>
            </con:testStep>
            <con:testStep type="datagen" name="DataGen" id="9d9c9c38-571f-4ef5-a29b-aae70af6cd20">
                <con:settings/>
                <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:property type="Number">
                        <con:configuration>
                            <start>-1</start>
                            <end>10000</end>
                            <step>1</step>
                            <pattern/>
                            <random>false</random>
                            <persist>false</persist>
                        </con:configuration>
                        <con:name>number</con:name>
                        <con:mode>STEP</con:mode>
                        <con:shared>false</con:shared>
                    </con:property>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言每个字段都一致" id="8f46fe90-ff39-421f-81fd-ca20d9cd0d8e">
                <con:settings/>
                <con:config>
                    <script>import groovy.json.JsonSlurper

                        def dataDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.data}' )
                        def hashDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.hash}' )
                        def signDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.signature}' )

                        def return_msg = context.expand( '${Run TestCase-历史消息查询#return_msg}' )
                        def slurper = new JsonSlurper()
                        def json = slurper.parseText(return_msg)
                        json = slurper.parseText(json.data.data[0])
                        def dataMSG = json.data
                        def hashMSG = json.hash
                        def signMSG = json.signature

                        assert dataMSG == dataDB
                        assert hashMSG == hashDB
                        assert signMSG == signDB
                        //log.info json.data

                        //def coinTypeDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.coinType}' )
                        //def hashDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.hash}' )
                        //def fromAddrDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.fromAddr}' )
                        //def exchangeCoinAddrDB = context.expand(
                        '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.exchangeCoinAddr}' )
                        //def rechargeAmountDB = context.expand(
                        '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.rechargeAmount}' )
                        //def rechargeTimeDB = context.expand(
                        '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.rechargeTime}' )
                        //def rechargeStatusDB = context.expand(
                        '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.rechargeStatus}' )
                        //
                        //def number = context.expand( '${DataGen#number}' )
                        ////log.info number
                        //String resultF = context.expand( '${Run TestCase-历史消息查询#message#$.result['+number+']}'
                        ).toString()
                        //resultF = resultF.getAt(1..resultF.size() - 1)
                        ////log.info resultF
                        //def slurper = new JsonSlurper()
                        //def json = slurper.parseText(resultF)
                        ////log.info json.hash
                        //assert coinTypeDB.equals( json.coinType)
                        //assert hashDB.equals( json.hash)
                        //assert fromAddrDB.equals( json.fromAddr)
                        //assert exchangeCoinAddrDB.equals( json.exchangeCoinAddr)
                        //assert rechargeAmountDB.equals( json.rechargeAmount)
                        //assert rechargeTimeDB.equals( json.rechargeTime)
                        //assert rechargeStatusDB.equals( json.rechargeStatus)
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="datasourceloop" name="DataSource Loop" id="4cd85dce-0cd2-47f9-8f94-c93f24a7cb63">
                <con:settings/>
                <con:config>
                    <dataSourceStep>DataSource-查询数据库消息</dataSourceStep>
                    <targetStep>DataGen</targetStep>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>636fe2ac-2dea-46fa-8a20-0cdf753fc9ee</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="91bf3c86-09fc-4489-a433-73818da3e557" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="查询请求消息" searchProperties="true">
            <con:settings>
                <con:setting id="418e98ea-43e0-4a37-9be2-d35674c83b02fileName">历史消息查询</con:setting>
                <con:setting id="66a3df52-d59c-4db5-88e3-38c43997abb0fileName">历史消息查询</con:setting>
                <con:setting id="4c6e78aa-5e15-414d-8ecd-a97366f1eb77fileName">历史消息查询</con:setting>
                <con:setting id="91bf3c86-09fc-4489-a433-73818da3e557fileName">查询请求消息</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-历史消息查询" id="66298458-8306-49c2-a4eb-8a2e9752c8a8">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>44a1af8d-10bf-40cb-bb4c-4ba5fa23f236</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg_id</con:name>
                            <con:value>20190126531904</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"method":"multisignaddress","data":["{\"msg_id\":\"20190126531904\",\"data\":{\"tx_id\":\"20190126113555105569\",\"coin_type\":\"BTC\",\"addr_info\":[{\"public_key\":\"0253f0df1ad6bc64a6e771884011d253488824ebdecb90262d9b137f0089baa361\",\"address\":\"\"},{\"public_key\":\"0253f0df1ad6bc64a6e771884011d253488824ebdecb90262d9b137f0089baa361\",\"address\":\"\"},{\"public_key\":\"026b5d1baa85e1a0b460ec63a002bae78686446371739ba2bb3ac5426ffc894011\",\"address\":\"\"}],\"required\":2}}"]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="datasource" name="DataSource-查询数据库消息" id="a5898f76-6b48-4f73-9bc6-1cbf33cec6ca">
                <con:settings>
                    <con:setting id="com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep@prepared-properties">
                        &lt;xml-fragment/>
                    </con:setting>
                </con:settings>
                <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dataSource type="Data Connection">
                        <con:configuration>
                            <Connection>cus-test( QA )</Connection>
                            <query>Select recvmsglog.msgcontent as recvmsglog_msgcontent
                                From recvmsglog
                                Where recvmsglog.msgid = '${Run TestCase-历史消息查询#msg_id}'
                            </query>
                            <fetchSize/>
                            <stored-procedure>false</stored-procedure>
                        </con:configuration>
                    </con:dataSource>
                    <con:property>recvmsglog_msgcontent</con:property>
                    <con:restartOnRun>true</con:restartOnRun>
                </con:config>
            </con:testStep>
            <con:testStep type="datagen" name="DataGen" id="7e0b1dec-20ab-4429-93d3-7dddc287972b">
                <con:settings/>
                <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:property type="Number">
                        <con:configuration>
                            <start>-1</start>
                            <end>10000</end>
                            <step>1</step>
                            <pattern/>
                            <random>false</random>
                            <persist>false</persist>
                        </con:configuration>
                        <con:name>number</con:name>
                        <con:mode>STEP</con:mode>
                        <con:shared>false</con:shared>
                    </con:property>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言每个字段都一致" id="9b3eacad-ae3f-4185-acf3-d653e30dd059">
                <con:settings/>
                <con:config>
                    <script>import groovy.json.JsonSlurper

                        //def dataDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.data}' )
                        //def hashDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.hash}' )
                        //def signDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.signature}' )

                        def return_msg = context.expand( '${Run TestCase-历史消息查询#return_msg}' )
                        def slurper = new JsonSlurper()
                        def json1 = slurper.parseText(return_msg)
                        json1 = slurper.parseText(json1.data.data[0])

                        //log.info json1
                        def db_msg = context.expand( '${DataSource-查询数据库消息#recvmsglog_msgcontent}' )
                        def json2 = slurper.parseText(db_msg)
                        //log.info json2

                        assert json1 == json2
                        //def dataMSG = json.data
                        //def hashMSG = json.hash
                        //def signMSG = json.signature
                        //
                        //assert dataMSG == dataDB
                        //assert hashMSG == hashDB
                        //assert signMSG == signDB
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="datasourceloop" name="DataSource Loop" id="075dc30d-a818-4776-ae94-08d0044219a6">
                <con:settings/>
                <con:config>
                    <dataSourceStep>DataSource-查询数据库消息</dataSourceStep>
                    <targetStep>DataGen</targetStep>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>636fe2ac-2dea-46fa-8a20-0cdf753fc9ee</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="5547b8f8-3dbb-49eb-adab-b89b5c16b4e7" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="紧急停止部分出金，出金申请失败" searchProperties="true">
            <con:settings>
                <con:setting id="44ab24e1-566b-40ce-93ac-ce653c180600fileName">紧急停止出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="04ea64c3-356d-4982-b3b4-2bc7fb8e750ffileName">紧急停止部分出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="5547b8f8-3dbb-49eb-adab-b89b5c16b4e7fileName">紧急停止部分出金%EF%BC%8C出金申请失败</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="calltestcase" name="Run TestCase-出金紧急暂停" id="5813f58c-93ef-4c71-821e-748c17d8529b">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>10a9ce98-a7f3-4649-b7cd-a96fc43f907d</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>level</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coins</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":false,"is_stopped":true,"message":""}]}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 出金申请" id="f2811e64-ba7a-4bf2-a457-d504e68e06df">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>fafd4d98-098d-4261-8753-59d714f5c32b</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>ret_msg</con:name>
                            <con:value>{"msg_id":"autotest","code":1,"msg":"stop BTC withdrawal","data":null}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>ret_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言message" id="a33c5305-bfa6-4252-816b-11eebf9916bb">
                <con:settings/>
                <con:config>
                    <script>def message = context.expand( '${Run TestCase - 出金申请#ret_msg#$.msg}' )

                        assert message == "stop BTC withdrawal"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-获取批次号" id="b283c2fd-92e5-4236-b99b-8544a4af5caa"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>5c18318b-220a-4fe4-a029-c6fbe8aaa834</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>批次号</con:name>
                            <con:value>37</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>批次号</con:entry>
                    </con:returnProperties>
                    <con:runMode>SINGLETON_AND_WAIT</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-出金重新开启" id="597de8c4-28a5-48ae-9061-4761ab70ee7e">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>966f34c8-c400-475b-913e-d6f3ca7d7ea7</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>level</con:name>
                            <con:value>2</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coins</con:name>
                            <con:value/>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":true,"is_stopped":false,"message":""}]}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="6b76ffbc-10dc-4967-ad74-57eb6a31d052" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="紧急停止部分出金，出金确认失败" searchProperties="true">
            <con:settings>
                <con:setting id="44ab24e1-566b-40ce-93ac-ce653c180600fileName">紧急停止出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="04ea64c3-356d-4982-b3b4-2bc7fb8e750ffileName">紧急停止部分出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="5547b8f8-3dbb-49eb-adab-b89b5c16b4e7fileName">紧急停止部分出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="6b76ffbc-10dc-4967-ad74-57eb6a31d052fileName">紧急停止部分出金%EF%BC%8C出金确认失败</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase - 出金申请" id="f2691b76-d299-4dca-a78d-6c05adb81560">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>fafd4d98-098d-4261-8753-59d714f5c32b</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>ret_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","tx_id":"autotest_BTC_withdrew_48","txs":[{"fee":"0.0001","raw":"020000000242491b1d01dd25a5bfa9891fd67067f3607fcc0d9954ad2b22d8a0f8b25ab2bb0000000000ffffffff52f43d1ec87119222aaba9eb6ffc6fbfa72b1e990e9198dcc8ad42000ddb8fb50000000000ffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","signer":"","tx_inputs":[{"amount":"0.0001","output_index":0,"prev_tx_id":"bbb25ab2f8a0d8222bad54990dcc7f60f36770d61f89a9bfa525dd011d1b4942","raw_input":"0100000001e5fe70c4cd7ba30d49b8ffd94f3c0ab5254ba28019360ab1c94587e2a40521ac010000006b483045022100fced1f6c4582cc479db99f7e2e33573d0f2fdc66576092b9446a3cc82bba971d02207fb62987a528c5aa1e864d20d18bb2c543b83a181f2c044ae92abee633b450b3012103cf4b8ad1dbf57181f51d0395c766279cddc64c571cc6d015acfe35845ee68b04ffffffff02102700000000000017a9148fe1b40471adb723dd3feee5fba788c0b26993a187a06d7403000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","script_pub_key":"a9148fe1b40471adb723dd3feee5fba788c0b26993a187","segwit":false},{"amount":"0.0001","output_index":0,"prev_tx_id":"b58fdb0d0042adc8dc98910e991e2ba7bf6ffc6feba9ab2a221971c81e3df452","raw_input":"010000000142491b1d01dd25a5bfa9891fd67067f3607fcc0d9954ad2b22d8a0f8b25ab2bb010000006b483045022100a225417bb467abfed7821c66bc5aa4699cfdf2d5345f8ffd01c74799244c308a02201de11bbf952ab17f4b3562dcb42a2aec5db19d544d6cd45d510a85b69245d57e012103cf4b8ad1dbf57181f51d0395c766279cddc64c571cc6d015acfe35845ee68b04ffffffff02102700000000000017a9148fe1b40471adb723dd3feee5fba788c0b26993a187f0bf7203000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","script_pub_key":"a9148fe1b40471adb723dd3feee5fba788c0b26993a187","segwit":false}]}]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>ret_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-出金紧急暂停" id="8d51e1b8-18fc-460a-b931-72d661b3a9e2">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>10a9ce98-a7f3-4649-b7cd-a96fc43f907d</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>level</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coins</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":false,"is_stopped":true,"message":""}]}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="Groovy Script" id="c8e2e661-6786-41ab-99f4-85bda5a511f1">
                <con:settings/>
                <con:config>
                    <script>def ret_msg = context.expand( '${Run TestCase - 出金申请#ret_msg}' )
                        log.info ret_msg
                        return ret_msg
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 出金确认" id="00d5e291-3811-4e5b-825f-f8a462629703">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>51c43f8e-81a7-4f92-aeef-b2070aa8887f</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>出金申请ret_msg</con:name>
                            <con:value>${Groovy Script#result}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>确认ret_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言message" id="2be7367f-20cd-4744-94cd-904de79c7510">
                <con:settings/>
                <con:config>
                    <script>def message = context.expand( '${Run TestCase - 出金确认#确认ret_msg#$.msg}' )

                        assert message == "stop BTC withdrawal"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-获取批次号" id="afc684c8-772f-4feb-8f31-9dca99ff32af"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>5c18318b-220a-4fe4-a029-c6fbe8aaa834</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>批次号</con:name>
                            <con:value>37</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>批次号</con:entry>
                    </con:returnProperties>
                    <con:runMode>SINGLETON_AND_WAIT</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-出金重新开启" id="122b3c5e-a348-4699-a042-146eca42894d">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>966f34c8-c400-475b-913e-d6f3ca7d7ea7</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>level</con:name>
                            <con:value>2</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coins</con:name>
                            <con:value/>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":true,"is_stopped":false,"message":""}]}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="b2317c8c-d3f7-44f6-9f37-6b7c9d5e527f" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="入金对账(需手动)" searchProperties="true">
            <con:settings>
                <con:setting id="f4ec3b44-64b5-4b17-8c38-907e5d52a9a0fileName">入金</con:setting>
                <con:setting id="ba3c6283-b7bc-4e5d-9f5d-655c5d7cfc6afileName">对账</con:setting>
                <con:setting id="2cee2f1c-af30-4d01-978a-5564d1cffa7efileName">对账</con:setting>
                <con:setting id="0c76d1af-f21d-4f5c-89e7-fd6e6081a056fileName">入金对账%28需手动%29</con:setting>
                <con:setting id="b2317c8c-d3f7-44f6-9f37-6b7c9d5e527ffileName">入金对账%28需手动%29</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase - 对账接口" id="9b6c4e11-726e-4f7f-b62d-0f7802ce4201">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>ab8906a1-3b94-4f94-9388-53060c708f33</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>type</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>begin_time</con:name>
                            <con:value>1543557431</con:value>
                        </con:property>
                        <con:property>
                            <con:name>end_time</con:name>
                            <con:value>1555682623</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"","code":0,"msg":"","data":{"url":"https://139.219.129.26:40339/files/19700101_19700101.csv"}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-入金对账请求" id="44572457-7c01-400d-93c2-301467cfde6e"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>76c2f8a4-951f-494a-a0c8-24a2ef178edf</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>message</con:name>
                            <con:value>http://42.159.155.44:40339/files/in_20181130_20181213.csv</con:value>
                        </con:property>
                        <con:property>
                            <con:name>出入金类型</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>开始时间</con:name>
                            <con:value>${#TestCase#开始时间}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>结束时间</con:name>
                            <con:value>${#TestCase#结束时间}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>message</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="downloadFiles" id="b4977f81-b604-4705-8536-c8b08407de45"
                          disabled="true">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="7cb833ac-d086-4a55-822c-1e32247da54c"
                            name="downloadFiles" postQueryString="false" mediaType="application/xml"
                            downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>${Run TestCase-入金对账请求#message}</con:endpoint>
                    <con:request/>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:attachment>
                        <con:name>in_20181123_201811302632195037889636840.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811302632195037889636840.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811302632195037889636840.csv</con:url>
                        <con:id>3dd14eff-f8fc-4a28-8068-ecd849977964</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811306076817833798337393.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811306076817833798337393.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811306076817833798337393.csv</con:url>
                        <con:id>992bc5e0-b566-4374-b01d-36ea0e96d504</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811303985836226281124064.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811303985836226281124064.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811303985836226281124064.csv</con:url>
                        <con:id>2ebe6144-4472-4b4d-a721-8d2d24a8c111</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_20181130485091523965045405.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_20181130485091523965045405.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_20181130485091523965045405.csv</con:url>
                        <con:id>0160aa49-428d-4906-a9d1-925e7d2d4955</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811303528880127235685249.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811303528880127235685249.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811303528880127235685249.csv</con:url>
                        <con:id>c7fbee5d-c2e4-4711-8128-666e1d160d96</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201812131665968294907385453.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201812131665968294907385453.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201812131665968294907385453.csv</con:url>
                        <con:id>4aea7354-bcb3-43b1-8a38-841515232bb3</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181130_201812136822892826078680293.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181130_201812136822892826078680293.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181130_201812136822892826078680293.csv</con:url>
                        <con:id>71f7e8b1-0222-4ffb-a393-ebf2b08dfdfe</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181130_201812131314383023288728051.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181130_201812131314383023288728051.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181130_201812131314383023288728051.csv</con:url>
                        <con:id>4bcfc397-214d-4319-beff-1bac981104a8</con:id>
                    </con:attachment>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="jdbc" name="JDBC Request-查询入金表" id="007f2356-b77a-4781-8901-f598958d49b9">
                <con:settings>
                    <con:setting id="prettyPrintResponse">true</con:setting>
                </con:settings>
                <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dbConnectionName>cus-test</con:dbConnectionName>
                    <con:driver>com.mysql.jdbc.Driver</con:driver>
                    <con:connectionString>jdbc:mysql://139.219.140.220:3306/wallet?user=custodian&amp;password=PASS_VALUE</con:connectionString>
                    <con:password>custodian</con:password>
                    <con:connectionProperties/>
                    <con:query>SELECT * FROM `depositlog` where operatetime >= '${#TestCase#开始时间}' and operatetime &lt;=
                        '${#TestCase#结束时间}'
                    </con:query>
                    <con:properties/>
                </con:config>
            </con:testStep>
            <con:testStep type="datasource" name="DataSource" id="15448fb8-086d-44a4-afa5-df8df4a0e7c5">
                <con:settings/>
                <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dataSource type="Excel">
                        <con:configuration>
                            <file>C:/Users/DELL/Desktop/in_20181130_201812131314383023288728051.xlsx</file>
                            <worksheet/>
                            <cell>A9</cell>
                            <ignoreEmpty>false</ignoreEmpty>
                            <evaluateFormulas>false</evaluateFormulas>
                        </con:configuration>
                    </con:dataSource>
                    <con:property>Serialnumber</con:property>
                    <con:property>businessNo</con:property>
                    <con:property>coinType</con:property>
                    <con:property>txType</con:property>
                    <con:property>amount</con:property>
                    <con:property>handlingfee</con:property>
                    <con:property>time</con:property>
                    <con:property>fromAddr</con:property>
                    <con:property>destAddr</con:property>
                    <con:restartOnRun>true</con:restartOnRun>
                </con:config>
            </con:testStep>
            <con:testStep type="datagen" name="DataGen" id="deee21e0-0148-4572-8fdb-d84f162d9da8">
                <con:settings/>
                <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:property type="Number">
                        <con:configuration>
                            <start>0</start>
                            <end>10000</end>
                            <step>1</step>
                            <pattern/>
                            <random>false</random>
                            <persist>false</persist>
                        </con:configuration>
                        <con:name>number</con:name>
                        <con:mode>STEP</con:mode>
                        <con:shared>false</con:shared>
                    </con:property>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言字段一致" id="9b5bf32e-71ad-4544-bda9-2adf6254ec96">
                <con:settings/>
                <con:config>
                    <script>import java.text.SimpleDateFormat

                        def number = context.expand( '${DataGen#number}' )
                        log.info number
                        //String resultF = context.expand( '${Run TestCase-业务操作状态查询#message#$.result['+number+']}'
                        ).toString()
                        def coinTypeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.COINTYPE[1]}'
                        )
                        def fromAddrDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.FROMADDR[1]}'
                        )
                        def amountDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.AMOUNT[1]}'
                        ).toBigDecimal()
                        def handlingfeeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.HANDLINGFEE[1]}'
                        ).toBigDecimal()
                        def timeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.OPERATETIME[1]}'
                        ).toLong()
                        def destAddrDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.LEDGERADDR[1]}'
                        )

                        def coinTypeF = context.expand( '${DataSource#coinType}' )
                        def amountF = context.expand( '${DataSource#amount}' ).toBigDecimal()
                        def handlingfeeF = context.expand( '${DataSource#handlingfee}' ).toBigDecimal()
                        def timeF = context.expand( '${DataSource#time}' )
                        def fromAddrF = context.expand( '${DataSource#fromAddr}' )
                        def destAddrF = context.expand( '${DataSource#destAddr}' )
                        //2018-11-29 04:38:08
                        //log.info timeDB
                        Date date = new Date(timeDB*1000)
                        time = date.format("yyyy-MM-d aH:mm", TimeZone.getTimeZone('UTC'))
                        //log.info time

                        assert coinTypeDB.equals(coinTypeF)
                        assert fromAddrDB.equals(fromAddrF)
                        assert destAddrDB.equals(destAddrF)
                        assert timeF.equals( time)
                        assert handlingfeeDB== handlingfeeF
                        assert amountDB == amountF


                        //def slurper = new JsonSlurper()
                        //def json = slurper.parseText(resultF)
                        ////log.info json.hash
                        //assert coinTypeDB.equals( json.coinType)
                        //assert hashDB.equals( json.hash)
                        //assert fromAddrDB.equals( json.fromAddr)
                        //assert exchangeCoinAddrDB.equals( json.exchangeCoinAddr)
                        //assert rechargeAmountDB.equals( json.rechargeAmount)
                        //assert rechargeTimeDB.equals( json.rechargeTime)
                        //assert rechargeStatusDB.equals( json.rechargeStatus)
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="datasourceloop" name="DataSource Loop" id="b53608e6-5305-44ea-95b4-448ec7028429">
                <con:settings/>
                <con:config>
                    <dataSourceStep>DataSource</dataSourceStep>
                    <targetStep>DataGen</targetStep>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>开始时间</con:name>
                    <con:value>1543557431</con:value>
                </con:property>
                <con:property>
                    <con:name>结束时间</con:name>
                    <con:value>1555682623</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>a7a7774a-27ef-4239-8539-5d2a6ea0a251</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>98e737a2-9945-4e80-aea7-275105cb8643</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>cd153609-10e9-4c8b-84e5-41cd73120943</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>179adbec-b8f9-4da4-bd7c-b6988fdbf8e9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="1ac3cdb7-fd7c-4659-a43e-de64eba0940e" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="出金对账(需手动)" searchProperties="true">
            <con:settings>
                <con:setting id="f4ec3b44-64b5-4b17-8c38-907e5d52a9a0fileName">入金</con:setting>
                <con:setting id="ba3c6283-b7bc-4e5d-9f5d-655c5d7cfc6afileName">对账</con:setting>
                <con:setting id="2cee2f1c-af30-4d01-978a-5564d1cffa7efileName">对账</con:setting>
                <con:setting id="0c76d1af-f21d-4f5c-89e7-fd6e6081a056fileName">入金对账%28需手动%29</con:setting>
                <con:setting id="b2317c8c-d3f7-44f6-9f37-6b7c9d5e527ffileName">入金对账%28需手动%29</con:setting>
                <con:setting id="1ac3cdb7-fd7c-4659-a43e-de64eba0940efileName">出金对账%28需手动%29</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase - 对账接口" id="5f97762b-2aad-4280-8b52-9ea42cd31f11">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>ab8906a1-3b94-4f94-9388-53060c708f33</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>type</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>begin_time</con:name>
                            <con:value>1543557431</con:value>
                        </con:property>
                        <con:property>
                            <con:name>end_time</con:name>
                            <con:value>1555682623</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"","code":0,"msg":"","data":{"url":"https://139.219.129.26:40339/files/19700101_19700101.csv"}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-入金对账请求" id="9355244c-e176-433c-a9d9-b543bb876cff"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>76c2f8a4-951f-494a-a0c8-24a2ef178edf</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>message</con:name>
                            <con:value>http://42.159.155.44:40339/files/in_20181130_20181213.csv</con:value>
                        </con:property>
                        <con:property>
                            <con:name>出入金类型</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>开始时间</con:name>
                            <con:value>${#TestCase#开始时间}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>结束时间</con:name>
                            <con:value>${#TestCase#结束时间}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>message</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="downloadFiles" id="21793e23-9831-468f-840e-8bd87f6984cc"
                          disabled="true">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="7cb833ac-d086-4a55-822c-1e32247da54c"
                            name="downloadFiles" postQueryString="false" mediaType="application/xml"
                            downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>${Run TestCase-入金对账请求#message}</con:endpoint>
                    <con:request/>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:attachment>
                        <con:name>in_20181123_201811302632195037889636840.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811302632195037889636840.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811302632195037889636840.csv</con:url>
                        <con:id>3dd14eff-f8fc-4a28-8068-ecd849977964</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811306076817833798337393.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811306076817833798337393.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811306076817833798337393.csv</con:url>
                        <con:id>992bc5e0-b566-4374-b01d-36ea0e96d504</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811303985836226281124064.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811303985836226281124064.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811303985836226281124064.csv</con:url>
                        <con:id>2ebe6144-4472-4b4d-a721-8d2d24a8c111</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_20181130485091523965045405.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_20181130485091523965045405.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_20181130485091523965045405.csv</con:url>
                        <con:id>0160aa49-428d-4906-a9d1-925e7d2d4955</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811303528880127235685249.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811303528880127235685249.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811303528880127235685249.csv</con:url>
                        <con:id>c7fbee5d-c2e4-4711-8128-666e1d160d96</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201812131665968294907385453.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201812131665968294907385453.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201812131665968294907385453.csv</con:url>
                        <con:id>4aea7354-bcb3-43b1-8a38-841515232bb3</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181130_201812136822892826078680293.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181130_201812136822892826078680293.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181130_201812136822892826078680293.csv</con:url>
                        <con:id>71f7e8b1-0222-4ffb-a393-ebf2b08dfdfe</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181130_201812131314383023288728051.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181130_201812131314383023288728051.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181130_201812131314383023288728051.csv</con:url>
                        <con:id>4bcfc397-214d-4319-beff-1bac981104a8</con:id>
                    </con:attachment>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="jdbc" name="JDBC Request-查询入金表" id="9ecc6049-7327-410a-93cc-cf00ef4b9ab2">
                <con:settings>
                    <con:setting id="prettyPrintResponse">true</con:setting>
                </con:settings>
                <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dbConnectionName>cus-test</con:dbConnectionName>
                    <con:driver>com.mysql.jdbc.Driver</con:driver>
                    <con:connectionString>jdbc:mysql://139.219.140.220:3306/wallet?user=custodian&amp;password=PASS_VALUE</con:connectionString>
                    <con:password>custodian</con:password>
                    <con:connectionProperties/>
                    <con:query>SELECT * FROM `depositlog` where operatetime >= '${#TestCase#开始时间}' and operatetime &lt;=
                        '${#TestCase#结束时间}'
                    </con:query>
                    <con:properties/>
                </con:config>
            </con:testStep>
            <con:testStep type="datasource" name="DataSource" id="c43143de-4b42-44a5-b29f-e85d61f1adfe">
                <con:settings/>
                <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dataSource type="Excel">
                        <con:configuration>
                            <file>C:/Users/DELL/Desktop/in_20181130_201812131314383023288728051.xlsx</file>
                            <worksheet/>
                            <cell>A9</cell>
                            <ignoreEmpty>false</ignoreEmpty>
                            <evaluateFormulas>false</evaluateFormulas>
                        </con:configuration>
                    </con:dataSource>
                    <con:property>Serialnumber</con:property>
                    <con:property>businessNo</con:property>
                    <con:property>coinType</con:property>
                    <con:property>txType</con:property>
                    <con:property>amount</con:property>
                    <con:property>handlingfee</con:property>
                    <con:property>time</con:property>
                    <con:property>fromAddr</con:property>
                    <con:property>destAddr</con:property>
                    <con:restartOnRun>true</con:restartOnRun>
                </con:config>
            </con:testStep>
            <con:testStep type="datagen" name="DataGen" id="e57d7f24-ddce-4bfa-b0b2-6e571dc35c8c">
                <con:settings/>
                <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:property type="Number">
                        <con:configuration>
                            <start>0</start>
                            <end>10000</end>
                            <step>1</step>
                            <pattern/>
                            <random>false</random>
                            <persist>false</persist>
                        </con:configuration>
                        <con:name>number</con:name>
                        <con:mode>STEP</con:mode>
                        <con:shared>false</con:shared>
                    </con:property>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言字段一致" id="61ecc59c-779a-47bd-87c8-bb542aaea4f7">
                <con:settings/>
                <con:config>
                    <script>import java.text.SimpleDateFormat

                        def number = context.expand( '${DataGen#number}' )
                        log.info number
                        //String resultF = context.expand( '${Run TestCase-业务操作状态查询#message#$.result['+number+']}'
                        ).toString()
                        def coinTypeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.COINTYPE[1]}'
                        )
                        def fromAddrDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.FROMADDR[1]}'
                        )
                        def amountDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.AMOUNT[1]}'
                        ).toBigDecimal()
                        def handlingfeeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.HANDLINGFEE[1]}'
                        ).toBigDecimal()
                        def timeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.OPERATETIME[1]}'
                        ).toLong()
                        def destAddrDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.LEDGERADDR[1]}'
                        )

                        def coinTypeF = context.expand( '${DataSource#coinType}' )
                        def amountF = context.expand( '${DataSource#amount}' ).toBigDecimal()
                        def handlingfeeF = context.expand( '${DataSource#handlingfee}' ).toBigDecimal()
                        def timeF = context.expand( '${DataSource#time}' )
                        def fromAddrF = context.expand( '${DataSource#fromAddr}' )
                        def destAddrF = context.expand( '${DataSource#destAddr}' )
                        //2018-11-29 04:38:08
                        //log.info timeDB
                        Date date = new Date(timeDB*1000)
                        time = date.format("yyyy-MM-d aH:mm", TimeZone.getTimeZone('UTC'))
                        //log.info time

                        assert coinTypeDB.equals(coinTypeF)
                        assert fromAddrDB.equals(fromAddrF)
                        assert destAddrDB.equals(destAddrF)
                        assert timeF.equals( time)
                        assert handlingfeeDB== handlingfeeF
                        assert amountDB == amountF


                        //def slurper = new JsonSlurper()
                        //def json = slurper.parseText(resultF)
                        ////log.info json.hash
                        //assert coinTypeDB.equals( json.coinType)
                        //assert hashDB.equals( json.hash)
                        //assert fromAddrDB.equals( json.fromAddr)
                        //assert exchangeCoinAddrDB.equals( json.exchangeCoinAddr)
                        //assert rechargeAmountDB.equals( json.rechargeAmount)
                        //assert rechargeTimeDB.equals( json.rechargeTime)
                        //assert rechargeStatusDB.equals( json.rechargeStatus)
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="datasourceloop" name="DataSource Loop" id="c3a27c12-bb7c-4037-ab51-2f2d4876de6f">
                <con:settings/>
                <con:config>
                    <dataSourceStep>DataSource</dataSourceStep>
                    <targetStep>DataGen</targetStep>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>开始时间</con:name>
                    <con:value>1543557431</con:value>
                </con:property>
                <con:property>
                    <con:name>结束时间</con:name>
                    <con:value>1555682623</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>a7a7774a-27ef-4239-8539-5d2a6ea0a251</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>98e737a2-9945-4e80-aea7-275105cb8643</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>cd153609-10e9-4c8b-84e5-41cd73120943</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>179adbec-b8f9-4da4-bd7c-b6988fdbf8e9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="acd94a41-69ff-43e5-8575-d3421c6fb2c1" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="获取批次号" searchProperties="true" disabled="true">
            <con:settings>
                <con:setting id="c1d08213-77c7-440c-9215-9d46d61083b1fileName">获取批次号</con:setting>
                <con:setting id="5c18318b-220a-4fe4-a029-c6fbe8aaa834fileName">获取批次号</con:setting>
                <con:setting id="acd94a41-69ff-43e5-8575-d3421c6fb2c1fileName">获取批次号</con:setting>
            </con:settings>
            <con:testStep type="datagen" name="DataGen" id="ad659b76-b0b0-43b6-929c-1fecd4d1ca87">
                <con:settings/>
                <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:property type="Number">
                        <con:configuration>
                            <start>0</start>
                            <end>100000</end>
                            <step>1</step>
                            <pattern/>
                            <random>false</random>
                            <persist>true</persist>
                            <current>114.0</current>
                        </con:configuration>
                        <con:name>批次号</con:name>
                        <con:mode>STEP</con:mode>
                        <con:shared>true</con:shared>
                    </con:property>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="6204b742-0992-4058-8675-4fcf66986251">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>批次号</con:name>
                        <con:sourceType>批次号</con:sourceType>
                        <con:sourceStep>DataGen</con:sourceStep>
                        <con:targetType>批次号</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:type>XQUERY</con:type>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>批次号</con:name>
                    <con:value>62</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>bf47f906-e4a4-4ff1-9931-e3c720caefcc</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>b7ef4be3-f800-4a0f-a224-219ff640a91a</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>6a4dbbc3-9612-4696-8564-2a820a4731ca</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>4dd75fd3-8a61-4d4d-9a85-32e203151264</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>76e903e6-0906-47ca-9a1d-93225139802e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>f2691b76-d299-4dca-a78d-6c05adb81560</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>2be7367f-20cd-4744-94cd-904de79c7510</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
    </con:testSuite>
    <con:testSuite id="30c713fe-dc07-4e9f-9826-ada833fcb955" name="LTC冒烟用例">
        <con:settings>
            <con:setting id="0737d4d2-65b1-4f1c-a20c-5f2093cc2e97fileName">ONT钱包服务</con:setting>
            <con:setting id="45435b0a-c995-425e-9f63-fe171bf14aecfileName">ONT冒烟用例</con:setting>
            <con:setting id="30fd042b-b0ba-459b-825b-5fd8b39fe70efileName">BTC冒烟用例1</con:setting>
            <con:setting id="IncludeOverview">true</con:setting>
            <con:setting id="IncludeResults">true</con:setting>
            <con:setting id="FlowLayout">false</con:setting>
            <con:setting id="ErrorDetails">true</con:setting>
            <con:setting id="IncludeCoverage">true</con:setting>
            <con:setting id="b1100d65-6e85-44c0-9252-2727ec8be875fileName">BTC冒烟用例</con:setting>
            <con:setting id="30c713fe-dc07-4e9f-9826-ada833fcb955fileName">LTC冒烟用例</con:setting>
        </con:settings>
        <con:savedRecentRuns>1</con:savedRecentRuns>
        <con:runType>SEQUENTIAL</con:runType>
        <con:properties>
            <con:property>
                <con:name>币种</con:name>
                <con:value>LTC</con:value>
            </con:property>
            <con:property>
                <con:name>返回tx_id</con:name>
                <con:value>autotest_LTC_2</con:value>
            </con:property>
            <con:property>
                <con:name>入金amount</con:name>
                <con:value>20000</con:value>
            </con:property>
            <con:property>
                <con:name>amount</con:name>
                <con:value>10000</con:value>
            </con:property>
            <con:property>
                <con:name>外部币池</con:name>
                <con:value>msgrPLKzTz2j8oZ9ruLbnjKu1K219mnGZf</con:value>
            </con:property>
            <con:property>
                <con:name>外部币池私钥</con:name>
                <con:value>cMmeobe2QuWuUTpMYyAsByg9gf1BiFpfYumb3r2KgxJVJTQnn4Dc</con:value>
            </con:property>
            <con:property>
                <con:name>新用户地址</con:name>
                <con:value>QU4Dg7VY4Vxearo5hq7i9BNXKHwhAsvGTE</con:value>
            </con:property>
            <con:property>
                <con:name>出金tx_id</con:name>
                <con:value>autotest_BTC_withdrew_53</con:value>
            </con:property>
            <con:property>
                <con:name>单签地址1</con:name>
                <con:value>mvr775RjK1uXnyuXCx8kcZjorFLCMQb5fN</con:value>
            </con:property>
            <con:property>
                <con:name>单签地址2</con:name>
                <con:value>mq19Kf19Q937XKEmoR2ZruMerRTYudczeh</con:value>
            </con:property>
            <con:property>
                <con:name>单签地址3</con:name>
                <con:value>mvWDkHtuMLY4PKyxGi2onknDEbS1MULyhj</con:value>
            </con:property>
            <con:property>
                <con:name>单签地址4</con:name>
                <con:value>miTwLTmLdWzhw5F3vFLBaZb2rpTETLgqQz</con:value>
            </con:property>
            <con:property>
                <con:name>单签地址5</con:name>
                <con:value>mfeHxBsBqrgatxXwLdoepyjPxQeXfGPbko</con:value>
            </con:property>
            <con:property>
                <con:name>多签地址私钥</con:name>
                <con:value>
                    cPc4TYtWv7Qa5SgdkdHcYWTgQ1Btw3xcXtpVcx7xRe8w7Vx2P51p,cVm8hTePJ5zVsRP37SUwxki1ThJSgWNs2qkpcYvFrftUQ4cTcLwp
                </con:value>
            </con:property>
            <con:property>
                <con:name>入金hash</con:name>
                <con:value>843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6</con:value>
            </con:property>
            <con:property>
                <con:name>出金hash</con:name>
                <con:value>65d6d95d1ce70a71803128d38eb5791199b71568e1638118087c48fc94aed03a</con:value>
            </con:property>
        </con:properties>
        <con:reportParameters/>
        <con:testCase id="82940a44-cedb-40c9-848a-bc5f757280c0" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="多签地址生成-4/5签" searchProperties="true">
            <con:settings>
                <con:setting id="71e903b7-7910-4ab4-923b-6acfb18cee7afileName">普通客户单币种开户-正常</con:setting>
                <con:setting id="da1825e7-b809-4662-9f5d-3f3c2e169dfbfileName">普通客户单币种开户-正常</con:setting>
                <con:setting id="8cc66d22-f6b7-4e72-8c56-5b1fe56e8adbfileName">多签地址生成</con:setting>
                <con:setting id="9f854a3c-8bee-4449-a3b8-919837689ad5fileName">多签地址生成-4%2F5签</con:setting>
                <con:setting id="82940a44-cedb-40c9-848a-bc5f757280c0fileName">多签地址生成-4%2F5签</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="calltestcase" name="Run TestCase - 获得批次号" id="580b8216-752d-457f-b8a6-b9b8969fbdbf">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>e4753995-943a-4b8c-9dfb-5d680125a49e</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>批次号</con:name>
                            <con:value>0</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>批次号</con:entry>
                    </con:returnProperties>
                    <con:runMode>SINGLETON_AND_WAIT</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址1" id="2d9b1724-cf4e-415d-a855-ea5334402c97">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>ba0954a4-481a-4893-b370-cf0b32f1f1f3</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>mqSpqq8DQ8nSCh73t62aBH98pChXCthpM7</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址1的公钥"
                          id="49a90dd6-7554-45c3-a198-20ea840c3501">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4fed871e-7934-4b60-b132-1dd1d9acde0b</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址1#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>02c5a3a8fb97fee48fd20436830bb9ba33b9459f94182d607d5d547a4a533f95ad</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址2" id="1d0c3832-65fa-4075-b64b-8f2fd7549d58">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>ba0954a4-481a-4893-b370-cf0b32f1f1f3</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>mnc8fHKhqfmCMAY2yQc12wCYtcVc1ewZsX</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址2的公钥"
                          id="2dc092a9-2add-4f3c-a17c-bbb56b277c71">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4fed871e-7934-4b60-b132-1dd1d9acde0b</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址2#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>039b22fe6a3a0e8bb18269406f387070110437083a2cbb38ab66ab25e4c854f847</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址3" id="a78dea8f-fd4e-43e6-b333-b6a087a3068b">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>ba0954a4-481a-4893-b370-cf0b32f1f1f3</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>mvWDkHtuMLY4PKyxGi2onknDEbS1MULyhj</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址3的公钥"
                          id="0e20877a-e88d-45b9-909b-52da5dc489bc">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4fed871e-7934-4b60-b132-1dd1d9acde0b</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址3#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>039b56fd1888148f21371f8eba039f4ba124a2c186823197ca7145c4e5ce877618</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址4" id="2f5a0523-d151-4e1c-96a3-e4ddec5ff451">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>ba0954a4-481a-4893-b370-cf0b32f1f1f3</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>miTwLTmLdWzhw5F3vFLBaZb2rpTETLgqQz</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址4的公钥"
                          id="b11e165b-c41e-49e9-8f8f-78efeed95c3b">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4fed871e-7934-4b60-b132-1dd1d9acde0b</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址4#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>021e282c5a20d5628b2c61d9f9f64a59a591a1288a6945a3232114ce11abc10961</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址5" id="ef892043-380a-4830-b48c-b31ed8096293">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>ba0954a4-481a-4893-b370-cf0b32f1f1f3</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>mfeHxBsBqrgatxXwLdoepyjPxQeXfGPbko</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址5的公钥"
                          id="2c36b7cc-9962-42e5-aecf-74451e5df7ae">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4fed871e-7934-4b60-b132-1dd1d9acde0b</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址5#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>022af9d2870299c4c0cc00e6f10ecc98ab87b5c0d6829be9e0c9c5922e5630d5b4</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-创建多签地址" id="f1574450-a1e5-4ffb-8dd2-8fc78a46049b">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4388fc92-fafd-43a0-89a3-076fc44579b1</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>tx_id</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>required</con:name>
                            <con:value>4</con:value>
                        </con:property>
                        <con:property>
                            <con:name>addr_info</con:name>
                            <con:value>
                                ${Run TestCase-生成单签地址1#address}:${Run TestCase - 获得单签地址1的公钥#pubKey},${Run TestCase-生成单签地址2#address}:${Run TestCase - 获得单签地址2的公钥#pubKey},${Run TestCase-生成单签地址3#address}:${Run TestCase - 获得单签地址3的公钥#pubKey},${Run TestCase-生成单签地址4#address}:${Run TestCase - 获得单签地址4的公钥#pubKey},${Run TestCase-生成单签地址5#address}:${Run TestCase - 获得单签地址5的公钥#pubKey}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>{"msg_id":"autotest","code":0,"msg":"","data":null}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言地址生成" id="0186375a-1ae7-4b81-9344-79110b1e1532">
                <con:settings/>
                <con:config>
                    <script>def code = context.expand( '${Run TestCase-创建多签地址#return_msg#$.code}' )
                        assert code == "0"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 查询私钥列表" id="08eb67b1-a1e7-4ee9-8e8e-d217d1cb2719">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>3fc374a5-df02-4c6c-85d1-95863dfb6d68</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址列表</con:name>
                            <con:value>
                                ${Run TestCase-生成单签地址1#address},${Run TestCase-生成单签地址2#address},${Run TestCase-生成单签地址3#address},${Run TestCase-生成单签地址4#address},${Run TestCase-生成单签地址5#address}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>prikeySet</con:name>
                            <con:value>
                                cUCQyUkXnhnXHHmDu9u62hqGf5eRfz6LDvFJf9vfHLUn22iCGtHC,cUEqUhQvUGmju9vYvhijkYpyTCaQ3QFSvue1yapXfYvoXirVmCyH,cV3qFsGkgdDvUabprWXFXTnMeKzUqS8HJmh4Z7CSuo1UgTaorVPa,cRveaD7EYERxdiNr4Y6oXhqjanR5K9En5M7JJx9YVNFhHbZfduFZ,cPZiRP1XBPS5pG79EdG6geNTxrRvMSmz7SM14hkikWjobn3uXQvW
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>prikeySet</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="delay" name="Delay" id="067aeab6-fcf8-424f-beb1-c734b162b5d0">
                <con:settings/>
                <con:config>
                    <delay>5000</delay>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="等待地址生成消息" id="18155e52-9ea8-42ab-8461-cd0bf1b41427">
                <con:settings/>
                <con:config>
                    <script>def tx_id = context.expand( '${Run TestCase-创建多签地址#tx_id}' )
                        def 返回tx_id = context.expand( '${#TestSuite#返回tx_id}' )
                        def prikeySet = context.expand( '${Run TestCase - 查询私钥列表#prikeySet}' )

                        if( !tx_id.equals(返回tx_id)){
                        log.info "没有找到地址生成消息，继续等待"
                        testRunner.gotoStepByName("Delay")
                        }else{//找到入金确认消息
                        log.info "找到地址生成消息"
                        testRunner.testCase.testSuite.setPropertyValue("多签地址私钥",prikeySet);
                        // testRunner.gotoStepByName("Run TestCase-记录账户交易后ONT")
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="d34855b4-c246-459d-948f-15f20e00bef2">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>1</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址1</con:sourceStep>
                        <con:targetType>单签地址1</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>2</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址2</con:sourceStep>
                        <con:targetType>单签地址2</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>3</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址3</con:sourceStep>
                        <con:targetType>单签地址3</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>4</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址4</con:sourceStep>
                        <con:targetType>单签地址4</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>5</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址5</con:sourceStep>
                        <con:targetType>单签地址5</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="设置为入金地址" id="15dd1aef-4c04-49b0-bf12-95fba26cc0fb" disabled="true">
                <con:settings/>
                <con:config>
                    <script>def 多签地址 = context.expand( '${#TestSuite#多签地址}' )

                        testRunner.testCase.testSuite.setPropertyValue("新用户地址",多签地址);
                    </script>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>7bac0008-ca14-4cc8-845d-a514a9ee183e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="a0dbabaf-3a8b-4124-afe2-b75a2be5774c" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="多签地址生成-2/3签" searchProperties="true">
            <con:settings>
                <con:setting id="71e903b7-7910-4ab4-923b-6acfb18cee7afileName">普通客户单币种开户-正常</con:setting>
                <con:setting id="da1825e7-b809-4662-9f5d-3f3c2e169dfbfileName">普通客户单币种开户-正常</con:setting>
                <con:setting id="8cc66d22-f6b7-4e72-8c56-5b1fe56e8adbfileName">多签地址生成</con:setting>
                <con:setting id="9f854a3c-8bee-4449-a3b8-919837689ad5fileName">多签地址生成-4%2F5签</con:setting>
                <con:setting id="9a45ef2b-4ae4-4414-98ca-a40e01e07ab5fileName">多签地址生成-2%2F3签</con:setting>
                <con:setting id="a0dbabaf-3a8b-4124-afe2-b75a2be5774cfileName">多签地址生成-2%2F3签</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase - 获得批次号" id="74d6c31f-4d50-4b9c-8c76-e8ef8cafbcad">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>e4753995-943a-4b8c-9dfb-5d680125a49e</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>批次号</con:name>
                            <con:value>2</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>批次号</con:entry>
                    </con:returnProperties>
                    <con:runMode>SINGLETON_AND_WAIT</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址1" id="f88ef549-9cbe-43df-8be5-9c41958e4312">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>mvr775RjK1uXnyuXCx8kcZjorFLCMQb5fN</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址1的公钥"
                          id="6cd6a00c-6afd-4adc-9ca8-09b4e6939b0e">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址1#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>0272ae44bcff9fbe6c057941a87626192bec595b091dcd2ab5f5a603b6328798b5</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址2" id="6e67fa9f-c1b6-4d26-a1d4-5fdbcd8f3db3">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>mq19Kf19Q937XKEmoR2ZruMerRTYudczeh</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址2的公钥"
                          id="72120982-6453-4b8e-af3f-44dd0ff7277b">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址2#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>02967efc2b106b189c092c08bd0f7bc44ddffc22f6b99fa56e2a43d4890881f4ab</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-创建多签地址" id="6b25c16b-f344-4f05-863a-6e9a61626278">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4388fc92-fafd-43a0-89a3-076fc44579b1</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>tx_id</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>required</con:name>
                            <con:value>2</con:value>
                        </con:property>
                        <con:property>
                            <con:name>addr_info</con:name>
                            <con:value>
                                ${Run TestCase-生成单签地址1#address}:${Run TestCase - 获得单签地址1的公钥#pubKey},${Run TestCase-生成单签地址2#address}:${Run TestCase - 获得单签地址2的公钥#pubKey}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>{"msg_id":"autotest","code":0,"msg":"","data":null}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言地址生成" id="11b14ac2-550b-41c5-8d39-5ed0ac6d6cb0">
                <con:settings/>
                <con:config>
                    <script>def code = context.expand( '${Run TestCase-创建多签地址#return_msg#$.code}' )
                        assert code == "0"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 查询私钥列表" id="a65eb892-da7d-461d-bc15-698357b826ed">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>3fc374a5-df02-4c6c-85d1-95863dfb6d68</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址列表</con:name>
                            <con:value>${Run TestCase-生成单签地址1#address},${Run TestCase-生成单签地址2#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>prikeySet</con:name>
                            <con:value>
                                cPc4TYtWv7Qa5SgdkdHcYWTgQ1Btw3xcXtpVcx7xRe8w7Vx2P51p,cVm8hTePJ5zVsRP37SUwxki1ThJSgWNs2qkpcYvFrftUQ4cTcLwp
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>prikeySet</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="delay" name="Delay" id="3374d7fe-486e-4947-8985-c62260f78b95">
                <con:settings/>
                <con:config>
                    <delay>5000</delay>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="等待地址生成消息" id="6aab295b-0d4b-4c62-840f-038c831d2af2">
                <con:settings/>
                <con:config>
                    <script>def tx_id = context.expand( '${Run TestCase-创建多签地址#tx_id}' )
                        def 返回tx_id = context.expand( '${#TestSuite#返回tx_id}' )
                        def prikeySet = context.expand( '${Run TestCase - 查询私钥列表#prikeySet}' )

                        if( !tx_id.equals(返回tx_id)){
                        log.info "没有找到地址生成消息，继续等待"
                        testRunner.gotoStepByName("Delay")
                        }else{//找到入金确认消息
                        log.info "找到地址生成消息"
                        testRunner.testCase.testSuite.setPropertyValue("多签地址私钥",prikeySet);
                        // testRunner.gotoStepByName("Run TestCase-记录账户交易后ONT")
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="71756954-5296-4d18-92e8-344b1d6955ce">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>1</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址1</con:sourceStep>
                        <con:targetType>单签地址1</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>2</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址2</con:sourceStep>
                        <con:targetType>单签地址2</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="设置为入金地址" id="d4481d71-1382-4aa4-b4cd-eee75a716d57" disabled="true">
                <con:settings/>
                <con:config>
                    <script>def 多签地址 = context.expand( '${#TestSuite#多签地址}' )

                        testRunner.testCase.testSuite.setPropertyValue("新用户地址",多签地址);
                    </script>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>7bac0008-ca14-4cc8-845d-a514a9ee183e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>5620973d-9c5d-4eb1-84a6-467847773470</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="905938b9-74df-4bb1-8704-d331e9abc08d" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="入金确认" searchProperties="true">
            <con:settings>
                <con:setting id="f4ec3b44-64b5-4b17-8c38-907e5d52a9a0fileName">入金</con:setting>
                <con:setting id="f3af21cf-6860-4a62-a3cd-3004a26c4dc7fileName">入金</con:setting>
                <con:setting id="468d696d-f068-4724-8ab8-918ce31e0678fileName">入金确认</con:setting>
                <con:setting id="c8a3a43e-c0b7-439d-b8f8-4038052f350ffileName">入金确认</con:setting>
                <con:setting id="395a9db1-31bf-4d31-aee7-453c6da5ed04fileName">入金确认</con:setting>
                <con:setting id="b4a374f4-d27a-4867-8124-2ec2d8289971fileName">入金确认</con:setting>
                <con:setting id="905938b9-74df-4bb1-8704-d331e9abc08dfileName">入金确认</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-查询转出账户余额" id="46c0ef23-e430-4974-ab7f-a3d767b8509b">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#外部币池}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>57421888</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="确保余额足够" id="ca54aca6-386f-4b0a-a3fd-05ded9445de0">
                <con:settings/>
                <con:config>
                    <script>def amount = context.expand( '${#TestSuite#入金amount}' ).toBigDecimal()
                        def btc = context.expand( '${Run TestCase-查询转出账户余额#amount}' ).toBigDecimal()

                        //log.info btc
                        assert btc > amount

                        return amount / 1e+8
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录账户当前余额" id="b28a69fc-779b-4627-9062-7dc8411a0a4f">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestCase#入金地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>0</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-btc转账2" id="43e51711-6784-4b26-a2d9-976e6bb24bcb"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>746749d0-aa4d-4e44-afe4-d70335e45737</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>目的地址</con:name>
                            <con:value>${#TestCase#入金地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>金额</con:name>
                            <con:value>${#TestSuite#amount}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>源地址私钥</con:name>
                            <con:value>${#TestSuite#外部币池私钥}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>ac2105a4e28745c9b10a361980a24b25b50a3c4fd9ffb8490da37bcdc470fee5</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>hash</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-btc转账" id="1fe3ebbd-517b-49d1-899d-d6cbf5b1ffb9">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>746749d0-aa4d-4e44-afe4-d70335e45737</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>目的地址</con:name>
                            <con:value>${#TestCase#入金地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>金额</con:name>
                            <con:value>${#TestSuite#入金amount}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>源地址私钥</con:name>
                            <con:value>${#TestSuite#外部币池私钥}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>hash</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="delay" name="Delay" id="0a8970b3-184a-4833-98c4-f6cbcf6b6155">
                <con:settings/>
                <con:config>
                    <delay>300000</delay>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="等待入金6/6消息" id="ed96493a-d784-4baa-8fa6-4329bc59fedf">
                <con:settings/>
                <con:config>
                    <script>def 消息hash = context.expand( '${#TestSuite#入金hash}' )
                        def 入金交易hash = context.expand( '${Run TestCase-btc转账#hash}' )

                        if( !消息hash.equals(入金交易hash)){
                        log.info "没有找到入金确认消息，继续等待"
                        testRunner.gotoStepByName("Delay")
                        }else{//找到入金确认消息
                        log.info "找到入金确认消息"
                        // testRunner.gotoStepByName("Run TestCase-记录账户交易后ONT")
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询交易是否上链" id="c5e4bf12-a7d5-4036-9f4c-ec83473888f4">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4f7f11b0-67ba-480b-8d74-44c5881ecf79</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>txid</con:name>
                            <con:value>${Run TestCase-btc转账#hash}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>confirmations</con:name>
                            <con:value>10</con:value>
                        </con:property>
                        <con:property>
                            <con:name>fee</con:name>
                            <con:value>0.001</con:value>
                        </con:property>
                        <con:property>
                            <con:name>voutindex</con:name>
                            <con:value>0</con:value>
                        </con:property>
                        <con:property>
                            <con:name>交易地址</con:name>
                            <con:value>${#TestCase#入金地址}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>confirmations</con:entry>
                        <con:entry>fee</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言上链" id="6a0ecd3b-ef05-4215-89d8-d3e8a5eeac31">
                <con:settings/>
                <con:config>
                    <script>def confirmations = context.expand( '${Run TestCase-查询交易是否上链#confirmations}' ).toInteger()

                        assert confirmations > 0
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录账户交易后余额" id="3fb1c8c4-c65b-47ca-b1fb-1866cdace226">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestCase#入金地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>20000</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="jdbc" name="JDBC Request-查询数据库入金记录表" id="adae55f0-81bc-49d5-bac6-8af455cb18a3">
                <con:settings>
                    <con:setting id="prettyPrintResponse">true</con:setting>
                </con:settings>
                <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dbConnectionName>cus-test</con:dbConnectionName>
                    <con:driver>com.mysql.jdbc.Driver</con:driver>
                    <con:connectionString>jdbc:mysql://139.219.140.220:3306/wallet?user=custodian&amp;password=PASS_VALUE</con:connectionString>
                    <con:password>custodian</con:password>
                    <con:connectionProperties/>
                    <con:query>select * from depositlog where txhash = '${Run TestCase-btc转账#hash}'</con:query>
                    <con:assertion type="XPath Match" id="19c71012-72ba-48ea-aaa5-d5cff8443cc3"
                                   name="Match content of [DEPOSITLOG.WALLETADDR]">
                        <con:configuration>
                            <path>//Results[1]/ResultSet[1]/Row[1]/DEPOSITLOG.WALLETADDR[1]/text()</path>
                            <content>${#TestCase#入金地址}</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="XPath Match" id="182df64b-c9fb-4cbd-8667-8af14cfb03cc"
                                   name="Match content of [DEPOSITLOG.TXHASH]">
                        <con:configuration>
                            <path>//Results[1]/ResultSet[1]/Row[1]/DEPOSITLOG.TXHASH[1]/text()</path>
                            <content>${Run TestCase-btc转账#hash}</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:properties/>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询冷钱包余额" id="c91365e1-646b-4a75-a595-da7f348cb530">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>29ade236-3a4b-4ff9-b703-aa7bf41d51c2</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>addresses</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","data":[{"address":"2N5x2Yr4pDcPpfBdrUdsp8LWQcdB2KVCyjX","amount":"0.0002"}]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言" id="f1f5cf56-a8d5-4f6a-97d4-87f636b7dedd">
                <con:settings/>
                <con:config>
                    <script>def db_amount = context.expand(
                        '${JDBC Request-查询数据库入金记录表#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/DEPOSITLOG.AMOUNT[1]}'
                        ).toBigDecimal()
                        def 入金_amount = context.expand( '${确保余额足够#result}' ).toBigDecimal()
                        assert db_amount == 入金_amount

                        def 接口余额 = context.expand( '${Run TestCase-查询冷钱包余额#return_msg#$.data.data[0].amount}'
                        ).toBigDecimal()
                        def 链上余额 = context.expand( '${Run TestCase-记录账户交易后余额#amount}' ).toBigDecimal()
                        assert 链上余额 == 接口余额 * 1e+8


                        def 交易前余额 = context.expand( '${Run TestCase-记录账户当前余额#amount}' ).toBigDecimal()
                        def 交易后余额 = context.expand( '${Run TestCase-记录账户交易后余额#amount}' ).toBigDecimal()
                        def amount = context.expand( '${Run TestCase-btc转账#金额}' ).toBigDecimal()

                        //log.info 交易后余额

                        assert 交易前余额 + amount == 交易后余额
                    </script>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>入金地址</con:name>
                    <con:value>${#TestSuite#新用户地址}</con:value>
                </con:property>
                <con:property>
                    <con:name>voutTxid</con:name>
                    <con:value>4fed28126926b5f0e214c350f011ee4d071e7bf023cfd6cff5c525ce50944877</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>a7a7774a-27ef-4239-8539-5d2a6ea0a251</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>235435d3-7924-4784-a304-c3795877f187</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>1f5720b5-4b7e-4ded-8c76-f879606c5720</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>f7665af1-1f69-4eaf-8d7d-219f68fb2a8c</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="7fbb51e1-aa78-4b05-a9ee-0bd666845a2a" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="出金申请" searchProperties="true">
            <con:settings>
                <con:setting id="f4ec3b44-64b5-4b17-8c38-907e5d52a9a0fileName">入金</con:setting>
                <con:setting id="a6968614-6e90-44c7-9249-123ab34f0338fileName">出金</con:setting>
                <con:setting id="4959fedf-13a7-462c-8af1-1e9734d9f36ffileName">足额出金</con:setting>
                <con:setting id="d5444faa-3fd0-4a32-b975-dfb75e39b227fileName">出金申请</con:setting>
                <con:setting id="50b9afd4-b593-45f8-ad8f-31b5eb9e982dfileName">出金申请</con:setting>
                <con:setting id="fafd4d98-098d-4261-8753-59d714f5c32bfileName">出金申请</con:setting>
                <con:setting id="7fbb51e1-aa78-4b05-a9ee-0bd666845a2afileName">出金申请</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="清除retmsg" id="55e32e9d-25ec-48b7-935d-6ab979bee501">
                <con:settings/>
                <con:config>
                    <script>testRunner.testCase.setPropertyValue("ret_msg","");</script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 查询地址有效性" id="9195d7d4-04da-46ad-8ace-aa5591e4a34a">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>2962146d-7878-4bdf-bb83-98e9a98f8d2c</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","is_valid":true}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言地址有效" id="a2c51f3b-03c5-4f1d-a71f-451bab9b9982">
                <con:settings/>
                <con:config>
                    <script>def is_valid = context.expand( '${Run TestCase - 查询地址有效性#return_msg#$.data.is_valid}' )

                        assert is_valid == "true"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询出金账户余额" id="52788440-8b0c-4589-9624-59ae0c774abb">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>20000</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="确保余额足够" id="71582cea-e631-4e48-b8c4-ad753eb5cccf">
                <con:settings/>
                <con:config>
                    <script>//def ont = context.expand( '${Run TestCase-查询出金账户余额#ont}' ).toBigDecimal()
                        def btc = context.expand( '${Run TestCase-查询出金账户余额#amount}' ).toBigDecimal()
                        def amount = context.expand( '${#TestSuite#amount}' ).toBigDecimal()

                        assert btc > amount

                        return amount / 1e+8
                        //assert ong > 1000000
                        //assert before_ont + amount == after_ont
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase -获取批次号" id="47331dd9-2d61-41a5-90d0-522daaa9141b">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>e4753995-943a-4b8c-9dfb-5d680125a49e</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>批次号</con:name>
                            <con:value>53</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>批次号</con:entry>
                    </con:returnProperties>
                    <con:runMode>SINGLETON_AND_WAIT</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-发起出金申请" id="bbdc3b0f-2282-4379-8dc4-c04d13b8a2a4">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>8f58c9c9-5f0e-475c-a9bf-79a5947d7628</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>tx_id</con:name>
                            <con:value>autotest_${#TestSuite#币种}_withdrew_${Run TestCase -获取批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>from_addr</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>data</con:name>
                            <con:value>${#TestSuite#外部币池}:${确保余额足够#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","tx_id":"autotest_BTC_withdrew_53","txs":[{"fee":"0.0001","raw":"0200000001e6005e8b6d16ef102a994acf1d7eed993a25e22b3f60fa7b371b653045cd3b840000000000ffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","signer":"","tx_inputs":[{"amount":"0.0002","output_index":0,"prev_tx_id":"843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6","raw_input":"0100000001c7a1999edbf278fa33630c76334ac2822c1713ad7413a0e933c956d5f022b3f7010000006a47304402201cd0d8852f9d47569a9ecb608d31e0ea9c5dac0c774caa83d0f05cc31937f2390220427d93eafcd4f8143fefef8dd956297004a76a551589629ff3d10aee041d829b012103cf4b8ad1dbf57181f51d0395c766279cddc64c571cc6d015acfe35845ee68b04ffffffff02204e00000000000017a9148b5903f13b89e9728d8ee6736c3c90b32657101287805b6a03000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","script_pub_key":"a9148b5903f13b89e9728d8ee6736c3c90b32657101287","segwit":false}]}]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="54f6697d-b5a1-4883-a258-5861131ca64f">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>return_msg</con:sourceType>
                        <con:sourceStep>Run TestCase-发起出金申请</con:sourceStep>
                        <con:targetType>ret_msg</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言返回内容" id="37c41eeb-e289-46fd-a956-debefe582fa3">
                <con:settings/>
                <con:config>
                    <script>def code = context.expand( '${Run TestCase-发起出金申请#return_msg#$.code}' )
                        assert code == "0"
                        def return_msg = context.expand( '${Run TestCase-发起出金申请#return_msg}' )
                        //def txs = context.expand( '${Run TestCase-发起出金申请#return_msg#$.data.txs}' )
                        //def utxos = context.expand( '${Run TestCase-发起出金申请#return_msg#$.data.txs[0].tx_inputs}' )
                        //
                        testRunner.testCase.testSuite.testCases["出金确认"].setPropertyValue("出金申请ret_msg",return_msg);
                    </script>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>ret_msg</con:name>
                    <con:value>
                        {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","tx_id":"autotest_BTC_withdrew_53","txs":[{"fee":"0.0001","raw":"0200000001e6005e8b6d16ef102a994acf1d7eed993a25e22b3f60fa7b371b653045cd3b840000000000ffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","signer":"","tx_inputs":[{"amount":"0.0002","output_index":0,"prev_tx_id":"843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6","raw_input":"0100000001c7a1999edbf278fa33630c76334ac2822c1713ad7413a0e933c956d5f022b3f7010000006a47304402201cd0d8852f9d47569a9ecb608d31e0ea9c5dac0c774caa83d0f05cc31937f2390220427d93eafcd4f8143fefef8dd956297004a76a551589629ff3d10aee041d829b012103cf4b8ad1dbf57181f51d0395c766279cddc64c571cc6d015acfe35845ee68b04ffffffff02204e00000000000017a9148b5903f13b89e9728d8ee6736c3c90b32657101287805b6a03000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","script_pub_key":"a9148b5903f13b89e9728d8ee6736c3c90b32657101287","segwit":false}]}]}}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>a7a7774a-27ef-4239-8539-5d2a6ea0a251</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>4fe91578-5db9-4279-beaf-c1afd3f824f9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>c3fa974a-c2f3-4757-9742-c0da509a5147</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>ed1cfacc-0866-41bc-876b-ebe21ddc3199</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>fbbb83d6-6f51-49b9-9c03-5061d89eef28</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="ccc52931-ec79-4729-bd50-bc7621b0f895" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="出金确认" searchProperties="true">
            <con:settings>
                <con:setting id="f4ec3b44-64b5-4b17-8c38-907e5d52a9a0fileName">入金</con:setting>
                <con:setting id="a6968614-6e90-44c7-9249-123ab34f0338fileName">出金</con:setting>
                <con:setting id="4959fedf-13a7-462c-8af1-1e9734d9f36ffileName">足额出金</con:setting>
                <con:setting id="05f9d3be-8e36-45de-a3f4-38bc372e4bf1fileName">出金批次确认</con:setting>
                <con:setting id="51c43f8e-81a7-4f92-aeef-b2070aa8887ffileName">出金批次确认</con:setting>
                <con:setting id="ccc52931-ec79-4729-bd50-bc7621b0f895fileName">出金确认</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="清楚出金hash" id="7b3d0e6d-2d2f-4490-b4fe-f8e860366d8b">
                <con:settings/>
                <con:config>
                    <script>testRunner.testCase.testSuite.setPropertyValue("出金hash","");</script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录源地址交易前余额" id="933f4446-f64c-4cc3-a314-d102d8034f9e">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>0</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录目标地址余额" id="88e81f4b-799e-4900-87d7-d59bc387ec68">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#外部币池}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>57311888</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询utxo" id="c5086ee2-f3d6-4cca-b769-6085f82e3283">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>3f4cb9c8-2326-4497-a51e-a55801b12b4f</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value>
                                {"result":[{"txid":"843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6","vout":0,"address":"2N5x2Yr4pDcPpfBdrUdsp8LWQcdB2KVCyjX","account":"","redeemScript":"5221023d533943bb87ca1696ae4edda06434a202862fe1c75141b8e39469e4cbc50d142102536c8ddf98e73a5c94407012d51f021f8cd297cff07716ca1f8cddf2461fe22952ae","scriptPubKey":"a9148b5903f13b89e9728d8ee6736c3c90b32657101287","amount":0.00020000,"confirmations":10,"spendable":false,"solvable":true,"safe":true}],"error":null,"id":"yctest"}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="解析redeem" id="0f338f9e-a08b-4ad5-8eb7-ffc58889eabf">
                <con:settings/>
                <con:config>
                    <script>import groovy.json.JsonSlurper

                        def ret_msg = context.expand( '${#TestCase#出金申请ret_msg}' )
                        def raw = context.expand( '${#TestCase#出金申请ret_msg#$.data.txs[0].raw}' )

                        //def ret_msg = context.expand( '${Run TestCase-出金申请#ret_msg}' )
                        assert ret_msg != ""

                        def result = context.expand( '${Run TestCase-查询utxo#result#$.result}' )
                        def slurper = new JsonSlurper()
                        def json = slurper.parseText(result)
                        //def raw = context.expand( '${Run TestCase-出金申请#ret_msg#$.data.txs[0].raw}' )
                        def 多签地址私钥 = context.expand( '${#TestSuite#多签地址私钥}' )

                        def utxos = "["
                        for(def utxo : json){
                        def utxoStr = '''{
                        "txid":"''' + utxo.txid + '''",
                        "vout":''' + utxo.vout + ''',
                        "redeemScript":"''' + utxo.redeemScript + '''",
                        "scriptPubKey":"''' + utxo.scriptPubKey + '''",
                        "amount":"''' + utxo.amount + '''"
                        },'''
                        utxos = utxos + utxoStr
                        }
                        utxos = utxos[0..-2]
                        utxos = utxos + "]"

                        多签地址私钥 = 多签地址私钥.split(",")
                        def prikeySet = "["
                        for(def prikey : 多签地址私钥){
                        prikeySet = prikeySet + '''"''' + prikey + '''",'''
                        }
                        prikeySet = prikeySet[0..-2]
                        prikeySet = prikeySet + "]"

                        def params = '''[
                        "''' + raw + '''",''' + utxos + ''',''' + prikeySet + ''']'''
                        log.info params
                        return params
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 签名" id="f942b0af-5c57-477d-9c6f-8fe94b874648">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>30ed8e6b-6571-412b-b3e9-91096f0eae2b</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>params</con:name>
                            <con:value>${解析redeem#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value>
                                0200000001e6005e8b6d16ef102a994acf1d7eed993a25e22b3f60fa7b371b653045cd3b8400000000da004730440220423977592676070a316ae0bd9bcc62495e4998b36bfbaf965a95a52e453db9db022037fdc72b410c9bb85566f04047ca14ccd724a1fbf42f49f6f262abc3a05e9fc501483045022100b7f0c2f31bbd0d676c856c0188b93abd333dd74d646779b1b82bc3934914036402205a1a3eb65b6a8c58cdbc3cdcdf8514391e0cb24ea13bdebf69542a90482f495501475221023d533943bb87ca1696ae4edda06434a202862fe1c75141b8e39469e4cbc50d142102536c8ddf98e73a5c94407012d51f021f8cd297cff07716ca1f8cddf2461fe22952aeffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 出金确认" id="f41252fb-2eed-4b03-828c-a67cf6dc887c">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>16d6c2b6-e5e0-4ed7-a524-44957d97422b</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>tx_id</con:name>
                            <con:value>${#TestCase#出金申请ret_msg#$.data.tx_id}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>tx_contents</con:name>
                            <con:value>${Run TestCase - 签名#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>{"msg_id":"autotest","code":0,"msg":"","data":null}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="delay" name="Delay" id="5567a45a-1d81-44e9-83d3-41494483b033">
                <con:settings/>
                <con:config>
                    <delay>5000</delay>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="等待出金消息确认" id="cf8e360c-3f4b-4b5c-a90d-4718eaea6df0">
                <con:settings/>
                <con:config>
                    <script>def code = context.expand( '${Run TestCase - 出金确认#return_msg#$.code}' )
                        assert code == "0"

                        def 待确认批次号 = context.expand( '${Run TestCase - 出金确认#tx_id}' )
                        def 已确认批次号 = context.expand( '${#TestSuite#出金tx_id}' )

                        if(待确认批次号.equals(已确认批次号)){//表明获得消息返回
                        def txHash = context.expand( '${#TestSuite#出金hash}' )//获取hash值
                        return txHash
                        }else{
                        testRunner.gotoStepByName("Delay")
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="delay" name="Delay 1" id="f8f75e2e-5a0c-41ce-a478-7e5d6ab031f0">
                <con:settings/>
                <con:config>
                    <delay>300000</delay>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询链上该币交易状态" id="850d4fea-ea7f-49df-b42f-5713a67134ff">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4f7f11b0-67ba-480b-8d74-44c5881ecf79</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>txid</con:name>
                            <con:value>${#TestSuite#出金hash}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>confirmations</con:name>
                            <con:value>3</con:value>
                        </con:property>
                        <con:property>
                            <con:name>fee</con:name>
                            <con:value>1.0E-4</con:value>
                        </con:property>
                        <con:property>
                            <con:name>voutindex</con:name>
                            <con:value>0</con:value>
                        </con:property>
                        <con:property>
                            <con:name>交易地址</con:name>
                            <con:value>${#TestSuite#多签地址}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>confirmations</con:entry>
                        <con:entry>fee</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="等待链上确认" id="72530748-5bcf-473f-887c-e15fd498baaa">
                <con:settings/>
                <con:config>
                    <script>def 交易哈希 = context.expand( '${Run TestCase-查询链上该币交易状态#txid}' )
                        def confirmations = context.expand( '${Run TestCase-查询链上该币交易状态#confirmations}' ).toInteger()

                        if(confirmations > 0){
                        log.info "上链"
                        }else{
                        log.info 交易哈希 + "未确认，等待"
                        testRunner.gotoStepByName("Delay 1")
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录源地址交易后余额" id="4b6be8fe-80d8-4f04-bb59-c3d2d253e43d">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>0</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录目标地址当前余额" id="fc083691-7b80-46cb-9167-f935ac584817">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#外部币池}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>57311888</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="jdbc" name="JDBC Request-查询数据库出金记录表" id="78528da7-e5b7-4aba-9b26-b50f2c49e5c7">
                <con:settings>
                    <con:setting id="prettyPrintResponse">true</con:setting>
                </con:settings>
                <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dbConnectionName>cus-test</con:dbConnectionName>
                    <con:driver>com.mysql.jdbc.Driver</con:driver>
                    <con:connectionString>jdbc:mysql://139.219.140.220:3306/wallet?user=custodian&amp;password=PASS_VALUE</con:connectionString>
                    <con:password>custodian</con:password>
                    <con:connectionProperties/>
                    <con:query>select * from withdrawallog where fromaddr = '${#TestSuite#新用户地址}' order by operatetime
                        desc limit 1
                    </con:query>
                    <con:assertion type="XPath Match" id="95cebba6-94ac-4f6e-9889-0efbf7b777f7"
                                   name="Match content of [WITHDRAWALLOG.HANDLINGFEE]">
                        <con:configuration>
                            <path>//Results[1]/ResultSet[1]/Row[1]/WITHDRAWALLOG.HANDLINGFEE[1]/text()</path>
                            <content>0.0001</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="XPath Match" id="96fef555-a6c5-4d68-a598-707b700e7fec"
                                   name="Match content of [WITHDRAWALLOG.TXHASH]">
                        <con:configuration>
                            <path>//Results[1]/ResultSet[1]/Row[1]/WITHDRAWALLOG.TXHASH[1]/text()</path>
                            <content>${#TestSuite#出金hash}</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="XPath Match" id="31e8e189-1963-4fea-a2ff-b057aa9cf4f5"
                                   name="Match content of [WITHDRAWALLOG.TXID]">
                        <con:configuration>
                            <path>//Results[1]/ResultSet[1]/Row[1]/WITHDRAWALLOG.TXID[1]/text()</path>
                            <content>${Run TestCase - 出金确认#tx_id}</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:properties/>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言金额正确" id="5ba02259-521e-4156-ad37-1e409acb5a9c">
                <con:settings/>
                <con:config>
                    <script>def srcBefore = context.expand( '${Run TestCase-记录源地址交易前余额#amount}' ).toBigDecimal()
                        def destBefore = context.expand( '${Run TestCase-记录目标地址余额#amount}' ).toBigDecimal()
                        def srcAfter = context.expand( '${Run TestCase-记录源地址交易后余额#amount}' ).toBigDecimal()
                        def destAfter = context.expand( '${Run TestCase-记录目标地址当前余额#amount}' ).toBigDecimal()
                        def fee = context.expand( '${Run TestCase-查询链上该币交易状态#fee}' ).toBigDecimal()
                        def feeDB = context.expand(
                        '${JDBC Request-查询数据库出金记录表#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/WITHDRAWALLOG.HANDLINGFEE[1]}'
                        ).toBigDecimal()

                        //
                        //log.info srcBefore
                        //log.info destBefore
                        //log.info srcAfter
                        //log.info destAfter
                        //log.info fee
                        assert feeDB == fee
                        assert (srcBefore - srcAfter) / 1e+8 - fee == (destAfter - destBefore) / 1e+8
                        //log.info ((before_src_btc - after_src_btc) / 1e+8)
                        //assert before_ont + amount == after_ont
                    </script>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>出金申请ret_msg</con:name>
                    <con:value>
                        {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","tx_id":"autotest_BTC_withdrew_53","txs":[{"fee":"0.0001","raw":"0200000001e6005e8b6d16ef102a994acf1d7eed993a25e22b3f60fa7b371b653045cd3b840000000000ffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","signer":"","tx_inputs":[{"amount":"0.0002","output_index":0,"prev_tx_id":"843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6","raw_input":"0100000001c7a1999edbf278fa33630c76334ac2822c1713ad7413a0e933c956d5f022b3f7010000006a47304402201cd0d8852f9d47569a9ecb608d31e0ea9c5dac0c774caa83d0f05cc31937f2390220427d93eafcd4f8143fefef8dd956297004a76a551589629ff3d10aee041d829b012103cf4b8ad1dbf57181f51d0395c766279cddc64c571cc6d015acfe35845ee68b04ffffffff02204e00000000000017a9148b5903f13b89e9728d8ee6736c3c90b32657101287805b6a03000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","script_pub_key":"a9148b5903f13b89e9728d8ee6736c3c90b32657101287","segwit":false}]}]}}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>a7a7774a-27ef-4239-8539-5d2a6ea0a251</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>4fe91578-5db9-4279-beaf-c1afd3f824f9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>c3fa974a-c2f3-4757-9742-c0da509a5147</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>ed1cfacc-0866-41bc-876b-ebe21ddc3199</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>a1397e60-c7a0-4997-8004-1561307ab2e6</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>94d76229-eb7e-4cce-801b-2973727ddd0c</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>7c750ec2-ba1f-478e-a197-fef445eab6e6</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>a22f4f5a-15e2-4f12-a054-369373ca5cee</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>f14975a2-cf6f-477c-9829-d802d9ab81e1</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>c40bc4f3-51ee-4fc6-a06e-97f1c95b1476</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>4f49758a-36f8-4dae-baf1-a367ad3565e3</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>3f3e653c-3e14-4422-ae7f-dc5f94c97b7f</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>2ff1ef9a-50de-4aea-995a-c38273faa58f</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>a33c5305-bfa6-4252-816b-11eebf9916bb</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>f820a63f-89c1-4c01-8037-9c4352a6d452</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>c47c3583-43d0-410c-8704-de732fe89e85</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>ee096649-c5ba-46a5-965e-489e7b60bee5</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>d2a033c7-df52-49c7-aa49-333978e0d1aa</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>57d6a693-8aea-43c0-b035-b6082335aca9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>ac0149e2-49b0-4827-9ce3-bbaf768f8ed4</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>f9d02775-f456-45e1-a036-c8544333a1ce</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>a429620b-7505-4fde-a766-7de5329ee635</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="69d557e7-a517-4679-9669-c2a48f687c4e" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="查询上报消息" searchProperties="true">
            <con:settings>
                <con:setting id="418e98ea-43e0-4a37-9be2-d35674c83b02fileName">历史消息查询</con:setting>
                <con:setting id="66a3df52-d59c-4db5-88e3-38c43997abb0fileName">历史消息查询</con:setting>
                <con:setting id="4c6e78aa-5e15-414d-8ecd-a97366f1eb77fileName">历史消息查询</con:setting>
                <con:setting id="69d557e7-a517-4679-9669-c2a48f687c4efileName">查询上报消息</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-历史消息查询" id="cdaba220-9559-4bc4-98c8-15a22f9570a1">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>82f9e8b9-c976-4128-bac1-a7607f0ad7ea</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg_id</con:name>
                            <con:value>LTC1550638633</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"method":"address","data":["{\"data\":\"7b226d73675f6964223a224c544331353530363338363333222c2264617461223a7b2274785f6964223a226175746f746573745f4c54435f30222c22636f696e5f74797065223a224c5443222c2261646472657373223a22516758314d7378516b34343250784a56676a7a5635374b73624e78445a5856567a57222c2269735f73756363223a747275657d7d\",\"hash\":\"7a573af9c6a75101ab7522f1e530a3a4d6d595f04143e33d844a83b2eb7ffc56\",\"signature\":\"17e66f40c8f4141e9c01708ae90be11bc3ed385f497f3f437d07eacc8b02557270c76eb3dd424d4583d996e9969f98402623c355c2b412e872bf4664c5d13fe1\"}"]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="datasource" name="DataSource-查询数据库消息" id="97205c6a-2d7e-4726-9b86-c59313d476f5">
                <con:settings>
                    <con:setting id="com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep@prepared-properties">
                        &lt;xml-fragment/>
                    </con:setting>
                </con:settings>
                <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dataSource type="Data Connection">
                        <con:configuration>
                            <Connection>cus-test( QA )</Connection>
                            <query>Select sendmsglog.msgcontent as sendmsglog_msgcontent
                                From sendmsglog
                                Where sendmsglog.msgid = '${Run TestCase-历史消息查询#msg_id}'
                            </query>
                            <fetchSize/>
                            <stored-procedure>false</stored-procedure>
                        </con:configuration>
                    </con:dataSource>
                    <con:property>sendmsglog_msgcontent</con:property>
                    <con:restartOnRun>true</con:restartOnRun>
                </con:config>
            </con:testStep>
            <con:testStep type="datagen" name="DataGen" id="ead05c0b-efba-49da-8496-18980ddcc57e">
                <con:settings/>
                <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:property type="Number">
                        <con:configuration>
                            <start>-1</start>
                            <end>10000</end>
                            <step>1</step>
                            <pattern/>
                            <random>false</random>
                            <persist>false</persist>
                        </con:configuration>
                        <con:name>number</con:name>
                        <con:mode>STEP</con:mode>
                        <con:shared>false</con:shared>
                    </con:property>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言每个字段都一致" id="b9ed3245-c806-4614-b1d2-f1405dca512b">
                <con:settings/>
                <con:config>
                    <script>import groovy.json.JsonSlurper

                        def dataDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.data}' )
                        def hashDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.hash}' )
                        def signDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.signature}' )

                        def return_msg = context.expand( '${Run TestCase-历史消息查询#return_msg}' )
                        def slurper = new JsonSlurper()
                        def json = slurper.parseText(return_msg)
                        json = slurper.parseText(json.data.data[0])
                        def dataMSG = json.data
                        def hashMSG = json.hash
                        def signMSG = json.signature

                        assert dataMSG == dataDB
                        assert hashMSG == hashDB
                        assert signMSG == signDB
                        //log.info json.data

                        //def coinTypeDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.coinType}' )
                        //def hashDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.hash}' )
                        //def fromAddrDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.fromAddr}' )
                        //def exchangeCoinAddrDB = context.expand(
                        '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.exchangeCoinAddr}' )
                        //def rechargeAmountDB = context.expand(
                        '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.rechargeAmount}' )
                        //def rechargeTimeDB = context.expand(
                        '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.rechargeTime}' )
                        //def rechargeStatusDB = context.expand(
                        '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.rechargeStatus}' )
                        //
                        //def number = context.expand( '${DataGen#number}' )
                        ////log.info number
                        //String resultF = context.expand( '${Run TestCase-历史消息查询#message#$.result['+number+']}'
                        ).toString()
                        //resultF = resultF.getAt(1..resultF.size() - 1)
                        ////log.info resultF
                        //def slurper = new JsonSlurper()
                        //def json = slurper.parseText(resultF)
                        ////log.info json.hash
                        //assert coinTypeDB.equals( json.coinType)
                        //assert hashDB.equals( json.hash)
                        //assert fromAddrDB.equals( json.fromAddr)
                        //assert exchangeCoinAddrDB.equals( json.exchangeCoinAddr)
                        //assert rechargeAmountDB.equals( json.rechargeAmount)
                        //assert rechargeTimeDB.equals( json.rechargeTime)
                        //assert rechargeStatusDB.equals( json.rechargeStatus)
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="datasourceloop" name="DataSource Loop" id="2ebf158c-4121-4e9c-be77-6e8eb3afbc2f">
                <con:settings/>
                <con:config>
                    <dataSourceStep>DataSource-查询数据库消息</dataSourceStep>
                    <targetStep>DataGen</targetStep>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>636fe2ac-2dea-46fa-8a20-0cdf753fc9ee</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="a0f91d7e-ceac-4f3f-958f-75b522db11d0" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="查询请求消息" searchProperties="true">
            <con:settings>
                <con:setting id="418e98ea-43e0-4a37-9be2-d35674c83b02fileName">历史消息查询</con:setting>
                <con:setting id="66a3df52-d59c-4db5-88e3-38c43997abb0fileName">历史消息查询</con:setting>
                <con:setting id="4c6e78aa-5e15-414d-8ecd-a97366f1eb77fileName">历史消息查询</con:setting>
                <con:setting id="91bf3c86-09fc-4489-a433-73818da3e557fileName">查询请求消息</con:setting>
                <con:setting id="a0f91d7e-ceac-4f3f-958f-75b522db11d0fileName">查询请求消息</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-历史消息查询" id="ca6cecbd-1fa2-4bed-a132-7d4f125660a4">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>44a1af8d-10bf-40cb-bb4c-4ba5fa23f236</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg_id</con:name>
                            <con:value>20190126531904</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"method":"multisignaddress","data":["{\"msg_id\":\"20190126531904\",\"data\":{\"tx_id\":\"20190126113555105569\",\"coin_type\":\"BTC\",\"addr_info\":[{\"public_key\":\"0253f0df1ad6bc64a6e771884011d253488824ebdecb90262d9b137f0089baa361\",\"address\":\"\"},{\"public_key\":\"0253f0df1ad6bc64a6e771884011d253488824ebdecb90262d9b137f0089baa361\",\"address\":\"\"},{\"public_key\":\"026b5d1baa85e1a0b460ec63a002bae78686446371739ba2bb3ac5426ffc894011\",\"address\":\"\"}],\"required\":2}}"]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="datasource" name="DataSource-查询数据库消息" id="20ece230-7b1d-47cd-ac9a-1a2e45699a71">
                <con:settings>
                    <con:setting id="com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep@prepared-properties">
                        &lt;xml-fragment/>
                    </con:setting>
                </con:settings>
                <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dataSource type="Data Connection">
                        <con:configuration>
                            <Connection>cus-test( QA )</Connection>
                            <query>Select recvmsglog.msgcontent as recvmsglog_msgcontent
                                From recvmsglog
                                Where recvmsglog.msgid = '${Run TestCase-历史消息查询#msg_id}'
                            </query>
                            <fetchSize/>
                            <stored-procedure>false</stored-procedure>
                        </con:configuration>
                    </con:dataSource>
                    <con:property>recvmsglog_msgcontent</con:property>
                    <con:restartOnRun>true</con:restartOnRun>
                </con:config>
            </con:testStep>
            <con:testStep type="datagen" name="DataGen" id="4536d456-4c04-473e-b1a9-79cbc53918df">
                <con:settings/>
                <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:property type="Number">
                        <con:configuration>
                            <start>-1</start>
                            <end>10000</end>
                            <step>1</step>
                            <pattern/>
                            <random>false</random>
                            <persist>false</persist>
                        </con:configuration>
                        <con:name>number</con:name>
                        <con:mode>STEP</con:mode>
                        <con:shared>false</con:shared>
                    </con:property>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言每个字段都一致" id="64db0750-1c43-4a28-afbb-8511acc55a06">
                <con:settings/>
                <con:config>
                    <script>import groovy.json.JsonSlurper

                        //def dataDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.data}' )
                        //def hashDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.hash}' )
                        //def signDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.signature}' )

                        def return_msg = context.expand( '${Run TestCase-历史消息查询#return_msg}' )
                        def slurper = new JsonSlurper()
                        def json1 = slurper.parseText(return_msg)
                        json1 = slurper.parseText(json1.data.data[0])

                        //log.info json1
                        def db_msg = context.expand( '${DataSource-查询数据库消息#recvmsglog_msgcontent}' )
                        def json2 = slurper.parseText(db_msg)
                        //log.info json2

                        assert json1 == json2
                        //def dataMSG = json.data
                        //def hashMSG = json.hash
                        //def signMSG = json.signature
                        //
                        //assert dataMSG == dataDB
                        //assert hashMSG == hashDB
                        //assert signMSG == signDB
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="datasourceloop" name="DataSource Loop" id="df2fb065-8b6b-4ae9-89b5-767e74df9eab">
                <con:settings/>
                <con:config>
                    <dataSourceStep>DataSource-查询数据库消息</dataSourceStep>
                    <targetStep>DataGen</targetStep>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>636fe2ac-2dea-46fa-8a20-0cdf753fc9ee</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="95c62bc5-6145-49a7-8e84-eca5dbc4f3db" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="紧急停止部分出金，出金申请失败" searchProperties="true">
            <con:settings>
                <con:setting id="44ab24e1-566b-40ce-93ac-ce653c180600fileName">紧急停止出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="04ea64c3-356d-4982-b3b4-2bc7fb8e750ffileName">紧急停止部分出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="5547b8f8-3dbb-49eb-adab-b89b5c16b4e7fileName">紧急停止部分出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="95c62bc5-6145-49a7-8e84-eca5dbc4f3dbfileName">紧急停止部分出金%EF%BC%8C出金申请失败</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-出金紧急暂停" id="aca18850-57eb-4307-8174-84feeca9d71b">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>10a9ce98-a7f3-4649-b7cd-a96fc43f907d</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>level</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coins</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":false,"is_stopped":true,"message":""}]}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 出金申请" id="5630a2e6-4c7a-4af4-a24e-853c16cf7ea2">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>7fbb51e1-aa78-4b05-a9ee-0bd666845a2a</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>ret_msg</con:name>
                            <con:value>{"msg_id":"autotest","code":1,"msg":"stop BTC withdrawal","data":null}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>ret_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言message" id="13baa09b-45a4-4c5e-b305-d55e87c3fcae">
                <con:settings/>
                <con:config>
                    <script>def message = context.expand( '${Run TestCase - 出金申请#ret_msg#$.msg}' )

                        assert message == "stop BTC withdrawal"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-获取批次号" id="868978a8-1f46-46d8-ad3b-5aeb212a9029"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>5c18318b-220a-4fe4-a029-c6fbe8aaa834</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>批次号</con:name>
                            <con:value>37</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>批次号</con:entry>
                    </con:returnProperties>
                    <con:runMode>SINGLETON_AND_WAIT</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-出金重新开启" id="f81a1349-b72a-4632-8c0e-a320ffebd5b4">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>966f34c8-c400-475b-913e-d6f3ca7d7ea7</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>level</con:name>
                            <con:value>2</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coins</con:name>
                            <con:value/>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":true,"is_stopped":false,"message":""}]}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="9a655ad2-5776-484a-89fb-5ca2e142649c" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="紧急停止部分出金，出金确认失败" searchProperties="true">
            <con:settings>
                <con:setting id="44ab24e1-566b-40ce-93ac-ce653c180600fileName">紧急停止出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="04ea64c3-356d-4982-b3b4-2bc7fb8e750ffileName">紧急停止部分出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="5547b8f8-3dbb-49eb-adab-b89b5c16b4e7fileName">紧急停止部分出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="6b76ffbc-10dc-4967-ad74-57eb6a31d052fileName">紧急停止部分出金%EF%BC%8C出金确认失败</con:setting>
                <con:setting id="9a655ad2-5776-484a-89fb-5ca2e142649cfileName">紧急停止部分出金%EF%BC%8C出金确认失败</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase - 出金申请" id="0ec808b8-e60b-46ac-93da-c372900b7fac">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>7fbb51e1-aa78-4b05-a9ee-0bd666845a2a</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>ret_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","tx_id":"autotest_BTC_withdrew_48","txs":[{"fee":"0.0001","raw":"020000000242491b1d01dd25a5bfa9891fd67067f3607fcc0d9954ad2b22d8a0f8b25ab2bb0000000000ffffffff52f43d1ec87119222aaba9eb6ffc6fbfa72b1e990e9198dcc8ad42000ddb8fb50000000000ffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","signer":"","tx_inputs":[{"amount":"0.0001","output_index":0,"prev_tx_id":"bbb25ab2f8a0d8222bad54990dcc7f60f36770d61f89a9bfa525dd011d1b4942","raw_input":"0100000001e5fe70c4cd7ba30d49b8ffd94f3c0ab5254ba28019360ab1c94587e2a40521ac010000006b483045022100fced1f6c4582cc479db99f7e2e33573d0f2fdc66576092b9446a3cc82bba971d02207fb62987a528c5aa1e864d20d18bb2c543b83a181f2c044ae92abee633b450b3012103cf4b8ad1dbf57181f51d0395c766279cddc64c571cc6d015acfe35845ee68b04ffffffff02102700000000000017a9148fe1b40471adb723dd3feee5fba788c0b26993a187a06d7403000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","script_pub_key":"a9148fe1b40471adb723dd3feee5fba788c0b26993a187","segwit":false},{"amount":"0.0001","output_index":0,"prev_tx_id":"b58fdb0d0042adc8dc98910e991e2ba7bf6ffc6feba9ab2a221971c81e3df452","raw_input":"010000000142491b1d01dd25a5bfa9891fd67067f3607fcc0d9954ad2b22d8a0f8b25ab2bb010000006b483045022100a225417bb467abfed7821c66bc5aa4699cfdf2d5345f8ffd01c74799244c308a02201de11bbf952ab17f4b3562dcb42a2aec5db19d544d6cd45d510a85b69245d57e012103cf4b8ad1dbf57181f51d0395c766279cddc64c571cc6d015acfe35845ee68b04ffffffff02102700000000000017a9148fe1b40471adb723dd3feee5fba788c0b26993a187f0bf7203000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","script_pub_key":"a9148fe1b40471adb723dd3feee5fba788c0b26993a187","segwit":false}]}]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>ret_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-出金紧急暂停" id="6aacc8eb-6f7d-4442-b9ac-3be418e3219e">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>10a9ce98-a7f3-4649-b7cd-a96fc43f907d</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>level</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coins</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":false,"is_stopped":true,"message":""}]}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="Groovy Script" id="b74be723-490f-40da-9285-c718e1442bc3">
                <con:settings/>
                <con:config>
                    <script>def ret_msg = context.expand( '${Run TestCase - 出金申请#ret_msg}' )
                        log.info ret_msg
                        return ret_msg
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 出金确认" id="b91ca58b-0b77-4ca7-9a2e-3713eadfe481">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>ccc52931-ec79-4729-bd50-bc7621b0f895</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>出金申请ret_msg</con:name>
                            <con:value>${Groovy Script#result}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>确认ret_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言message" id="e872782a-fc2d-46f4-b956-37131cce70af">
                <con:settings/>
                <con:config>
                    <script>def message = context.expand( '${Run TestCase - 出金确认#确认ret_msg#$.msg}' )

                        assert message == "stop BTC withdrawal"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-获取批次号" id="daa3cf3f-0525-47c5-83d6-ad34634e9d49"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>5c18318b-220a-4fe4-a029-c6fbe8aaa834</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>批次号</con:name>
                            <con:value>37</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>批次号</con:entry>
                    </con:returnProperties>
                    <con:runMode>SINGLETON_AND_WAIT</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-出金重新开启" id="f4893e13-7c13-482b-a569-79ca13ef56f1">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>966f34c8-c400-475b-913e-d6f3ca7d7ea7</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>level</con:name>
                            <con:value>2</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coins</con:name>
                            <con:value/>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":true,"is_stopped":false,"message":""}]}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="37bcb5ee-b289-483b-9350-d42701f1d124" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="入金对账(需手动)" searchProperties="true">
            <con:settings>
                <con:setting id="f4ec3b44-64b5-4b17-8c38-907e5d52a9a0fileName">入金</con:setting>
                <con:setting id="ba3c6283-b7bc-4e5d-9f5d-655c5d7cfc6afileName">对账</con:setting>
                <con:setting id="2cee2f1c-af30-4d01-978a-5564d1cffa7efileName">对账</con:setting>
                <con:setting id="0c76d1af-f21d-4f5c-89e7-fd6e6081a056fileName">入金对账%28需手动%29</con:setting>
                <con:setting id="b2317c8c-d3f7-44f6-9f37-6b7c9d5e527ffileName">入金对账%28需手动%29</con:setting>
                <con:setting id="37bcb5ee-b289-483b-9350-d42701f1d124fileName">入金对账%28需手动%29</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase - 对账接口" id="7738a5fb-1592-47e5-a58f-5581b194e05e">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>ab8906a1-3b94-4f94-9388-53060c708f33</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>type</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>begin_time</con:name>
                            <con:value>1543557431</con:value>
                        </con:property>
                        <con:property>
                            <con:name>end_time</con:name>
                            <con:value>1555682623</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"","code":0,"msg":"","data":{"url":"https://139.219.129.26:40339/files/19700101_19700101.csv"}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-入金对账请求" id="140b899e-1fa0-4e3c-abeb-abdab174a52a"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>76c2f8a4-951f-494a-a0c8-24a2ef178edf</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>message</con:name>
                            <con:value>http://42.159.155.44:40339/files/in_20181130_20181213.csv</con:value>
                        </con:property>
                        <con:property>
                            <con:name>出入金类型</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>开始时间</con:name>
                            <con:value>${#TestCase#开始时间}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>结束时间</con:name>
                            <con:value>${#TestCase#结束时间}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>message</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="downloadFiles" id="3dc880da-3306-4ab5-b969-24db7184a678"
                          disabled="true">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="7cb833ac-d086-4a55-822c-1e32247da54c"
                            name="downloadFiles" postQueryString="false" mediaType="application/xml"
                            downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>${Run TestCase-入金对账请求#message}</con:endpoint>
                    <con:request/>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:attachment>
                        <con:name>in_20181123_201811302632195037889636840.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811302632195037889636840.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811302632195037889636840.csv</con:url>
                        <con:id>3dd14eff-f8fc-4a28-8068-ecd849977964</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811306076817833798337393.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811306076817833798337393.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811306076817833798337393.csv</con:url>
                        <con:id>992bc5e0-b566-4374-b01d-36ea0e96d504</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811303985836226281124064.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811303985836226281124064.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811303985836226281124064.csv</con:url>
                        <con:id>2ebe6144-4472-4b4d-a721-8d2d24a8c111</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_20181130485091523965045405.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_20181130485091523965045405.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_20181130485091523965045405.csv</con:url>
                        <con:id>0160aa49-428d-4906-a9d1-925e7d2d4955</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811303528880127235685249.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811303528880127235685249.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811303528880127235685249.csv</con:url>
                        <con:id>c7fbee5d-c2e4-4711-8128-666e1d160d96</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201812131665968294907385453.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201812131665968294907385453.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201812131665968294907385453.csv</con:url>
                        <con:id>4aea7354-bcb3-43b1-8a38-841515232bb3</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181130_201812136822892826078680293.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181130_201812136822892826078680293.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181130_201812136822892826078680293.csv</con:url>
                        <con:id>71f7e8b1-0222-4ffb-a393-ebf2b08dfdfe</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181130_201812131314383023288728051.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181130_201812131314383023288728051.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181130_201812131314383023288728051.csv</con:url>
                        <con:id>4bcfc397-214d-4319-beff-1bac981104a8</con:id>
                    </con:attachment>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="jdbc" name="JDBC Request-查询入金表" id="000c43a3-884a-4385-a878-bec0e94fb8b9">
                <con:settings>
                    <con:setting id="prettyPrintResponse">true</con:setting>
                </con:settings>
                <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dbConnectionName>cus-test</con:dbConnectionName>
                    <con:driver>com.mysql.jdbc.Driver</con:driver>
                    <con:connectionString>jdbc:mysql://139.219.140.220:3306/wallet?user=custodian&amp;password=PASS_VALUE</con:connectionString>
                    <con:password>custodian</con:password>
                    <con:connectionProperties/>
                    <con:query>SELECT * FROM `depositlog` where operatetime >= '${#TestCase#开始时间}' and operatetime &lt;=
                        '${#TestCase#结束时间}'
                    </con:query>
                    <con:properties/>
                </con:config>
            </con:testStep>
            <con:testStep type="datasource" name="DataSource" id="c18d9047-68fe-4335-8b7c-b1bbdf90f74e">
                <con:settings/>
                <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dataSource type="Excel">
                        <con:configuration>
                            <file>C:/Users/DELL/Desktop/in_20181130_201812131314383023288728051.xlsx</file>
                            <worksheet/>
                            <cell>A9</cell>
                            <ignoreEmpty>false</ignoreEmpty>
                            <evaluateFormulas>false</evaluateFormulas>
                        </con:configuration>
                    </con:dataSource>
                    <con:property>Serialnumber</con:property>
                    <con:property>businessNo</con:property>
                    <con:property>coinType</con:property>
                    <con:property>txType</con:property>
                    <con:property>amount</con:property>
                    <con:property>handlingfee</con:property>
                    <con:property>time</con:property>
                    <con:property>fromAddr</con:property>
                    <con:property>destAddr</con:property>
                    <con:restartOnRun>true</con:restartOnRun>
                </con:config>
            </con:testStep>
            <con:testStep type="datagen" name="DataGen" id="a2216b2b-d9b8-4e7c-a4a8-9eab8bb89355">
                <con:settings/>
                <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:property type="Number">
                        <con:configuration>
                            <start>0</start>
                            <end>10000</end>
                            <step>1</step>
                            <pattern/>
                            <random>false</random>
                            <persist>false</persist>
                        </con:configuration>
                        <con:name>number</con:name>
                        <con:mode>STEP</con:mode>
                        <con:shared>false</con:shared>
                    </con:property>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言字段一致" id="cd7a55bd-1e6f-468b-9ccb-1a9886f2b4d9">
                <con:settings/>
                <con:config>
                    <script>import java.text.SimpleDateFormat

                        def number = context.expand( '${DataGen#number}' )
                        log.info number
                        //String resultF = context.expand( '${Run TestCase-业务操作状态查询#message#$.result['+number+']}'
                        ).toString()
                        def coinTypeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.COINTYPE[1]}'
                        )
                        def fromAddrDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.FROMADDR[1]}'
                        )
                        def amountDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.AMOUNT[1]}'
                        ).toBigDecimal()
                        def handlingfeeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.HANDLINGFEE[1]}'
                        ).toBigDecimal()
                        def timeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.OPERATETIME[1]}'
                        ).toLong()
                        def destAddrDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.LEDGERADDR[1]}'
                        )

                        def coinTypeF = context.expand( '${DataSource#coinType}' )
                        def amountF = context.expand( '${DataSource#amount}' ).toBigDecimal()
                        def handlingfeeF = context.expand( '${DataSource#handlingfee}' ).toBigDecimal()
                        def timeF = context.expand( '${DataSource#time}' )
                        def fromAddrF = context.expand( '${DataSource#fromAddr}' )
                        def destAddrF = context.expand( '${DataSource#destAddr}' )
                        //2018-11-29 04:38:08
                        //log.info timeDB
                        Date date = new Date(timeDB*1000)
                        time = date.format("yyyy-MM-d aH:mm", TimeZone.getTimeZone('UTC'))
                        //log.info time

                        assert coinTypeDB.equals(coinTypeF)
                        assert fromAddrDB.equals(fromAddrF)
                        assert destAddrDB.equals(destAddrF)
                        assert timeF.equals( time)
                        assert handlingfeeDB== handlingfeeF
                        assert amountDB == amountF


                        //def slurper = new JsonSlurper()
                        //def json = slurper.parseText(resultF)
                        ////log.info json.hash
                        //assert coinTypeDB.equals( json.coinType)
                        //assert hashDB.equals( json.hash)
                        //assert fromAddrDB.equals( json.fromAddr)
                        //assert exchangeCoinAddrDB.equals( json.exchangeCoinAddr)
                        //assert rechargeAmountDB.equals( json.rechargeAmount)
                        //assert rechargeTimeDB.equals( json.rechargeTime)
                        //assert rechargeStatusDB.equals( json.rechargeStatus)
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="datasourceloop" name="DataSource Loop" id="fb43e94e-c48b-4399-99a3-c67d8c3140f4">
                <con:settings/>
                <con:config>
                    <dataSourceStep>DataSource</dataSourceStep>
                    <targetStep>DataGen</targetStep>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>开始时间</con:name>
                    <con:value>1543557431</con:value>
                </con:property>
                <con:property>
                    <con:name>结束时间</con:name>
                    <con:value>1555682623</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>a7a7774a-27ef-4239-8539-5d2a6ea0a251</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>98e737a2-9945-4e80-aea7-275105cb8643</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>cd153609-10e9-4c8b-84e5-41cd73120943</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>179adbec-b8f9-4da4-bd7c-b6988fdbf8e9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="1d4a4227-972e-44b9-969e-14f883f13766" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="出金对账(需手动)" searchProperties="true">
            <con:settings>
                <con:setting id="f4ec3b44-64b5-4b17-8c38-907e5d52a9a0fileName">入金</con:setting>
                <con:setting id="ba3c6283-b7bc-4e5d-9f5d-655c5d7cfc6afileName">对账</con:setting>
                <con:setting id="2cee2f1c-af30-4d01-978a-5564d1cffa7efileName">对账</con:setting>
                <con:setting id="0c76d1af-f21d-4f5c-89e7-fd6e6081a056fileName">入金对账%28需手动%29</con:setting>
                <con:setting id="b2317c8c-d3f7-44f6-9f37-6b7c9d5e527ffileName">入金对账%28需手动%29</con:setting>
                <con:setting id="1ac3cdb7-fd7c-4659-a43e-de64eba0940efileName">出金对账%28需手动%29</con:setting>
                <con:setting id="1d4a4227-972e-44b9-969e-14f883f13766fileName">出金对账%28需手动%29</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase - 对账接口" id="3fcb3e7a-b6fb-4899-ae16-84d1a6fa9b78">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>ab8906a1-3b94-4f94-9388-53060c708f33</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>type</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>begin_time</con:name>
                            <con:value>1543557431</con:value>
                        </con:property>
                        <con:property>
                            <con:name>end_time</con:name>
                            <con:value>1555682623</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"","code":0,"msg":"","data":{"url":"https://139.219.129.26:40339/files/19700101_19700101.csv"}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-入金对账请求" id="c536ec51-9efb-48e1-8ee8-ba4fdbe0721c"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>76c2f8a4-951f-494a-a0c8-24a2ef178edf</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>message</con:name>
                            <con:value>http://42.159.155.44:40339/files/in_20181130_20181213.csv</con:value>
                        </con:property>
                        <con:property>
                            <con:name>出入金类型</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>开始时间</con:name>
                            <con:value>${#TestCase#开始时间}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>结束时间</con:name>
                            <con:value>${#TestCase#结束时间}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>message</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="downloadFiles" id="0288bcdc-40e5-4706-8afb-5e7dc87c54a9"
                          disabled="true">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="7cb833ac-d086-4a55-822c-1e32247da54c"
                            name="downloadFiles" postQueryString="false" mediaType="application/xml"
                            downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>${Run TestCase-入金对账请求#message}</con:endpoint>
                    <con:request/>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:attachment>
                        <con:name>in_20181123_201811302632195037889636840.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811302632195037889636840.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811302632195037889636840.csv</con:url>
                        <con:id>3dd14eff-f8fc-4a28-8068-ecd849977964</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811306076817833798337393.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811306076817833798337393.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811306076817833798337393.csv</con:url>
                        <con:id>992bc5e0-b566-4374-b01d-36ea0e96d504</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811303985836226281124064.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811303985836226281124064.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811303985836226281124064.csv</con:url>
                        <con:id>2ebe6144-4472-4b4d-a721-8d2d24a8c111</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_20181130485091523965045405.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_20181130485091523965045405.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_20181130485091523965045405.csv</con:url>
                        <con:id>0160aa49-428d-4906-a9d1-925e7d2d4955</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811303528880127235685249.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811303528880127235685249.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811303528880127235685249.csv</con:url>
                        <con:id>c7fbee5d-c2e4-4711-8128-666e1d160d96</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201812131665968294907385453.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201812131665968294907385453.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201812131665968294907385453.csv</con:url>
                        <con:id>4aea7354-bcb3-43b1-8a38-841515232bb3</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181130_201812136822892826078680293.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181130_201812136822892826078680293.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181130_201812136822892826078680293.csv</con:url>
                        <con:id>71f7e8b1-0222-4ffb-a393-ebf2b08dfdfe</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181130_201812131314383023288728051.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181130_201812131314383023288728051.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181130_201812131314383023288728051.csv</con:url>
                        <con:id>4bcfc397-214d-4319-beff-1bac981104a8</con:id>
                    </con:attachment>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="jdbc" name="JDBC Request-查询入金表" id="99382878-6b05-44d9-8938-451f85d5ba63">
                <con:settings>
                    <con:setting id="prettyPrintResponse">true</con:setting>
                </con:settings>
                <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dbConnectionName>cus-test</con:dbConnectionName>
                    <con:driver>com.mysql.jdbc.Driver</con:driver>
                    <con:connectionString>jdbc:mysql://139.219.140.220:3306/wallet?user=custodian&amp;password=PASS_VALUE</con:connectionString>
                    <con:password>custodian</con:password>
                    <con:connectionProperties/>
                    <con:query>SELECT * FROM `depositlog` where operatetime >= '${#TestCase#开始时间}' and operatetime &lt;=
                        '${#TestCase#结束时间}'
                    </con:query>
                    <con:properties/>
                </con:config>
            </con:testStep>
            <con:testStep type="datasource" name="DataSource" id="111ac471-6a5b-4a38-b46e-78369d369243">
                <con:settings/>
                <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dataSource type="Excel">
                        <con:configuration>
                            <file>C:/Users/DELL/Desktop/in_20181130_201812131314383023288728051.xlsx</file>
                            <worksheet/>
                            <cell>A9</cell>
                            <ignoreEmpty>false</ignoreEmpty>
                            <evaluateFormulas>false</evaluateFormulas>
                        </con:configuration>
                    </con:dataSource>
                    <con:property>Serialnumber</con:property>
                    <con:property>businessNo</con:property>
                    <con:property>coinType</con:property>
                    <con:property>txType</con:property>
                    <con:property>amount</con:property>
                    <con:property>handlingfee</con:property>
                    <con:property>time</con:property>
                    <con:property>fromAddr</con:property>
                    <con:property>destAddr</con:property>
                    <con:restartOnRun>true</con:restartOnRun>
                </con:config>
            </con:testStep>
            <con:testStep type="datagen" name="DataGen" id="350649d9-d099-43bd-a090-006db12d0643">
                <con:settings/>
                <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:property type="Number">
                        <con:configuration>
                            <start>0</start>
                            <end>10000</end>
                            <step>1</step>
                            <pattern/>
                            <random>false</random>
                            <persist>false</persist>
                        </con:configuration>
                        <con:name>number</con:name>
                        <con:mode>STEP</con:mode>
                        <con:shared>false</con:shared>
                    </con:property>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言字段一致" id="84d94eee-2b23-4ce0-9f6d-020b2f5d281b">
                <con:settings/>
                <con:config>
                    <script>import java.text.SimpleDateFormat

                        def number = context.expand( '${DataGen#number}' )
                        log.info number
                        //String resultF = context.expand( '${Run TestCase-业务操作状态查询#message#$.result['+number+']}'
                        ).toString()
                        def coinTypeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.COINTYPE[1]}'
                        )
                        def fromAddrDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.FROMADDR[1]}'
                        )
                        def amountDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.AMOUNT[1]}'
                        ).toBigDecimal()
                        def handlingfeeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.HANDLINGFEE[1]}'
                        ).toBigDecimal()
                        def timeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.OPERATETIME[1]}'
                        ).toLong()
                        def destAddrDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.LEDGERADDR[1]}'
                        )

                        def coinTypeF = context.expand( '${DataSource#coinType}' )
                        def amountF = context.expand( '${DataSource#amount}' ).toBigDecimal()
                        def handlingfeeF = context.expand( '${DataSource#handlingfee}' ).toBigDecimal()
                        def timeF = context.expand( '${DataSource#time}' )
                        def fromAddrF = context.expand( '${DataSource#fromAddr}' )
                        def destAddrF = context.expand( '${DataSource#destAddr}' )
                        //2018-11-29 04:38:08
                        //log.info timeDB
                        Date date = new Date(timeDB*1000)
                        time = date.format("yyyy-MM-d aH:mm", TimeZone.getTimeZone('UTC'))
                        //log.info time

                        assert coinTypeDB.equals(coinTypeF)
                        assert fromAddrDB.equals(fromAddrF)
                        assert destAddrDB.equals(destAddrF)
                        assert timeF.equals( time)
                        assert handlingfeeDB== handlingfeeF
                        assert amountDB == amountF


                        //def slurper = new JsonSlurper()
                        //def json = slurper.parseText(resultF)
                        ////log.info json.hash
                        //assert coinTypeDB.equals( json.coinType)
                        //assert hashDB.equals( json.hash)
                        //assert fromAddrDB.equals( json.fromAddr)
                        //assert exchangeCoinAddrDB.equals( json.exchangeCoinAddr)
                        //assert rechargeAmountDB.equals( json.rechargeAmount)
                        //assert rechargeTimeDB.equals( json.rechargeTime)
                        //assert rechargeStatusDB.equals( json.rechargeStatus)
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="datasourceloop" name="DataSource Loop" id="485fa442-bdf5-4491-84ba-d0ad1519e0e5">
                <con:settings/>
                <con:config>
                    <dataSourceStep>DataSource</dataSourceStep>
                    <targetStep>DataGen</targetStep>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>开始时间</con:name>
                    <con:value>1543557431</con:value>
                </con:property>
                <con:property>
                    <con:name>结束时间</con:name>
                    <con:value>1555682623</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>a7a7774a-27ef-4239-8539-5d2a6ea0a251</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>98e737a2-9945-4e80-aea7-275105cb8643</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>cd153609-10e9-4c8b-84e5-41cd73120943</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>179adbec-b8f9-4da4-bd7c-b6988fdbf8e9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="e4753995-943a-4b8c-9dfb-5d680125a49e" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="获取批次号" searchProperties="true" disabled="true">
            <con:settings>
                <con:setting id="c1d08213-77c7-440c-9215-9d46d61083b1fileName">获取批次号</con:setting>
                <con:setting id="5c18318b-220a-4fe4-a029-c6fbe8aaa834fileName">获取批次号</con:setting>
                <con:setting id="acd94a41-69ff-43e5-8575-d3421c6fb2c1fileName">获取批次号</con:setting>
                <con:setting id="e4753995-943a-4b8c-9dfb-5d680125a49efileName">获取批次号</con:setting>
            </con:settings>
            <con:testStep type="datagen" name="DataGen" id="5f9fafd0-b172-431a-978b-d5ddc96da9c4">
                <con:settings/>
                <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:property type="Number">
                        <con:configuration>
                            <start>0</start>
                            <end>100000</end>
                            <step>1</step>
                            <pattern/>
                            <random>false</random>
                            <persist>true</persist>
                            <current>54.0</current>
                        </con:configuration>
                        <con:name>批次号</con:name>
                        <con:mode>STEP</con:mode>
                        <con:shared>true</con:shared>
                    </con:property>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="f8119f3e-e5d3-4f9d-90b8-45bda93aa90b">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>批次号</con:name>
                        <con:sourceType>批次号</con:sourceType>
                        <con:sourceStep>DataGen</con:sourceStep>
                        <con:targetType>批次号</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:type>XQUERY</con:type>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>批次号</con:name>
                    <con:value>2</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>bf47f906-e4a4-4ff1-9931-e3c720caefcc</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>b7ef4be3-f800-4a0f-a224-219ff640a91a</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>6a4dbbc3-9612-4696-8564-2a820a4731ca</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>4dd75fd3-8a61-4d4d-9a85-32e203151264</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>76e903e6-0906-47ca-9a1d-93225139802e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>f2691b76-d299-4dca-a78d-6c05adb81560</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>2be7367f-20cd-4744-94cd-904de79c7510</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
    </con:testSuite>
    <con:testSuite id="d34119ae-6339-43df-b598-e31fda48e295" name="水龙头交易">
        <con:settings>
            <con:setting id="d34119ae-6339-43df-b598-e31fda48e295fileName">签名交易</con:setting>
        </con:settings>
        <con:savedRecentRuns>1</con:savedRecentRuns>
        <con:runType>SEQUENTIAL</con:runType>
        <con:properties>
            <con:property>
                <con:name>blockcypher</con:name>
                <con:value>api.blockcypher.com/v1/btc/test3</con:value>
            </con:property>
        </con:properties>
        <con:reportParameters/>
        <con:testCase id="746749d0-aa4d-4e44-afe4-d70335e45737" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="BTC转账" searchProperties="true">
            <con:settings>
                <con:setting id="746749d0-aa4d-4e44-afe4-d70335e45737fileName">BTC交易</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="调用nodejs代码转账" id="1acec7a7-7c20-4218-9467-3ce6b0fee7a6">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="b7db91fd-4419-451e-9a95-eaa336a9a7f7"
                            name="调用nodejs代码转账" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://42.159.154.248:10330/btc/tx</con:endpoint>
                    <con:request/>
                    <con:assertion type="XPath Match" id="a10126a1-827e-4a02-80d4-cb39427527b6"
                                   name="Check for existence of [body]">
                        <con:configuration>
                            <path>exists( //html/body)</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters>
                        <con:parameter>
                            <con:name>priKeyWIF</con:name>
                            <con:value>${#TestCase#源地址私钥}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                        <con:parameter>
                            <con:name>targetAddress</con:name>
                            <con:value>${#TestCase#目的地址}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                        <con:parameter>
                            <con:name>amount</con:name>
                            <con:value>${#TestCase#金额}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                    </con:parameters>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="a499db05-bf16-4b80-888a-1e0ce4c4ce9f">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>调用nodejs代码转账</con:sourceStep>
                        <con:sourcePath>//html[1]/body[1]</con:sourcePath>
                        <con:targetType>hash</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value>2MueDvwbeFyMKavEx2rDskHpmHvrH7PU9iH</con:value>
                </con:property>
                <con:property>
                    <con:name>源地址私钥</con:name>
                    <con:value>cMmeobe2QuWuUTpMYyAsByg9gf1BiFpfYumb3r2KgxJVJTQnn4Dc</con:value>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value>200000</con:value>
                </con:property>
                <con:property>
                    <con:name>hash</con:name>
                    <con:value>f885351fd0e8caf93501a6d5c1ba7b07aefc9c84b4ea1b947063dfcdb9869893</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>1acec7a7-7c20-4218-9467-3ce6b0fee7a6</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="85c6039e-ec13-4b6a-8039-77d3e0cdec32" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="LTC转账" searchProperties="true">
            <con:settings>
                <con:setting id="746749d0-aa4d-4e44-afe4-d70335e45737fileName">BTC交易</con:setting>
                <con:setting id="85c6039e-ec13-4b6a-8039-77d3e0cdec32fileName">LTC转账</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="调用nodejs代码转账" id="fe864fdd-0e80-4aac-8389-26b7036f8231">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="b7db91fd-4419-451e-9a95-eaa336a9a7f7"
                            name="调用nodejs代码转账" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://42.159.154.248:10330/ltc/tx</con:endpoint>
                    <con:request/>
                    <con:assertion type="JsonPath Match" id="e5bf36d2-2462-4d5e-929c-ad4b1ca39084"
                                   name="Match content of [status]">
                        <con:configuration>
                            <path>$.status</path>
                            <content>success</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters>
                        <con:parameter>
                            <con:name>priKeyWIF</con:name>
                            <con:value>${#TestCase#源地址私钥}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                        <con:parameter>
                            <con:name>targetAddress</con:name>
                            <con:value>${#TestCase#目的地址}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                        <con:parameter>
                            <con:name>amount</con:name>
                            <con:value>${#TestCase#金额}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                    </con:parameters>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="ed0ee0d9-f35b-4b85-8c97-312657524e0d">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>调用nodejs代码转账</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.154.248/ltc/tx';
                            //ns1:Response[1]/ns1:data[1]/ns1:txid[1]
                        </con:sourcePath>
                        <con:targetType>hash</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value>QPSRZCGpqnzmnKpbYytG81pRKznU7x69Ja</con:value>
                </con:property>
                <con:property>
                    <con:name>源地址私钥</con:name>
                    <con:value>cSK5UZ6eKgqaabgRPFAaT8xQ4TkcEXeUvr9262xNtiL2Ln1SbDah</con:value>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value>20000</con:value>
                </con:property>
                <con:property>
                    <con:name>hash</con:name>
                    <con:value>550506d037c2f76d89523b491275d5257a4ac888fd44c429b7c20bd2b92bb650</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>1acec7a7-7c20-4218-9467-3ce6b0fee7a6</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="8a7496af-cd7d-4810-8b85-ef5690a147df" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="ETH转账" searchProperties="true">
            <con:settings>
                <con:setting id="746749d0-aa4d-4e44-afe4-d70335e45737fileName">BTC交易</con:setting>
                <con:setting id="85c6039e-ec13-4b6a-8039-77d3e0cdec32fileName">LTC转账</con:setting>
                <con:setting id="8a7496af-cd7d-4810-8b85-ef5690a147dffileName">ETH转账</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="调用nodejs代码转账" id="71f18bc6-4ba2-4efc-8109-83a02545483c">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="b7db91fd-4419-451e-9a95-eaa336a9a7f7"
                            name="调用nodejs代码转账" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://42.159.154.248:10330/eth/tx</con:endpoint>
                    <con:request/>
                    <con:assertion type="XPath Match" id="6ddde8dd-7e0f-41db-b4e3-dab260ee718e"
                                   name="Check for existence of [body]">
                        <con:configuration>
                            <path>exists( //html/body)</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters>
                        <con:parameter>
                            <con:name>priKeyWIF</con:name>
                            <con:value>${#TestCase#源地址私钥}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                        <con:parameter>
                            <con:name>targetAddress</con:name>
                            <con:value>${#TestCase#目的地址}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                        <con:parameter>
                            <con:name>amount</con:name>
                            <con:value>${#TestCase#金额}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                    </con:parameters>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="3956811c-a503-43c1-9225-1738e7a3e267">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>调用nodejs代码转账</con:sourceStep>
                        <con:sourcePath>//html[1]/body[1]</con:sourcePath>
                        <con:targetType>hash</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value>0xfE3b843Fd0B24054a65d97b7132C42F60809cF5c</con:value>
                </con:property>
                <con:property>
                    <con:name>源地址私钥</con:name>
                    <con:value>0xE2438F0B820849EF6C7E3593E0A1A1823391B1FC500D4D7D778A42D5DBF84F21</con:value>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value>0.02</con:value>
                </con:property>
                <con:property>
                    <con:name>hash</con:name>
                    <con:value>0x0bb35a4f1d510efd9f52d9d11faa6ddc6180ec104d6f1140078bdaa7c39e487c</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>1acec7a7-7c20-4218-9467-3ce6b0fee7a6</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="7a8099fc-86e9-4f81-9bdc-d17312e72402" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="BCH转账" searchProperties="true">
            <con:settings>
                <con:setting id="746749d0-aa4d-4e44-afe4-d70335e45737fileName">BTC交易</con:setting>
                <con:setting id="85c6039e-ec13-4b6a-8039-77d3e0cdec32fileName">LTC转账</con:setting>
                <con:setting id="8a7496af-cd7d-4810-8b85-ef5690a147dffileName">ETH转账</con:setting>
                <con:setting id="7a8099fc-86e9-4f81-9bdc-d17312e72402fileName">BCH转账</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="调用nodejs代码转账" id="69095506-8d96-4e48-9a82-986d8620ccd3">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="b7db91fd-4419-451e-9a95-eaa336a9a7f7"
                            name="调用nodejs代码转账" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://42.159.154.248:10330/bch/tx</con:endpoint>
                    <con:request/>
                    <con:assertion type="JsonPath Existence Match" id="cb0fc03d-de04-42e8-981f-b7d751901d94"
                                   name="Check for existence of [result]">
                        <con:configuration>
                            <path>$.result</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters>
                        <con:parameter>
                            <con:name>priKeyWIF</con:name>
                            <con:value>${#TestCase#源地址私钥}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                        <con:parameter>
                            <con:name>targetAddress</con:name>
                            <con:value>${#TestCase#目的地址}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                        <con:parameter>
                            <con:name>amount</con:name>
                            <con:value>${#TestCase#金额}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                    </con:parameters>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="01685400-02bc-40e5-bd0d-bd92f38f8d41">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>调用nodejs代码转账</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.154.248/bch/tx';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>hash</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value>bchtest:qqlwvxr90q9uyumrc89rnmafhwa5qzq3jcs7pnnec4</con:value>
                </con:property>
                <con:property>
                    <con:name>源地址私钥</con:name>
                    <con:value>cTaGgAuFguik6AcFEpsrC2Zth8vK6hpWW9fhV34KTVkwac1FHe7g</con:value>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value>10000</con:value>
                </con:property>
                <con:property>
                    <con:name>hash</con:name>
                    <con:value>7b91898f83db8847f4abafded86b3e4d45d02cd4c2ca241ad4ec644388816629</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>1acec7a7-7c20-4218-9467-3ce6b0fee7a6</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="b216ff70-08ac-446f-b4b0-7bd8f18b2576" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="USDT转账" searchProperties="true">
            <con:settings>
                <con:setting id="7516b0c5-bef3-482d-8017-0ef38591602ffileName">转账</con:setting>
                <con:setting id="ae3956d4-1a9c-4be6-a5ea-b490d4d6d680fileName">转账</con:setting>
                <con:setting id="6e153a2f-097f-49dd-a609-2e85ce0ecd82fileName">转账</con:setting>
                <con:setting id="b216ff70-08ac-446f-b4b0-7bd8f18b2576fileName">USDT转账</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="omni_send" id="70ad8eaf-c820-4b16-98d0-c59bec9737c8">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16"
                            name="omni_send" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#USDT同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "omni_send",
                        "params": [
                        "msgrPLKzTz2j8oZ9ruLbnjKu1K219mnGZf",
                        "${#TestCase#目的地址}",
                        1,
                        "${#TestCase#金额}"
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="d74c654b-a848-4906-b3dd-0aeb32e30cb7">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>omni_send</con:sourceStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value>mhvJrXq6FmZcuMH5yAasNtENvArhwF93rr</con:value>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value>0.001</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>99ae7b30-1e04-4d19-b2b7-576a57ec0e59</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>0201aa4d-03aa-4b4f-9613-6a42a4d8cedf</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="350d7022-9c82-48a1-b4ed-abd701af0ce1" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="XRP转账" searchProperties="true">
            <con:settings>
                <con:setting id="7516b0c5-bef3-482d-8017-0ef38591602ffileName">转账</con:setting>
                <con:setting id="ae3956d4-1a9c-4be6-a5ea-b490d4d6d680fileName">转账</con:setting>
                <con:setting id="6e153a2f-097f-49dd-a609-2e85ce0ecd82fileName">转账</con:setting>
                <con:setting id="b216ff70-08ac-446f-b4b0-7bd8f18b2576fileName">USDT转账</con:setting>
                <con:setting id="350d7022-9c82-48a1-b4ed-abd701af0ce1fileName">XRP转账</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="调用nodejs代码转账" id="83f8cd78-7e17-4e35-aaf1-c727ba0d779b">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="b7db91fd-4419-451e-9a95-eaa336a9a7f7"
                            name="调用nodejs代码转账" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://42.159.154.248:10330/xrp/tx</con:endpoint>
                    <con:request/>
                    <con:assertion type="JsonPath Match" id="e2741651-b2c6-40a7-94f5-de179d43b107"
                                   name="Match content of [resultCode]">
                        <con:configuration>
                            <path>$.resultCode</path>
                            <content>tesSUCCESS</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters>
                        <con:parameter required="false" disableUrlEncoding="false">
                            <con:name>srcAddress</con:name>
                            <con:value>${#TestCase#源地址}</con:value>
                            <con:style>QUERY</con:style>
                            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
                            <con:default/>
                            <con:description xsi:nil="true"/>
                        </con:parameter>
                        <con:parameter>
                            <con:name>priKeyWIF</con:name>
                            <con:value>${#TestCase#源地址secret}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                        <con:parameter>
                            <con:name>targetAddress</con:name>
                            <con:value>${#TestCase#目的地址}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                        <con:parameter>
                            <con:name>amount</con:name>
                            <con:value>${#TestCase#金额}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                    </con:parameters>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="40e3a1d1-716e-4631-b04b-8d117594ad51">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>调用nodejs代码转账</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.154.248/xrp/tx';
                            //ns1:Response[1]/ns1:tx_json[1]/ns1:hash[1]
                        </con:sourcePath>
                        <con:targetType>hash</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>源地址</con:name>
                    <con:value>rEuq5Z8abTgbhP5o94gzbd1SSudo33xD6b</con:value>
                </con:property>
                <con:property>
                    <con:name>源地址secret</con:name>
                    <con:value>ssfoX6C3VD2ahfhXwxpC7XGse8nJV</con:value>
                </con:property>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value>r9MBRFNpzQQbKE4SbLRiFUdDNkaubeJC1h</con:value>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value>10.99</con:value>
                </con:property>
                <con:property>
                    <con:name>hash</con:name>
                    <con:value>B97D297BEE970AED39B3724C8080D9C65DE52760932CDE3175FA3D257A2C9C0F</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>99ae7b30-1e04-4d19-b2b7-576a57ec0e59</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>0201aa4d-03aa-4b4f-9613-6a42a4d8cedf</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
    </con:testSuite>
    <con:testSuite id="265e1f32-79f5-406d-87cc-6cd41848af96" name="钱包服务接口">
        <con:settings>
            <con:setting id="265e1f32-79f5-406d-87cc-6cd41848af96fileName">钱包服务接口</con:setting>
        </con:settings>
        <con:savedRecentRuns>1</con:savedRecentRuns>
        <con:runType>SEQUENTIAL</con:runType>
        <con:properties>
            <con:property>
                <con:name>wallet_prikey</con:name>
                <con:value>L5aciLYYMvFunSm6JvAz7qrkaFhYLgMSRoG9MPE8jjhViCsWxvoQ</con:value>
            </con:property>
            <con:property>
                <con:name>msg_id</con:name>
                <con:value>autotest</con:value>
            </con:property>
        </con:properties>
        <con:reportParameters/>
        <con:testCase id="4388fc92-fafd-43a0-89a3-076fc44579b1" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="生成多签地址" searchProperties="true">
            <con:settings>
                <con:setting id="82f9e8b9-c976-4128-bac1-a7607f0ad7eafileName">查询上报消息</con:setting>
                <con:setting id="4388fc92-fafd-43a0-89a3-076fc44579b1fileName">生成多签地址</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="groovy" name="Script-解析地址及公钥拼装成报文" id="41f77465-0947-4121-a94d-ac1d026318f6">
                <con:settings/>
                <con:config>
                    <script>//{
                        // "tx_id":"", //对应账户系统mysql里的主键tx_id
                        // "coin_type":"",
                        // "addr_info":[
                        // {
                        // "public_key":"",
                        // "address":""
                        // },
                        // {
                        // "public_key":"",
                        // "address":""
                        // }
                        // ],
                        // "required":2
                        //}
                        def msg_id = context.expand( '${#TestSuite#msg_id}' )
                        def tx_id = context.expand( '${#TestCase#tx_id}' )
                        def coin_type = context.expand( '${#TestCase#coin_type}' )
                        def required = context.expand( '${#TestCase#required}' ).toInteger()
                        def pubkey_address = context.expand( '${#TestCase#addr_info}' )

                        def list = pubkey_address.split(",")
                        def queryString = ""
                        for(def item : list){
                        //log.info item
                        def tmp = item.split(":")
                        def address = tmp[0]
                        def publicKey = tmp[1]
                        queryString = queryString + "{\"public_key\":\"" + publicKey + "\"," + "\"address\":\"" +
                        address + "\"},"
                        }

                        queryString = queryString[0..-2]
                        //log.info queryString
                        //return queryString

                        def msg = '''{
                        "msg_id": "'''+ "${msg_id}" + '''",
                        "data": {
                        "tx_id":"'''+ "${tx_id}" + '''",
                        "coin_type":"'''+ "${coin_type}" + '''",
                        "required":'''+ "${required}" + ''',
                        "addr_info":['''+ "${queryString}" + ''']
                        }
                        }'''

                        //def msg = '''{
                        // "tx_id":"'''+ "${tx_id}" + '''",
                        // "coin_type":"'''+ "${coin_type}" + '''",
                        // "required":'''+ "${required}" + ''',
                        // "addr_info":['''+ "${queryString}" + ''']
                        //}'''
                        log.info msg
                        return msg
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 预加密" id="2f7bc131-47be-4647-9049-8fe0363fc16b">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>239df1b6-ddc0-4a0b-99c4-29d920b29a89</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg</con:name>
                            <con:value>${Script-解析地址及公钥拼装成报文#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>data</con:name>
                            <con:value>
                                7b0a20202020226d73675f6964223a20226175746f74657374222c200a202020202264617461223a207b0a20202020202020202274785f6964223a22626262222c0a202020202020202022636f696e5f74797065223a22425443222c0a2020202020202020227265717569726564223a322c0a202020202020202022616464725f696e666f223a5b7b227075626c69635f6b6579223a22303235383739363130396463343732623730626531646535343736366134656361623938323632633836383764616531333234396234393233313564333464353637222c2261646472657373223a226d7752704c544774386d4b4c7a7135566e7336516b524a50527043476d325a6d6231227d2c7b227075626c69635f6b6579223a22303338363765653965313666343165306465343762633235656631613037336437623838323163393864373936313262656631396634306564616335386433663836222c2261646472657373223a226e316739596f61344250636a524a6b54596b32443242504d67467a74723946614e62227d5d0a097d0a7d
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>62c82e87721c90c35b2bd3151d526217a5df1c4f3460ba7be67ca3d8360c1d9f</con:value>
                        </con:property>
                        <con:property>
                            <con:name>signature</con:name>
                            <con:value>
                                01d71ed25ac87590bbbec5af806221a303669aa3816f487e37b48cb5d663c1cc9d80a1246b8ad4367f209a2e10b034d69940ff53e50b749dcbc2b3b8066d021d0d
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>data</con:entry>
                        <con:entry>hash</con:entry>
                        <con:entry>signature</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="post" id="44dabce9-5567-412f-a82b-5ac5a4bbae0f">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="f06782c5-e500-418d-9992-b2be5959435a"
                            name="post" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding xsi:nil="true"/>
                    <con:endpoint>https://${#Project#custodianServer}:${#Project#interfacePort}/v1/addresses/create
                    </con:endpoint>
                    <con:request>{
                        "data":"${Run TestCase - 预加密#data}",
                        "hash":"${Run TestCase - 预加密#hash}",
                        "signature":"${Run TestCase - 预加密#signature}"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="625a154a-1d83-4542-bf61-8d9ce2fd844f"
                                   name="Check for existence of [data]">
                        <con:configuration>
                            <path>$.data</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="e96a61d2-a564-48a1-8294-0b179bdd48e9"
                                   name="Check for existence of [hash]">
                        <con:configuration>
                            <path>$.hash</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="118dfc2b-f5ab-4c4c-922b-38af5e6e9636"
                                   name="Check for existence of [signature]">
                        <con:configuration>
                            <path>$.signature</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 十六进制解码" id="a3e6bb5e-f3de-49e0-b0a4-dd9af3a35c97">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>efa769bf-0104-4ecb-8d8f-97d838fcd371</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>hex</con:name>
                            <con:value>
                                ${post#ResponseAsXml#declare namespace ns1='https://${#Project#custodianServer}/v1/addresses/create';
                                //ns1:Response[1]/ns1:data[1]}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>string</con:name>
                            <con:value>{"msg_id":"autotest","code":1,"msg":"CreateMultiSignAddr: failed, err:
                                json.Unmarshal JsonRpcResponse:{\"result\":null,\"error\":{\"code\":-4,\"message\":\"The
                                wallet already contains the private key for this address or script\"},\"id\":\"rpc\"}\n
                                error:json: cannot unmarshal object into Go struct field JsonRpcResponse.error of type
                                int64","data":null}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>string</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="cd72431a-2ee1-434b-8388-4432df8623bb">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>string</con:sourceType>
                        <con:sourceStep>Run TestCase - 十六进制解码</con:sourceStep>
                        <con:targetType>return_msg</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>coin_type</con:name>
                    <con:value>BTC</con:value>
                </con:property>
                <con:property>
                    <con:name>tx_id</con:name>
                    <con:value>bbb</con:value>
                </con:property>
                <con:property>
                    <con:name>required</con:name>
                    <con:value>2</con:value>
                </con:property>
                <con:property>
                    <con:name>addr_info</con:name>
                    <con:value>
                        mwRpLTGt8mKLzq5Vns6QkRJPRpCGm2Zmb1:0258796109dc472b70be1de54766a4ecab98262c8687dae13249b492315d34d567,n1g9Yoa4BPcjRJkTYk2D2BPMgFztr9FaNb:03867ee9e16f41e0de47bc25ef1a073d7b8821c98d79612bef19f40edac58d3f86
                    </con:value>
                </con:property>
                <con:property>
                    <con:name>return_msg</con:name>
                    <con:value>{"msg_id":"autotest","code":1,"msg":"no message with a given msg id
                        autotest","data":null}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>1e21f5d5-a1d5-4963-9306-4c444f0a77ad</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>db14cd73-cafd-45ce-976e-5a58dc41d53e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>3e036d46-ec60-40de-b3e6-4181ee8764ab</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="29ade236-3a4b-4ff9-b703-aa7bf41d51c2" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="查询地址余额" searchProperties="true">
            <con:settings>
                <con:setting id="82f9e8b9-c976-4128-bac1-a7607f0ad7eafileName">查询上报消息</con:setting>
                <con:setting id="29ade236-3a4b-4ff9-b703-aa7bf41d51c2fileName">查询地址余额</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Groovy Script -拼装报文" id="6188e7bb-1933-4a9a-822c-5d1b7f4ac11d">
                <con:settings/>
                <con:config>
                    <script>def msg_id = context.expand( '${#TestSuite#msg_id}' )

                        def addresses = context.expand( '${#TestCase#addresses}' )
                        def coin_type = context.expand( '${#TestCase#coin_type}' )
                        def list = addresses.split(",")
                        def queryString = ""
                        for(def item : list){
                        //log.info item
                        queryString = queryString + "\"" + item + "\","
                        }

                        queryString = queryString[0..-2]
                        //{
                        // "coin_type":"ETH",
                        // "addresses":["",""]
                        //}
                        def msg = '''{
                        "msg_id": "'''+ "${msg_id}" + '''",
                        "data": {
                        "coin_type": "'''+ "${coin_type}" + '''",
                        "addresses": ['''+ "${queryString}" + ''']
                        }
                        }'''

                        //def msg = '''{
                        // "coin_type": "'''+ "${coin_type}" + '''",
                        // "addresses": ['''+ "${queryString}" + ''']
                        //}'''
                        log.info "查询余额requestBody:" + msg
                        return msg
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 预加密" id="5261ab94-032f-4077-816b-07eafcf9dc94">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>239df1b6-ddc0-4a0b-99c4-29d920b29a89</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg</con:name>
                            <con:value>${Groovy Script -拼装报文#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>data</con:name>
                            <con:value>
                                7b0a20202020226d73675f6964223a20226175746f74657374222c200a202020202264617461223a207b0a202020202020202022636f696e5f74797065223a2022425443222c0a202020202020202022616464726573736573223a205b22324d7a77723847567637434c4c397941424a6568596948514433324c79465547794843222c22324d775a5633526f777339344d58476f345a5a54396a68353676723267467456384a64225d0a097d0a7d
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>16f31a65defec19441eb47b7846952bdb1057dfc850dac33333027009fe3694b</con:value>
                        </con:property>
                        <con:property>
                            <con:name>signature</con:name>
                            <con:value>
                                01cd676736227f05f935a128d7ff9bf85370b2829e330c06824747a290bf66e462a084f3964e904d7046ade5bd3f19e55d25b994d3c62a8ccd927818023bd0aa43
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>data</con:entry>
                        <con:entry>hash</con:entry>
                        <con:entry>signature</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="post" id="4020a463-23eb-4b3c-9289-fcace674a4b5">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="f06782c5-e500-418d-9992-b2be5959435a"
                            name="post" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding xsi:nil="true"/>
                    <con:endpoint>https://${#Project#custodianServer}:${#Project#interfacePort}/v1/balances/queries
                    </con:endpoint>
                    <con:request>{
                        "data":"${Run TestCase - 预加密#data}",
                        "hash":"${Run TestCase - 预加密#hash}",
                        "signature":"${Run TestCase - 预加密#signature}"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="625a154a-1d83-4542-bf61-8d9ce2fd844f"
                                   name="Check for existence of [data]">
                        <con:configuration>
                            <path>$.data</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="e96a61d2-a564-48a1-8294-0b179bdd48e9"
                                   name="Check for existence of [hash]">
                        <con:configuration>
                            <path>$.hash</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="118dfc2b-f5ab-4c4c-922b-38af5e6e9636"
                                   name="Check for existence of [signature]">
                        <con:configuration>
                            <path>$.signature</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 十六进制解码" id="89fc5274-3415-4228-83fe-ab53914cbe5b">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>efa769bf-0104-4ecb-8d8f-97d838fcd371</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>hex</con:name>
                            <con:value>
                                ${post#ResponseAsXml#declare namespace ns1='https://${#Project#custodianServer}/v1/balances/queries';
                                //ns1:Response[1]/ns1:data[1]}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>string</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","data":[{"address":"2Mzwr8GVv7CLL9yABJehYiHQD32LyFUGyHC","amount":"0"},{"address":"2MwZV3Rows94MXGo4ZZT9jh56vr2gFtV8Jd","amount":"0.0001"}]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>string</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="d9b99d6d-c4ae-47a4-b1c5-e9ed77982cdf">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>string</con:sourceType>
                        <con:sourceStep>Run TestCase - 十六进制解码</con:sourceStep>
                        <con:targetType>return_msg</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>coin_type</con:name>
                    <con:value>BTC</con:value>
                </con:property>
                <con:property>
                    <con:name>addresses</con:name>
                    <con:value>2Mzwr8GVv7CLL9yABJehYiHQD32LyFUGyHC,2MwZV3Rows94MXGo4ZZT9jh56vr2gFtV8Jd</con:value>
                </con:property>
                <con:property>
                    <con:name>return_msg</con:name>
                    <con:value>
                        {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","data":[{"address":"2Mzwr8GVv7CLL9yABJehYiHQD32LyFUGyHC","amount":"0"},{"address":"2MwZV3Rows94MXGo4ZZT9jh56vr2gFtV8Jd","amount":"0.0001"}]}}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>1e21f5d5-a1d5-4963-9306-4c444f0a77ad</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>db14cd73-cafd-45ce-976e-5a58dc41d53e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>3e036d46-ec60-40de-b3e6-4181ee8764ab</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="82f9e8b9-c976-4128-bac1-a7607f0ad7ea" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="查询上报消息" searchProperties="true">
            <con:settings>
                <con:setting id="82f9e8b9-c976-4128-bac1-a7607f0ad7eafileName">查询上报消息</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Groovy Script -拼装报文" id="3e036d46-ec60-40de-b3e6-4181ee8764ab">
                <con:settings/>
                <con:config>
                    <script>def msg_id = context.expand( '${#TestSuite#msg_id}' )
                        def query_id = context.expand( '${#TestCase#msg_id}' )
                        //{
                        // "msg_id": "autotest",
                        // "data": {
                        // "msg_id": "20190121828947"
                        // }
                        //}
                        def msg = '''{
                        "msg_id": "'''+ "${msg_id}" + '''",
                        "data": {
                        "msg_id": "'''+ "${query_id}" + '''"
                        }
                        }'''

                        //def msg = '''{
                        // "msg_id": "'''+ "${msg_id}" + '''"
                        //}'''
                        log.info msg
                        return msg
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 预加密" id="1e21f5d5-a1d5-4963-9306-4c444f0a77ad">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>239df1b6-ddc0-4a0b-99c4-29d920b29a89</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg</con:name>
                            <con:value>${Groovy Script -拼装报文#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>data</con:name>
                            <con:value>
                                7b0a20202020226d73675f6964223a20226175746f74657374222c200a202020202264617461223a207b0a2020202020202020226d73675f6964223a202242544331353438323131393336220a097d0a7d
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>74f05e06e68ac1a8798a6cf0aab62f1b81ae82155885f0771e8e79a6f111d524</con:value>
                        </con:property>
                        <con:property>
                            <con:name>signature</con:name>
                            <con:value>
                                0163e58813594d436708d2c279a73c559943788219a264dad8dcb57f89ef3f2bc00466a4f62e5ec3cf290b155d9affa2672851ab8752514995d33a1a331e98bdc5
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>data</con:entry>
                        <con:entry>hash</con:entry>
                        <con:entry>signature</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="post" id="db14cd73-cafd-45ce-976e-5a58dc41d53e">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="f06782c5-e500-418d-9992-b2be5959435a"
                            name="post" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding xsi:nil="true"/>
                    <con:endpoint>https://${#Project#custodianServer}:${#Project#interfacePort}/v1/msg/report
                    </con:endpoint>
                    <con:request>{
                        "data":"${Run TestCase - 预加密#data}",
                        "hash":"${Run TestCase - 预加密#hash}",
                        "signature":"${Run TestCase - 预加密#signature}"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="625a154a-1d83-4542-bf61-8d9ce2fd844f"
                                   name="Check for existence of [data]">
                        <con:configuration>
                            <path>$.data</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="e96a61d2-a564-48a1-8294-0b179bdd48e9"
                                   name="Check for existence of [hash]">
                        <con:configuration>
                            <path>$.hash</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="118dfc2b-f5ab-4c4c-922b-38af5e6e9636"
                                   name="Check for existence of [signature]">
                        <con:configuration>
                            <path>$.signature</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 十六进制解码" id="041c90dd-9d52-4934-aedc-15539854b610">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>efa769bf-0104-4ecb-8d8f-97d838fcd371</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>hex</con:name>
                            <con:value>
                                ${post#ResponseAsXml#declare namespace ns1='https://${#Project#custodianServer}/v1/msg/report';
                                //ns1:Response[1]/ns1:data[1]}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>string</con:name>
                            <con:value>{"msg_id":"autotest","code":1,"msg":"no message with a given msg id
                                autotest","data":null}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>string</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="a50c294f-02f4-4842-a989-d391fab3896a">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>string</con:sourceType>
                        <con:sourceStep>Run TestCase - 十六进制解码</con:sourceStep>
                        <con:targetType>return_msg</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>msg_id</con:name>
                    <con:value>BTC1548211936</con:value>
                </con:property>
                <con:property>
                    <con:name>return_msg</con:name>
                    <con:value>
                        {"msg_id":"BTC1548211936","code":0,"msg":"","data":{"method":"reportdeposit","data":["{\"msg_id\":\"BTC1548211936\",\"data\":{\"txn_id\":\"\",\"coin_type\":\"BTC\",\"address\":\"2NCwuLbpLK8XfycWnPT8jUVsuSeYiyLGoTn\",\"is_succ\":true}}"]}}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>1e21f5d5-a1d5-4963-9306-4c444f0a77ad</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>db14cd73-cafd-45ce-976e-5a58dc41d53e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>3e036d46-ec60-40de-b3e6-4181ee8764ab</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="2962146d-7878-4bdf-bb83-98e9a98f8d2c" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="验证地址有效性" searchProperties="true">
            <con:settings>
                <con:setting id="82f9e8b9-c976-4128-bac1-a7607f0ad7eafileName">查询上报消息</con:setting>
                <con:setting id="2962146d-7878-4bdf-bb83-98e9a98f8d2cfileName">验证地址有效性</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Groovy Script -拼装报文" id="2cb23004-46ae-4c83-986e-d4f8f551b709">
                <con:settings/>
                <con:config>
                    <script>def address = context.expand( '${#TestCase#address}' )
                        def coin_type = context.expand( '${#TestCase#coin_type}' )
                        def msg_id = context.expand( '${#TestSuite#msg_id}' )
                        //{
                        // "coin_type":"ETH",
                        // "address":"0x000..."
                        //}
                        def msg = '''{
                        "msg_id": "'''+ "${msg_id}" + '''",
                        "data": {
                        "coin_type": "'''+ "${coin_type}" + '''",
                        "address": "'''+ "${address}" + '''"
                        }
                        }'''

                        //def msg = '''{
                        // "coin_type": "'''+ "${coin_type}" + '''",
                        // "address": "'''+ "${address}" + '''"
                        //}'''
                        log.info msg
                        return msg
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 预加密" id="00c6cdae-2c0c-4615-b709-2eccd10b607e">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>239df1b6-ddc0-4a0b-99c4-29d920b29a89</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg</con:name>
                            <con:value>${Groovy Script -拼装报文#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>data</con:name>
                            <con:value>
                                7b0a20202020226d73675f6964223a20226175746f74657374222c200a202020202264617461223a207b0a202020202020202022636f696e5f74797065223a2022425443222c0a20202020202020202261646472657373223a2022324e4377754c62704c4b3858667963576e5054386a5556737553655969794c476f546e220a097d0a7d
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>dcfce696523be5b68989e915981ca69500f86f8358d5fdd906b4adcdece17a9f</con:value>
                        </con:property>
                        <con:property>
                            <con:name>signature</con:name>
                            <con:value>
                                01f9b755f41d759ae91ca7a8d2df757316b83598b65bdde7c206014c8271468d5997bd67d5b2b1eeb5a3a141d5e066544128ca76c641a86e0e43de1c4235fdb113
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>data</con:entry>
                        <con:entry>hash</con:entry>
                        <con:entry>signature</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="post" id="d7ec929f-11e5-456e-bf59-f8041158cd56">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="f06782c5-e500-418d-9992-b2be5959435a"
                            name="post" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding xsi:nil="true"/>
                    <con:endpoint>https://${#Project#custodianServer}:${#Project#interfacePort}/v1/addresses/check
                    </con:endpoint>
                    <con:request>{
                        "data":"${Run TestCase - 预加密#data}",
                        "hash":"${Run TestCase - 预加密#hash}",
                        "signature":"${Run TestCase - 预加密#signature}"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="625a154a-1d83-4542-bf61-8d9ce2fd844f"
                                   name="Check for existence of [data]">
                        <con:configuration>
                            <path>$.data</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="e96a61d2-a564-48a1-8294-0b179bdd48e9"
                                   name="Check for existence of [hash]">
                        <con:configuration>
                            <path>$.hash</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="118dfc2b-f5ab-4c4c-922b-38af5e6e9636"
                                   name="Check for existence of [signature]">
                        <con:configuration>
                            <path>$.signature</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 十六进制解码" id="1db560b4-c759-46da-9da3-7e71e7076623">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>efa769bf-0104-4ecb-8d8f-97d838fcd371</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>hex</con:name>
                            <con:value>
                                ${post#ResponseAsXml#declare namespace ns1='https://${#Project#custodianServer}/v1/addresses/check';
                                //ns1:Response[1]/ns1:data[1]}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>string</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","is_valid":true}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>string</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="1e593c60-94b6-4389-9cbb-975066d461d6">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>string</con:sourceType>
                        <con:sourceStep>Run TestCase - 十六进制解码</con:sourceStep>
                        <con:targetType>return_msg</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>coin_type</con:name>
                    <con:value>BTC</con:value>
                </con:property>
                <con:property>
                    <con:name>address</con:name>
                    <con:value>2NCwuLbpLK8XfycWnPT8jUVsuSeYiyLGoTn</con:value>
                </con:property>
                <con:property>
                    <con:name>return_msg</con:name>
                    <con:value>{"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","is_valid":true}}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>1e21f5d5-a1d5-4963-9306-4c444f0a77ad</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>db14cd73-cafd-45ce-976e-5a58dc41d53e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>3e036d46-ec60-40de-b3e6-4181ee8764ab</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="966f34c8-c400-475b-913e-d6f3ca7d7ea7" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="紧急启动" searchProperties="true">
            <con:settings>
                <con:setting id="82f9e8b9-c976-4128-bac1-a7607f0ad7eafileName">查询上报消息</con:setting>
                <con:setting id="966f34c8-c400-475b-913e-d6f3ca7d7ea7fileName">紧急启动</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Groovy Script -拼装报文" id="440b50d2-4a83-4066-949f-36a1f5ec00ca">
                <con:settings/>
                <con:config>
                    <script>def level = context.expand( '${#TestCase#level}' )
                        def coins = context.expand( '${#TestCase#coins}' )
                        def msg_id = context.expand( '${#TestSuite#msg_id}' )
                        //{
                        // "level":1,
                        // "coins":["ETH","BTC"]
                        //}

                        def list = coins.split(",")
                        def queryString = ""
                        for(def item : list){
                        //log.info item
                        queryString = queryString + "\"" + item + "\","
                        }

                        queryString = queryString[0..-2]
                        def msg = '''{
                        "msg_id": "'''+ "${msg_id}" + '''",
                        "data": {
                        "level": '''+ "${level}" + ''',
                        "coins": ['''+ "${queryString}" + ''']
                        }
                        }'''
                        //def msg = '''{
                        // "level": '''+ "${level}" + ''',
                        // "coins": ['''+ "${queryString}" + ''']
                        //}'''
                        log.info "紧急启动" + msg
                        return msg
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 预加密" id="85d721c0-ced2-43e0-8a6a-adcd24bd2e58">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>239df1b6-ddc0-4a0b-99c4-29d920b29a89</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg</con:name>
                            <con:value>${Groovy Script -拼装报文#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>data</con:name>
                            <con:value>
                                7b0a20202020226d73675f6964223a20226175746f74657374222c200a202020202264617461223a207b0a2020202020202020226c6576656c223a20312c0a202020202020202022636f696e73223a205b22425443225d0a097d0a7d
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>9d23f7aa50fab1cbb16f431d0b65c49886e4654f98df9303ce91d983bda14813</con:value>
                        </con:property>
                        <con:property>
                            <con:name>signature</con:name>
                            <con:value>
                                01d3014129ed32344cd2650874d2ef798d0e639c4d19638f00b48941906b947244645cf6149bb7c1aa36cbe6fd705c8047a90fac84482257e3dbaa9f087cb2b470
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>data</con:entry>
                        <con:entry>hash</con:entry>
                        <con:entry>signature</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="post" id="2ed41e1b-4eb4-43cd-8bf8-cfee63d513a0">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="f06782c5-e500-418d-9992-b2be5959435a"
                            name="post" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding xsi:nil="true"/>
                    <con:endpoint>https://${#Project#custodianServer}:${#Project#interfacePort}/v1/emergency-start
                    </con:endpoint>
                    <con:request>{
                        "data":"${Run TestCase - 预加密#data}",
                        "hash":"${Run TestCase - 预加密#hash}",
                        "signature":"${Run TestCase - 预加密#signature}"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="625a154a-1d83-4542-bf61-8d9ce2fd844f"
                                   name="Check for existence of [data]">
                        <con:configuration>
                            <path>$.data</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="e96a61d2-a564-48a1-8294-0b179bdd48e9"
                                   name="Check for existence of [hash]">
                        <con:configuration>
                            <path>$.hash</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="118dfc2b-f5ab-4c4c-922b-38af5e6e9636"
                                   name="Check for existence of [signature]">
                        <con:configuration>
                            <path>$.signature</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 十六进制解码" id="11e4d16f-f9a7-4b72-b92d-c4a4455e6c68">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>efa769bf-0104-4ecb-8d8f-97d838fcd371</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>hex</con:name>
                            <con:value>
                                ${post#ResponseAsXml#declare namespace ns1='https://${#Project#custodianServer}/v1/emergency-start';
                                //ns1:Response[1]/ns1:data[1]}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>string</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":true,"is_stopped":false,"message":""}]}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>string</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言启动" id="c5acc987-bb0f-43c1-b221-5eb0ec43030b">
                <con:settings/>
                <con:config>
                    <script>def is_started = context.expand( '${Run TestCase - 十六进制解码#string#$.data[0].is_started}' )

                        assert is_started == "true"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="3e2d1ca4-e2e5-473c-b356-d1b48465a09b">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="false" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>string</con:sourceType>
                        <con:sourceStep>Run TestCase - 十六进制解码</con:sourceStep>
                        <con:targetType>return_msg</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>level</con:name>
                    <con:value>1</con:value>
                </con:property>
                <con:property>
                    <con:name>coins</con:name>
                    <con:value>BTC</con:value>
                </con:property>
                <con:property>
                    <con:name>return_msg</con:name>
                    <con:value>
                        {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":true,"is_stopped":false,"message":""}]}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>1e21f5d5-a1d5-4963-9306-4c444f0a77ad</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>db14cd73-cafd-45ce-976e-5a58dc41d53e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>3e036d46-ec60-40de-b3e6-4181ee8764ab</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="10a9ce98-a7f3-4649-b7cd-a96fc43f907d" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="紧急关闭" searchProperties="true">
            <con:settings>
                <con:setting id="82f9e8b9-c976-4128-bac1-a7607f0ad7eafileName">查询上报消息</con:setting>
                <con:setting id="966f34c8-c400-475b-913e-d6f3ca7d7ea7fileName">紧急启动</con:setting>
                <con:setting id="10a9ce98-a7f3-4649-b7cd-a96fc43f907dfileName">紧急关闭</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Groovy Script -拼装报文" id="76c2acfc-3b55-49fa-86b4-ad9c1bfb8137">
                <con:settings/>
                <con:config>
                    <script>def level = context.expand( '${#TestCase#level}' )
                        def coins = context.expand( '${#TestCase#coins}' )
                        def msg_id = context.expand( '${#TestSuite#msg_id}' )
                        //{
                        // "level":1,
                        // "coins":["ETH","BTC"]
                        //}

                        def list = coins.split(",")
                        def queryString = ""
                        for(def item : list){
                        //log.info item
                        queryString = queryString + "\"" + item + "\","
                        }

                        queryString = queryString[0..-2]
                        def msg = '''{
                        "msg_id": "'''+ "${msg_id}" + '''",
                        "data": {
                        "level": '''+ "${level}" + ''',
                        "coins": ['''+ "${queryString}" + ''']
                        }
                        }'''
                        //def msg = '''{
                        // "level": '''+ "${level}" + ''',
                        // "coins": ['''+ "${queryString}" + ''']
                        //}'''
                        log.info "紧急关闭" + msg
                        return msg
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 预加密" id="97cddeca-873f-444e-8bcd-c96743a8a48a">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>239df1b6-ddc0-4a0b-99c4-29d920b29a89</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg</con:name>
                            <con:value>${Groovy Script -拼装报文#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>data</con:name>
                            <con:value>
                                7b0a20202020226d73675f6964223a20226175746f74657374222c200a202020202264617461223a207b0a2020202020202020226c6576656c223a20312c0a202020202020202022636f696e73223a205b22425443225d0a097d0a7d
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>9d23f7aa50fab1cbb16f431d0b65c49886e4654f98df9303ce91d983bda14813</con:value>
                        </con:property>
                        <con:property>
                            <con:name>signature</con:name>
                            <con:value>
                                0104ca2527be859ef34b627602c6145652a88faa4b3509de11df8ba8fcb4eb9a3f28c4ba465daf70bc538f3c1c48ada412e4b09ebb8a0e3511505c74adf4c28702
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>data</con:entry>
                        <con:entry>hash</con:entry>
                        <con:entry>signature</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="post" id="860d4a3b-0667-41b5-b1d4-7cba89e53372">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="f06782c5-e500-418d-9992-b2be5959435a"
                            name="post" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding xsi:nil="true"/>
                    <con:endpoint>https://${#Project#custodianServer}:${#Project#interfacePort}/v1/emergency-stop
                    </con:endpoint>
                    <con:request>{
                        "data":"${Run TestCase - 预加密#data}",
                        "hash":"${Run TestCase - 预加密#hash}",
                        "signature":"${Run TestCase - 预加密#signature}"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="625a154a-1d83-4542-bf61-8d9ce2fd844f"
                                   name="Check for existence of [data]">
                        <con:configuration>
                            <path>$.data</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="e96a61d2-a564-48a1-8294-0b179bdd48e9"
                                   name="Check for existence of [hash]">
                        <con:configuration>
                            <path>$.hash</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="118dfc2b-f5ab-4c4c-922b-38af5e6e9636"
                                   name="Check for existence of [signature]">
                        <con:configuration>
                            <path>$.signature</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 十六进制解码" id="cdf579c4-0f3d-4fb4-b5d9-b6f10dccfa21">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>efa769bf-0104-4ecb-8d8f-97d838fcd371</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>hex</con:name>
                            <con:value>
                                ${post#ResponseAsXml#declare namespace ns1='https://${#Project#custodianServer}/v1/emergency-stop';
                                //ns1:Response[1]/ns1:data[1]}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>string</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":false,"is_stopped":true,"message":""}]}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>string</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言停止" id="32b67a5c-985a-446c-bdbb-410135b51791">
                <con:settings/>
                <con:config>
                    <script>def is_stopped = context.expand( '${Run TestCase - 十六进制解码#string#$.data[0].is_stopped}' )

                        assert is_stopped == "true"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="4d428ca9-2a33-40c6-9e49-e70f3a0aa66c">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="false" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>string</con:sourceType>
                        <con:sourceStep>Run TestCase - 十六进制解码</con:sourceStep>
                        <con:targetType>return_msg</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>level</con:name>
                    <con:value>1</con:value>
                </con:property>
                <con:property>
                    <con:name>coins</con:name>
                    <con:value>BTC</con:value>
                </con:property>
                <con:property>
                    <con:name>return_msg</con:name>
                    <con:value>
                        {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":false,"is_stopped":true,"message":""}]}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>1e21f5d5-a1d5-4963-9306-4c444f0a77ad</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>db14cd73-cafd-45ce-976e-5a58dc41d53e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>3e036d46-ec60-40de-b3e6-4181ee8764ab</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="44a1af8d-10bf-40cb-bb4c-4ba5fa23f236" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="查询请求消息" searchProperties="true">
            <con:settings>
                <con:setting id="82f9e8b9-c976-4128-bac1-a7607f0ad7eafileName">查询上报消息</con:setting>
                <con:setting id="44a1af8d-10bf-40cb-bb4c-4ba5fa23f236fileName">查询请求消息</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Groovy Script -拼装报文" id="cb9294b3-ed08-48bc-ad8c-e964e6049b09">
                <con:settings/>
                <con:config>
                    <script>def msg_id = context.expand( '${#TestSuite#msg_id}' )
                        def query_id = context.expand( '${#TestCase#msg_id}' )
                        //{
                        // "msg_id": "autotest",
                        // "data": {
                        // "msg_id": "20190121828947"
                        // }
                        //}
                        def msg = '''{
                        "msg_id": "'''+ "${msg_id}" + '''",
                        "data": {
                        "msg_id": "'''+ "${query_id}" + '''"
                        }
                        }'''

                        //def msg = '''{
                        // "msg_id": "'''+ "${msg_id}" + '''"
                        //}'''
                        log.info "查询请求消息" + msg
                        return msg
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 预加密" id="2084c8d1-ed37-40a4-b574-ce99135ec424">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>239df1b6-ddc0-4a0b-99c4-29d920b29a89</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg</con:name>
                            <con:value>${Groovy Script -拼装报文#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>data</con:name>
                            <con:value>
                                7b0a20202020226d73675f6964223a20226175746f74657374222c200a202020202264617461223a207b0a2020202020202020226d73675f6964223a20223230313930313231383238393437220a202020207d0a7d
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>11950159e7532809064849d9db45515d42f23b6bd66222f0989247bc9531df8e</con:value>
                        </con:property>
                        <con:property>
                            <con:name>signature</con:name>
                            <con:value>
                                0126a809be68b5fa83e7585a818c56f8b2668f44ab2a24227e91274c52ff194b213d68e9efbdb1e900fb30f54a9fa6a9196712873c5ab5a23aa784dda57c5b54e1
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>data</con:entry>
                        <con:entry>hash</con:entry>
                        <con:entry>signature</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="post" id="821a9445-bbc6-48de-9271-fdb4ef0b2016">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="f06782c5-e500-418d-9992-b2be5959435a"
                            name="post" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding xsi:nil="true"/>
                    <con:endpoint>https://${#Project#custodianServer}:${#Project#interfacePort}/v1/msg/request
                    </con:endpoint>
                    <con:request>{
                        "data":"${Run TestCase - 预加密#data}",
                        "hash":"${Run TestCase - 预加密#hash}",
                        "signature":"${Run TestCase - 预加密#signature}"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="625a154a-1d83-4542-bf61-8d9ce2fd844f"
                                   name="Check for existence of [data]">
                        <con:configuration>
                            <path>$.data</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="e96a61d2-a564-48a1-8294-0b179bdd48e9"
                                   name="Check for existence of [hash]">
                        <con:configuration>
                            <path>$.hash</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="118dfc2b-f5ab-4c4c-922b-38af5e6e9636"
                                   name="Check for existence of [signature]">
                        <con:configuration>
                            <path>$.signature</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 十六进制解码" id="b36a22d6-f9d5-41c4-814f-e1381749f104">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>efa769bf-0104-4ecb-8d8f-97d838fcd371</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>hex</con:name>
                            <con:value>
                                ${post#ResponseAsXml#declare namespace ns1='https://${#Project#custodianServer}/v1/msg/request';
                                //ns1:Response[1]/ns1:data[1]}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>string</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"method":"emergencystop","data":["{\"msg_id\":\"autotest\",\"data\":{\"tx_id\":\"aaa\",\"coin_type\":\"BTC\",\"addr_info\":[{\"public_key\":\"03c900d592c56ab696e3dbcbf7b78a3c077369469122ad2b5f2630216bc0c8060e\",\"address\":\"mpX7JRLrcWxw8GVWyQGYmmjtDaFhNQNc4t\"},{\"public_key\":\"021efb5e006363c8c85bd60b14ee083801173c3af52abc53e71d6749a788e77502\",\"address\":\"mwbPWjszvkniUVUyYeZndu5pG4o6GLZhcX\"}],\"required\":2}}","{\"msg_id\":\"autotest\",\"data\":{\"coin_type\":\"BTC\",\"addresses\":[\"2Mzwr8GVv7CLL9yABJehYiHQD32LyFUGyHC\",\"2MwZV3Rows94MXGo4ZZT9jh56vr2gFtV8Jd\"]}}","{\"msg_id\":\"autotest\",\"data\":{\"coin_type\":\"ETH\",\"address\":\"0xe97e0D9532975DB09CDF98846f4C6a88dB338d07\"}}","{\"msg_id\":\"autotest\",\"data\":{\"coin_type\":\"BTC\",\"address\":\"2NCwuLbpLK8XfycWnPT8jUVsuSeYiyLGoTn\"}}","{\"msg_id\":\"autotest\",\"data\":{\"level\":1,\"coins\":[\"BTC\"]}}","{\"msg_id\":\"autotest\",\"data\":{\"level\":1,\"coins\":[\"BTC\"]}}","{\"msg_id\":\"autotest\",\"data\":{\"level\":1,\"coins\":[\"BTC\"]}}"]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>string</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="b564a273-b2ce-4161-aae9-1bc5d0c7dcca">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>string</con:sourceType>
                        <con:sourceStep>Run TestCase - 十六进制解码</con:sourceStep>
                        <con:targetType>return_msg</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>msg_id</con:name>
                    <con:value>20190121828947</con:value>
                </con:property>
                <con:property>
                    <con:name>return_msg</con:name>
                    <con:value>
                        {"msg_id":"autotest","code":0,"msg":"","data":{"method":"emergencystop","data":["{\"msg_id\":\"autotest\",\"data\":{\"tx_id\":\"aaa\",\"coin_type\":\"BTC\",\"addr_info\":[{\"public_key\":\"03c900d592c56ab696e3dbcbf7b78a3c077369469122ad2b5f2630216bc0c8060e\",\"address\":\"mpX7JRLrcWxw8GVWyQGYmmjtDaFhNQNc4t\"},{\"public_key\":\"021efb5e006363c8c85bd60b14ee083801173c3af52abc53e71d6749a788e77502\",\"address\":\"mwbPWjszvkniUVUyYeZndu5pG4o6GLZhcX\"}],\"required\":2}}","{\"msg_id\":\"autotest\",\"data\":{\"coin_type\":\"BTC\",\"addresses\":[\"2Mzwr8GVv7CLL9yABJehYiHQD32LyFUGyHC\",\"2MwZV3Rows94MXGo4ZZT9jh56vr2gFtV8Jd\"]}}","{\"msg_id\":\"autotest\",\"data\":{\"coin_type\":\"ETH\",\"address\":\"0xe97e0D9532975DB09CDF98846f4C6a88dB338d07\"}}","{\"msg_id\":\"autotest\",\"data\":{\"coin_type\":\"BTC\",\"address\":\"2NCwuLbpLK8XfycWnPT8jUVsuSeYiyLGoTn\"}}","{\"msg_id\":\"autotest\",\"data\":{\"level\":1,\"coins\":[\"BTC\"]}}","{\"msg_id\":\"autotest\",\"data\":{\"level\":1,\"coins\":[\"BTC\"]}}","{\"msg_id\":\"autotest\",\"data\":{\"level\":1,\"coins\":[\"BTC\"]}}"]}}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>1e21f5d5-a1d5-4963-9306-4c444f0a77ad</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>db14cd73-cafd-45ce-976e-5a58dc41d53e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>3e036d46-ec60-40de-b3e6-4181ee8764ab</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="3139a692-141a-4986-a54e-7b09d9c174c8" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="查询交易确认次数" searchProperties="true">
            <con:settings>
                <con:setting id="82f9e8b9-c976-4128-bac1-a7607f0ad7eafileName">查询上报消息</con:setting>
                <con:setting id="3139a692-141a-4986-a54e-7b09d9c174c8fileName">查询交易确认次数</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Groovy Script -拼装报文" id="d82ebf1e-6496-4e63-9202-39d1cb037d34">
                <con:settings/>
                <con:config>
                    <script>def tx_hash = context.expand( '${#TestCase#tx_hash}' )
                        def coin_type = context.expand( '${#TestCase#coin_type}' )
                        def msg_id = context.expand( '${#TestSuite#msg_id}' )
                        //{
                        // "coin_type":"ETH",
                        // "tx_hash":"0x000..."
                        //}
                        def msg = '''{
                        "msg_id": "'''+ "${msg_id}" + '''",
                        "data": {
                        "coin_type": "'''+ "${coin_type}" + '''",
                        "tx_hash": "'''+ "${tx_hash}" + '''"
                        }
                        }'''

                        //def msg = '''{
                        // "coin_type": "'''+ "${coin_type}" + '''",
                        // "tx_hash": "'''+ "${tx_hash}" + '''"
                        //}'''
                        log.info msg
                        return msg
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 预加密" id="44c68639-0cb3-4fdb-8060-08d3ae0a927f">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>239df1b6-ddc0-4a0b-99c4-29d920b29a89</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg</con:name>
                            <con:value>${Groovy Script -拼装报文#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>data</con:name>
                            <con:value>
                                7b0a20202020226d73675f6964223a20226175746f74657374222c0a202020202264617461223a207b0a202020202020202022636f696e5f74797065223a2022425443222c0a20202020202020202274785f68617368223a202239623730386636643833613363396535313263623365303565343632303466663232663833343630623439323038636665346461316437373438366337353764220a097d0a7d
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>51e3df42dd8db27e9c4bffe43d968bdb7337e059e3eeefe87f40721f292d85ca</con:value>
                        </con:property>
                        <con:property>
                            <con:name>signature</con:name>
                            <con:value>
                                01c12e0bea533fea2230342624a1a2e9033b6f2893b2b36bb149e05bea48c834ae1138019f88e4696c9199af53200600e4519ae8aaaf8973fe0f3d52c7caf02f38
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>data</con:entry>
                        <con:entry>hash</con:entry>
                        <con:entry>signature</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="post" id="e4d8ae3e-779a-464b-b682-35e91b67bf36">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="f06782c5-e500-418d-9992-b2be5959435a"
                            name="post" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding xsi:nil="true"/>
                    <con:endpoint>
                        https://${#Project#custodianServer}:${#Project#interfacePort}/v1/transactions/queries
                    </con:endpoint>
                    <con:request>{
                        "data":"${Run TestCase - 预加密#data}",
                        "hash":"${Run TestCase - 预加密#hash}",
                        "signature":"${Run TestCase - 预加密#signature}"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="625a154a-1d83-4542-bf61-8d9ce2fd844f"
                                   name="Check for existence of [data]">
                        <con:configuration>
                            <path>$.data</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="e96a61d2-a564-48a1-8294-0b179bdd48e9"
                                   name="Check for existence of [hash]">
                        <con:configuration>
                            <path>$.hash</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="118dfc2b-f5ab-4c4c-922b-38af5e6e9636"
                                   name="Check for existence of [signature]">
                        <con:configuration>
                            <path>$.signature</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 十六进制解码" id="feede9f5-1ad5-431a-8af1-a705bca8a28f">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>efa769bf-0104-4ecb-8d8f-97d838fcd371</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>hex</con:name>
                            <con:value>
                                ${post#ResponseAsXml#declare namespace ns1='https://${#Project#custodianServer}/v1/transactions/queries';
                                //ns1:Response[1]/ns1:data[1]}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>string</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"confirmed_num":1,"is_confirmed":true}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>string</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="0e9784e4-e422-4bff-82af-9823680b1077">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>string</con:sourceType>
                        <con:sourceStep>Run TestCase - 十六进制解码</con:sourceStep>
                        <con:targetType>return_msg</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>coin_type</con:name>
                    <con:value>BTC</con:value>
                </con:property>
                <con:property>
                    <con:name>tx_hash</con:name>
                    <con:value>9b708f6d83a3c9e512cb3e05e46204ff22f83460b49208cfe4da1d77486c757d</con:value>
                </con:property>
                <con:property>
                    <con:name>return_msg</con:name>
                    <con:value>{"msg_id":"autotest","code":0,"msg":"","data":{"confirmed_num":1,"is_confirmed":true}}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>1e21f5d5-a1d5-4963-9306-4c444f0a77ad</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>db14cd73-cafd-45ce-976e-5a58dc41d53e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>3e036d46-ec60-40de-b3e6-4181ee8764ab</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="ab8906a1-3b94-4f94-9388-53060c708f33" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="对账信息查询(1-入金,2-出金)" searchProperties="true">
            <con:settings>
                <con:setting id="82f9e8b9-c976-4128-bac1-a7607f0ad7eafileName">查询上报消息</con:setting>
                <con:setting id="ab8906a1-3b94-4f94-9388-53060c708f33fileName">对账信息查询%281-入金%2C2-出金%29</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Groovy Script -拼装报文" id="9f6bc2f8-252d-44fa-82e6-c119e89461e6">
                <con:settings/>
                <con:config>
                    <script>def end_time = context.expand( '${#TestCase#end_time}' )
                        def begin_time = context.expand( '${#TestCase#begin_time}' )
                        def type = context.expand( '${#TestCase#type}' )
                        //{
                        // "type":1, // 1 is deposit, 2 is withdrawal
                        // "begin_time":1542177000, //UTC timestamp
                        // "end_time":1542177000 // UTC timestamp
                        //}
                        //def msg = '''{
                        // "msg_id": "autotest",
                        // "data": {
                        // "msg_id": "'''+ "${msg_id}" + '''"
                        // }
                        //}'''

                        def msg = '''{
                        "type": "'''+ "${type}" + '''",
                        "begin_time": "'''+ "${begin_time}" + '''",
                        "end_time": "'''+ "${end_time}" + '''"
                        }'''
                        log.info msg
                        return msg
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 预加密" id="7230b3b4-8796-463d-b74f-b6d231449400">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>239df1b6-ddc0-4a0b-99c4-29d920b29a89</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg</con:name>
                            <con:value>${Groovy Script -拼装报文#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>data</con:name>
                            <con:value>
                                7b0a20202020202020202274797065223a202231222c0a202020202020202022626567696e5f74696d65223a20313534383331303932342c0a202020202020202022656e645f74696d65223a20313534383333303932340a7d
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>75ce7e057339523b7d62680c954dd9a238cba032dc176e8c51a6d5a166373d21</con:value>
                        </con:property>
                        <con:property>
                            <con:name>signature</con:name>
                            <con:value>
                                018dc773ce93c45afef72e298ced2ce47fd574ea7fca07e8c300f2cf1d8ddca1a847451b19ddef0deb7cb3d800e10b10c6bbe7d4ebfcc829470502424a7420febd
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>data</con:entry>
                        <con:entry>hash</con:entry>
                        <con:entry>signature</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="post" id="8c1364c9-11f7-42ab-96af-2fe4f10b1737">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="f06782c5-e500-418d-9992-b2be5959435a"
                            name="post" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding xsi:nil="true"/>
                    <con:endpoint>
                        https://${#Project#custodianServer}:${#Project#interfacePort}/v1/reconciliation-details
                    </con:endpoint>
                    <con:request>{
                        "data":"${Run TestCase - 预加密#data}",
                        "hash":"${Run TestCase - 预加密#hash}",
                        "signature":"${Run TestCase - 预加密#signature}"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="625a154a-1d83-4542-bf61-8d9ce2fd844f"
                                   name="Check for existence of [data]">
                        <con:configuration>
                            <path>$.data</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="e96a61d2-a564-48a1-8294-0b179bdd48e9"
                                   name="Check for existence of [hash]">
                        <con:configuration>
                            <path>$.hash</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="118dfc2b-f5ab-4c4c-922b-38af5e6e9636"
                                   name="Check for existence of [signature]">
                        <con:configuration>
                            <path>$.signature</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 十六进制解码" id="0f61eae6-d498-4631-906d-df6c4714c461">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>efa769bf-0104-4ecb-8d8f-97d838fcd371</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>hex</con:name>
                            <con:value>
                                ${post#ResponseAsXml#declare namespace ns1='https://${#Project#custodianServer}/v1/reconciliation-details';
                                //ns1:Response[1]/ns1:data[1]}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>string</con:name>
                            <con:value>
                                {"msg_id":"","code":0,"msg":"","data":{"url":"https://127.0.0.1:40339/files/19700101_19700101.csv"}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>string</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="ca8e6e1c-ed51-4175-87a5-0fc7e5685c33">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>string</con:sourceType>
                        <con:sourceStep>Run TestCase - 十六进制解码</con:sourceStep>
                        <con:targetType>return_msg</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>type</con:name>
                    <con:value>1</con:value>
                </con:property>
                <con:property>
                    <con:name>begin_time</con:name>
                    <con:value>1548310924</con:value>
                </con:property>
                <con:property>
                    <con:name>end_time</con:name>
                    <con:value>1548330924</con:value>
                </con:property>
                <con:property>
                    <con:name>return_msg</con:name>
                    <con:value>
                        {"msg_id":"","code":0,"msg":"","data":{"url":"https://127.0.0.1:40339/files/19700101_19700101.csv"}}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>1e21f5d5-a1d5-4963-9306-4c444f0a77ad</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>db14cd73-cafd-45ce-976e-5a58dc41d53e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>3e036d46-ec60-40de-b3e6-4181ee8764ab</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="8f58c9c9-5f0e-475c-a9bf-79a5947d7628" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="申请出金" searchProperties="true">
            <con:settings>
                <con:setting id="82f9e8b9-c976-4128-bac1-a7607f0ad7eafileName">查询上报消息</con:setting>
                <con:setting id="4388fc92-fafd-43a0-89a3-076fc44579b1fileName">生成多签地址</con:setting>
                <con:setting id="8f58c9c9-5f0e-475c-a9bf-79a5947d7628fileName">申请出金</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Script-解析地址及数量拼装成报文" id="66a5e2d4-41e0-42c1-9e2c-4f45f406c3e8">
                <con:settings/>
                <con:config>
                    <script>//{
                        // "tx_id": "", //对应账户系统mysql里的主键tx_id
                        // "coin_type":"币种",
                        // "from_addr":"源地址",
                        // "data":[
                        // {
                        // "dest_addr":"目的地址",
                        // "send_amount":"发送数量"
                        // }
                        // ]
                        //}
                        def msg_id = context.expand( '${#TestSuite#msg_id}' )
                        def tx_id = context.expand( '${#TestCase#tx_id}' )
                        def coin_type = context.expand( '${#TestCase#coin_type}' )
                        def from_addr = context.expand( '${#TestCase#from_addr}' )
                        def data = context.expand( '${#TestCase#data}' )

                        def list = data.split(",")
                        def queryString = ""
                        for(def item : list){
                        //log.info item
                        def tmp = item.split(":")
                        def address = tmp[0]
                        def amount = tmp[1]
                        queryString = queryString + "{\"dest_addr\":\"" + address + "\"," + "\"send_amount\":\"" +
                        amount + "\"},"
                        }

                        queryString = queryString[0..-2]
                        //log.info queryString
                        //return queryString

                        def msg = '''{
                        "msg_id": "'''+ "${msg_id}" + '''",
                        "data": {
                        "tx_id":"'''+ "${tx_id}" + '''",
                        "coin_type":"'''+ "${coin_type}" + '''",
                        "from_addr":"'''+ "${from_addr}" + '''",
                        "data":[
                        '''+ "${queryString}" + '''
                        ]
                        }
                        }'''

                        //def msg = '''{
                        // "tx_id":"'''+ "${tx_id}" + '''",
                        // "coin_type":"'''+ "${coin_type}" + '''",
                        // "from_addr":"'''+ "${from_addr}" + '''",
                        // "data":[
                        // '''+ "${queryString}" + '''
                        // ]
                        //}'''
                        log.info "出金申请报文:" + msg
                        return msg
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 预加密" id="1d1ac397-7594-4de0-a182-794e1492fb55">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>239df1b6-ddc0-4a0b-99c4-29d920b29a89</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg</con:name>
                            <con:value>${Script-解析地址及数量拼装成报文#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>data</con:name>
                            <con:value>
                                7b0a20202020226d73675f6964223a20226175746f74657374222c200a202020202264617461223a207b0a092274785f6964223a22616161222c0a0922636f696e5f74797065223a22425443222c0a092266726f6d5f61646472223a22324d775a5633526f777339344d58476f345a5a54396a68353676723267467456384a64222c0a092264617461223a5b0a097b22646573745f61646472223a226d7058374a524c726357787738475657795147596d6d6a74446146684e514e633474222c2273656e645f616d6f756e74223a2231227d0a09095d0a097d0a7d
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>404cd050bbe79d01221edd81349ef8067457af48c05d606c255e17e4cb083399</con:value>
                        </con:property>
                        <con:property>
                            <con:name>signature</con:name>
                            <con:value>
                                01642016abf7a62cc2a741308b77c7be14d2444e06fe90ca1c1780b1915785f62bc4589f376077b4edcbd239784583b4fd634865818871f9c632c2833df0a5971a
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>data</con:entry>
                        <con:entry>hash</con:entry>
                        <con:entry>signature</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="post" id="d27428f2-b1e7-47eb-a074-f9939910825d">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="f06782c5-e500-418d-9992-b2be5959435a"
                            name="post" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding xsi:nil="true"/>
                    <con:endpoint>https://${#Project#custodianServer}:${#Project#interfacePort}/v1/transactions/apply
                    </con:endpoint>
                    <con:request>{
                        "data":"${Run TestCase - 预加密#data}",
                        "hash":"${Run TestCase - 预加密#hash}",
                        "signature":"${Run TestCase - 预加密#signature}"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="625a154a-1d83-4542-bf61-8d9ce2fd844f"
                                   name="Check for existence of [data]">
                        <con:configuration>
                            <path>$.data</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="e96a61d2-a564-48a1-8294-0b179bdd48e9"
                                   name="Check for existence of [hash]">
                        <con:configuration>
                            <path>$.hash</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="118dfc2b-f5ab-4c4c-922b-38af5e6e9636"
                                   name="Check for existence of [signature]">
                        <con:configuration>
                            <path>$.signature</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 十六进制解码" id="7076fed8-bd20-4dfe-983d-a16e1977a05a">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>efa769bf-0104-4ecb-8d8f-97d838fcd371</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>hex</con:name>
                            <con:value>
                                ${post#ResponseAsXml#declare namespace ns1='https://${#Project#custodianServer}/v1/transactions/apply';
                                //ns1:Response[1]/ns1:data[1]}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>string</con:name>
                            <con:value>{"msg_id":"autotest","code":1,"msg":"ApplyWithdrawal: failed, err: insufficient
                                utxo for withdrawl","data":null}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>string</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="fb85aae6-52fd-4c36-bb8e-41e93eaad6f2">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>string</con:sourceType>
                        <con:sourceStep>Run TestCase - 十六进制解码</con:sourceStep>
                        <con:targetType>return_msg</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>tx_id</con:name>
                    <con:value>aaa</con:value>
                </con:property>
                <con:property>
                    <con:name>coin_type</con:name>
                    <con:value>BTC</con:value>
                </con:property>
                <con:property>
                    <con:name>from_addr</con:name>
                    <con:value>2MwZV3Rows94MXGo4ZZT9jh56vr2gFtV8Jd</con:value>
                </con:property>
                <con:property>
                    <con:name>data</con:name>
                    <con:value>mpX7JRLrcWxw8GVWyQGYmmjtDaFhNQNc4t:1</con:value>
                </con:property>
                <con:property>
                    <con:name>return_msg</con:name>
                    <con:value>{"msg_id":"autotest","code":1,"msg":"ApplyWithdrawal: failed, err: insufficient utxo for
                        withdrawl","data":null}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>1e21f5d5-a1d5-4963-9306-4c444f0a77ad</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>db14cd73-cafd-45ce-976e-5a58dc41d53e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>3e036d46-ec60-40de-b3e6-4181ee8764ab</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="16d6c2b6-e5e0-4ed7-a524-44957d97422b" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="出金确认" searchProperties="true">
            <con:settings>
                <con:setting id="82f9e8b9-c976-4128-bac1-a7607f0ad7eafileName">查询上报消息</con:setting>
                <con:setting id="4388fc92-fafd-43a0-89a3-076fc44579b1fileName">生成多签地址</con:setting>
                <con:setting id="16d6c2b6-e5e0-4ed7-a524-44957d97422bfileName">出金确认</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Script-装成报文" id="017c566d-7095-4331-b2de-d98c22ff5106">
                <con:settings/>
                <con:config>
                    <script>//{
                        // "tx_id": "", //对应账户系统mysql里的主键tx_id
                        // "coin_type":"ETH",
                        // "tx_contents":[""] // 签好名的交易原文
                        //}
                        def msg_id = context.expand( '${#TestSuite#msg_id}' )
                        def tx_id = context.expand( '${#TestCase#tx_id}' )
                        def coin_type = context.expand( '${#TestCase#coin_type}' )
                        def tx_contents = context.expand( '${#TestCase#tx_contents}' )

                        def msg = '''{
                        "msg_id": "'''+ "${msg_id}" + '''",
                        "data": {
                        "tx_id":"'''+ "${tx_id}" + '''",
                        "coin_type":"'''+ "${coin_type}" + '''",
                        "tx_contents":["'''+ "${tx_contents}" + '''"]
                        }
                        }'''

                        //def msg = '''{
                        // "tx_id":"'''+ "${tx_id}" + '''",
                        // "coin_type":"'''+ "${coin_type}" + '''",
                        // "tx_contents":["'''+ "${tx_contents}" + '''"]
                        //}'''
                        log.info msg
                        return msg
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 预加密" id="79719069-94a4-4e21-be05-e37442028fab">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>239df1b6-ddc0-4a0b-99c4-29d920b29a89</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg</con:name>
                            <con:value>${Script-装成报文#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>data</con:name>
                            <con:value>
                                7b0a20202020226d73675f6964223a20226175746f74657374222c200a202020202264617461223a207b0a20202020202020202274785f6964223a226175746f746573745f4254435f77697468647265775f3133222c0a202020202020202022636f696e5f74797065223a22425443222c0a20202020202020202274785f636f6e74656e7473223a5bd0a097d0a7d
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>db88e913454fb0cacd76f9b9a346bfb56cdeccde01481d77138f6d4e84862901</con:value>
                        </con:property>
                        <con:property>
                            <con:name>signature</con:name>
                            <con:value>
                                013b7a4e4d481c7014789c2d44df5fcf512d67ead710903ca364006c55cb6c8f91565fadd0ecb30e70b80196174d3614ef25a6f465b10326eceb4d45133fbcdc33
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>data</con:entry>
                        <con:entry>hash</con:entry>
                        <con:entry>signature</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="post" id="ebc35579-e1e8-4a1c-bbed-350c05f151e1">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="f06782c5-e500-418d-9992-b2be5959435a"
                            name="post" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding xsi:nil="true"/>
                    <con:endpoint>
                        https://${#Project#custodianServer}:${#Project#interfacePort}/v1/transactions/confirm
                    </con:endpoint>
                    <con:request>{
                        "data":"${Run TestCase - 预加密#data}",
                        "hash":"${Run TestCase - 预加密#hash}",
                        "signature":"${Run TestCase - 预加密#signature}"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="625a154a-1d83-4542-bf61-8d9ce2fd844f"
                                   name="Check for existence of [data]">
                        <con:configuration>
                            <path>$.data</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="e96a61d2-a564-48a1-8294-0b179bdd48e9"
                                   name="Check for existence of [hash]">
                        <con:configuration>
                            <path>$.hash</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Existence Match" id="118dfc2b-f5ab-4c4c-922b-38af5e6e9636"
                                   name="Check for existence of [signature]">
                        <con:configuration>
                            <path>$.signature</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 十六进制解码" id="6a3d9485-e072-4413-b1a8-ccfd77ddca88">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>efa769bf-0104-4ecb-8d8f-97d838fcd371</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>hex</con:name>
                            <con:value>
                                ${post#ResponseAsXml#declare namespace ns1='https://${#Project#custodianServer}/v1/transactions/confirm';
                                //ns1:Response[1]/ns1:data[1]}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>string</con:name>
                            <con:value>{"msg_id":"autotest","code":0,"msg":"","data":null}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>string</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="493ef639-72e9-45bd-b6f3-470ac6b207ad">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>string</con:sourceType>
                        <con:sourceStep>Run TestCase - 十六进制解码</con:sourceStep>
                        <con:targetType>return_msg</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>tx_id</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>coin_type</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>tx_contents</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>return_msg</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>1e21f5d5-a1d5-4963-9306-4c444f0a77ad</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>db14cd73-cafd-45ce-976e-5a58dc41d53e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>3e036d46-ec60-40de-b3e6-4181ee8764ab</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="68c7a77c-be3d-4070-bb80-00b3823a3ff8" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="字符串转16进制" searchProperties="true" disabled="true">
            <con:settings>
                <con:setting id="68c7a77c-be3d-4070-bb80-00b3823a3ff8fileName">字符串转16进制</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Groovy Script" id="84967d8e-a180-4968-8a1c-faae67c6c65b">
                <con:settings/>
                <con:config>
                    <script>/**
                        * 字符串转换16进制
                        */
                        def 目标字符串 = context.expand( '${#TestCase#string}' )
                        String str = "";

                        for(int i = 0; i &lt; 目标字符串.size(); i++){
                        int ch = 目标字符串.charAt(i);
                        String s4 = Integer.toHexString(ch);
                        str = str + s4;
                        // log.info i
                        }
                        //log.info str
                        return str
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="a672b009-0dc2-4033-a25e-cbb2ec690654">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>result</con:sourceType>
                        <con:sourceStep>Groovy Script</con:sourceStep>
                        <con:targetType>hex</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>hex</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>string</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="efa769bf-0104-4ecb-8d8f-97d838fcd371" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="16进制转字符串" searchProperties="true" disabled="true">
            <con:settings>
                <con:setting id="efa769bf-0104-4ecb-8d8f-97d838fcd371fileName">16进制转字符串</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Groovy Script" id="17a3492f-ed82-4903-8003-d388ea466934">
                <con:settings/>
                <con:config>
                    <script>/**
                        * 16进制转换成为string类型字符串
                        * @param s
                        * @return
                        */
                        // def hex = context.expand( '${#TestCase#hex}' )
                        // log.info hex
                        def s = context.expand( '${#TestCase#hex}' )
                        if (s == null || s.equals("")) {
                        return null;
                        }
                        s = s.replace(" ", "");
                        byte[] baKeyword = new byte[s.size() / 2];
                        for (int i = 0; i &lt; baKeyword.length; i++) {
                        try {
                        baKeyword[i] = (byte) (0xff &amp; Integer.parseInt(s.substring(i * 2, i * 2 + 2), 16));
                        } catch (Exception e) {
                        e.printStackTrace();
                        }
                        }
                        try {
                        s = new String(baKeyword, "UTF-8");
                        new String();
                        } catch (Exception e1) {
                        e1.printStackTrace();
                        }
                        return s;
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="85a3c5cd-43c6-49ea-ab45-cc673e332c9a">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>result</con:sourceType>
                        <con:sourceStep>Groovy Script</con:sourceStep>
                        <con:targetType>string</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>hex</con:name>
                    <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                </con:property>
                <con:property>
                    <con:name>string</con:name>
                    <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="6c08ef12-7a60-4ae5-a4f2-53bf0245989a" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="加密" searchProperties="true" disabled="true">
            <con:settings>
                <con:setting id="efa769bf-0104-4ecb-8d8f-97d838fcd371fileName">16进制转字符串</con:setting>
                <con:setting id="6c08ef12-7a60-4ae5-a4f2-53bf0245989afileName">两次sha256</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase - 转换至16进制" id="8599bde7-cd6e-4d3c-b32a-768f1e4a1ff0">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>68c7a77c-be3d-4070-bb80-00b3823a3ff8</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>hex</con:name>
                            <con:value>
                                7b2020202020226d73675f6964223a20226175746f74657374222c2020202020202264617461223a207b202020202020202020226d73675f6964223a202232303139303132313832383934372220202020207d207d
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>string</con:name>
                            <con:value>${#TestCase#原始报文}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>hex</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 第一次sha256" id="d9df60a2-8956-456c-8279-c59eff30be4d">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>02a7cbb3-20dc-4365-a42a-6904e234595c</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value>1a31af162a51b9012495914c00035d5ff1e30d9ba807f92b1c9b1aa4550d3f45</con:value>
                        </con:property>
                        <con:property>
                            <con:name>string</con:name>
                            <con:value>${Run TestCase - 转换至16进制#hex}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 第二次sha256" id="e5c2717d-5d39-4048-a1ff-6ace271e97ec">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>02a7cbb3-20dc-4365-a42a-6904e234595c</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value>0d53c97cc3d90f4b293bd04bb7218c0fb23b4adfac7581500c669c51288c26e3</con:value>
                        </con:property>
                        <con:property>
                            <con:name>string</con:name>
                            <con:value>${Run TestCase - 第一次sha256#result}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="Groovy Script" id="a60fea57-8263-4179-b253-33ce8af17fa6">
                <con:settings/>
                <con:config>
                    <script>/**
                        * 16进制转换成为string类型字符串
                        * @param s
                        * @return
                        */
                        def s = context.expand( '${#TestCase#hex}' )
                        if (s == null || s.equals("")) {
                        return null;
                        }
                        s = s.replace(" ", "");
                        byte[] baKeyword = new byte[s.size() / 2];
                        for (int i = 0; i &lt; baKeyword.length; i++) {
                        try {
                        baKeyword[i] = (byte) (0xff &amp; Integer.parseInt(s.substring(i * 2, i * 2 + 2), 16));
                        } catch (Exception e) {
                        e.printStackTrace();
                        }
                        }
                        try {
                        s = new String(baKeyword, "UTF-8");
                        new String();
                        } catch (Exception e1) {
                        e1.printStackTrace();
                        }
                        return s;
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="19b54bce-92c2-4d95-a0d0-3348766aa331">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>result</con:sourceType>
                        <con:sourceStep>Groovy Script</con:sourceStep>
                        <con:targetType>原始报文</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>hex</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>原始报文</con:name>
                    <con:value>{ "msg_id": "autotest", "data": { "msg_id": "20190121828947" } }</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>e5c2717d-5d39-4048-a1ff-6ace271e97ec</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="02a7cbb3-20dc-4365-a42a-6904e234595c" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="sha256方法" searchProperties="true" disabled="true">
            <con:settings>
                <con:setting id="efa769bf-0104-4ecb-8d8f-97d838fcd371fileName">16进制转字符串</con:setting>
                <con:setting id="02a7cbb3-20dc-4365-a42a-6904e234595cfileName">sha256方法</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Groovy Script" id="297fd102-7443-4e75-8fb7-35ea6f827ddc">
                <con:settings/>
                <con:config>
                    <script>import java.security.MessageDigest;

                        def info = context.expand( '${#TestCase#string}' )
                        MessageDigest messageDigest;
                        messageDigest = MessageDigest.getInstance("SHA-256");
                        byte[] hash = messageDigest.digest(info.getBytes("UTF-8"));

                        StringBuffer stringBuffer = new StringBuffer();
                        String temp = "";
                        for (int i = 0; i &lt; hash.length; i++) {
                        temp = Integer.toHexString(hash[i] &amp; 0xFF);
                        if (temp.length() == 1) {
                        //1得到一位的进行补0操作
                        stringBuffer.append("0");
                        }
                        stringBuffer.append(temp);
                        }
                        return stringBuffer.toString();
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="a231a8cd-f2a2-4b0a-b41f-8fd2955e5965">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>result</con:sourceType>
                        <con:sourceStep>Groovy Script</con:sourceStep>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>string</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>ede7dc91-817b-4808-b8f0-3cd0c0d55637</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="239df1b6-ddc0-4a0b-99c4-29d920b29a89" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="消息预加密" searchProperties="true">
            <con:settings>
                <con:setting id="efa769bf-0104-4ecb-8d8f-97d838fcd371fileName">16进制转字符串</con:setting>
                <con:setting id="02a7cbb3-20dc-4365-a42a-6904e234595cfileName">sha256方法</con:setting>
                <con:setting id="239df1b6-ddc0-4a0b-99c4-29d920b29a89fileName">ECDSA签名</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Groovy Script1" id="9848cffc-c5b8-4478-9a67-d27db50e4563" disabled="true">
                <con:settings/>
                <con:config>
                    <script>import com.github.ontio.common.Helper;
                        import com.github.ontio.crypto.Digest;
                        import com.github.ontio.core.DataSignature;
                        import com.github.ontio.crypto.SignatureScheme;
                        import com.github.ontio.account.Account;
                        import java.util.Base64;

                        String wallet_prikey = context.expand( '${#TestSuite#wallet_prikey}' )
                        log.info wallet_prikey

                        //String wallet_prikey_64 = new
                        String(Base64.getDecoder().decode(wallet_prikey.getBytes("utf-8")));
                        //log.info wallet_prikey_64
                        String json = "aa";
                        Account account = new Account(Account.getPrivateKeyFromWIF(wallet_prikey),
                        SignatureScheme.SHA256WITHECDSA);
                        byte[] data = json.getBytes();
                        String raw = Helper.toHexString(data);
                        byte[] hashData = Digest.hash256(data);
                        String hash = Helper.toHexString(hashData);
                        DataSignature sign = new DataSignature(SignatureScheme.SHA256WITHECDSA, account, hashData);
                        byte[] signatureData = sign.signature();
                        String signature = Helper.toHexString(signatureData);
                        log.info("hash {}, raw {},\n sig {}\n", hash, raw, signature);
                        //log.info raw
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="Groovy Script" id="378790d8-03c1-48b9-83c0-90f6c74f7ae4" disabled="true">
                <con:settings/>
                <con:config>
                    <script>import java.security.KeyFactory;
                        import java.security.KeyPair;
                        import java.security.KeyPairGenerator;
                        import java.security.PrivateKey;
                        import java.security.PublicKey;
                        import java.security.Signature;
                        import java.security.interfaces.ECPrivateKey;
                        import java.security.interfaces.ECPublicKey;
                        import java.security.spec.PKCS8EncodedKeySpec;
                        import java.security.spec.X509EncodedKeySpec;
                        import com.sun.org.apache.xerces.internal.impl.dv.util.HexBin;

                        def src = context.expand( '${#TestCase#msg}' )

                        //1.初始化密钥
                        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("EC");
                        keyPairGenerator.initialize(256);
                        KeyPair keyPair = keyPairGenerator.generateKeyPair();
                        ECPublicKey ecPublicKey = (ECPublicKey) keyPair.getPublic();
                        ECPrivateKey ecPrivateKey = (ECPrivateKey) keyPair.getPrivate();

                        //2.执行签名
                        PKCS8EncodedKeySpec pkcs8EncodedKeySpec = new PKCS8EncodedKeySpec(ecPrivateKey.getEncoded());

                        KeyFactory keyFactory = KeyFactory.getInstance("EC");
                        PrivateKey privateKey = keyFactory.generatePrivate(pkcs8EncodedKeySpec);
                        Signature signature = Signature.getInstance("SHA256withECDSA");
                        signature.initSign(privateKey);
                        signature.update(src.getBytes());
                        byte[] res = signature.sign();
                        log.info("签名：" + HexBin.encode(res));

                        //3.验证签名
                        //X509EncodedKeySpec x509EncodedKeySpec = new X509EncodedKeySpec(ecPublicKey.getEncoded());
                        //keyFactory = KeyFactory.getInstance("EC");
                        //PublicKey publicKey = keyFactory.generatePublic(x509EncodedKeySpec);
                        //signature = Signature.getInstance("SHA256withECDSA");
                        //signature.initVerify(publicKey);
                        //signature.update(src.getBytes());
                        //boolean bool = signature.verify(res);
                        //log.info("验证：" + bool);
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="1" id="5208aa30-1939-44c6-b6f1-6ed8a116986b" disabled="true">
                <con:settings/>
                <con:config>
                    <script>def msg = context.expand( '${#TestCase#msg}' )

                        log.info "FROM 1 "+msg
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="发送" id="158f22af-1aee-4924-9cf5-0b5256bb06db">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="6b789ef6-9459-45fe-a3cb-689ceaef2f10" name="发送"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://42.159.154.248:10330/cypher</con:endpoint>
                    <con:request/>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters>
                        <con:parameter>
                            <con:name>msg</con:name>
                            <con:value>${#TestCase#msg}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                        <con:parameter>
                            <con:name>prikey</con:name>
                            <con:value>${#TestSuite#wallet_prikey}</con:value>
                            <con:style>QUERY</con:style>
                        </con:parameter>
                    </con:parameters>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="eb1b0c84-6fa5-4fea-ad0a-197561fa2251">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>data</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>发送</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.154.248/cypher';
                            //ns1:Response[1]/ns1:data[1]
                        </con:sourcePath>
                        <con:targetType>data</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>hash</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>发送</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.154.248/cypher';
                            //ns1:Response[1]/ns1:hash[1]
                        </con:sourcePath>
                        <con:targetType>hash</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>signature</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>发送</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.154.248/cypher';
                            //ns1:Response[1]/ns1:signature[1]
                        </con:sourcePath>
                        <con:targetType>signature</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="Copy of Groovy Script" id="4d89d02b-6fe9-4efe-b6f6-b03c625a9ab3"
                          disabled="true">
                <con:settings/>
                <con:config>
                    <script>import java.security.KeyFactory;
                        import java.security.KeyPair;
                        import java.security.KeyPairGenerator;
                        import java.security.PrivateKey;
                        import java.security.PublicKey;
                        import java.security.Signature;
                        import java.security.interfaces.ECPrivateKey;
                        import java.security.interfaces.ECPublicKey;
                        import java.security.spec.PKCS8EncodedKeySpec;
                        import java.security.spec.X509EncodedKeySpec;
                        import com.sun.org.apache.xerces.internal.impl.dv.util.HexBin;

                        def src = context.expand( '${#TestCase#msg}' )

                        //1.初始化密钥
                        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("EC");
                        keyPairGenerator.initialize(256);
                        KeyPair keyPair = keyPairGenerator.generateKeyPair();
                        ECPublicKey ecPublicKey = (ECPublicKey) keyPair.getPublic();
                        ECPrivateKey ecPrivateKey = (ECPrivateKey) keyPair.getPrivate();

                        //2.执行签名
                        PKCS8EncodedKeySpec pkcs8EncodedKeySpec = new PKCS8EncodedKeySpec(ecPrivateKey.getEncoded());

                        KeyFactory keyFactory = KeyFactory.getInstance("EC");
                        PrivateKey privateKey = keyFactory.generatePrivate(pkcs8EncodedKeySpec);
                        Signature signature = Signature.getInstance("SHA256withECDSA");
                        signature.initSign(privateKey);
                        signature.update(src.getBytes());
                        byte[] res = signature.sign();
                        log.info("签名：" + HexBin.encode(res));

                        //3.验证签名
                        X509EncodedKeySpec x509EncodedKeySpec = new X509EncodedKeySpec(ecPublicKey.getEncoded());
                        keyFactory = KeyFactory.getInstance("EC");
                        PublicKey publicKey = keyFactory.generatePublic(x509EncodedKeySpec);
                        signature = Signature.getInstance("SHA256withECDSA");
                        signature.initVerify(publicKey);
                        signature.update(src.getBytes());
                        boolean bool = signature.verify(res);
                        log.info("验证：" + bool);
                    </script>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>msg</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>data</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>hash</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>signature</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>ede7dc91-817b-4808-b8f0-3cd0c0d55637</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>9848cffc-c5b8-4478-9a67-d27db50e4563</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>158f22af-1aee-4924-9cf5-0b5256bb06db</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="1406044e-2dc1-4078-b6b8-6a911d92e167" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="消息鉴权" searchProperties="true" disabled="true">
            <con:settings>
                <con:setting id="efa769bf-0104-4ecb-8d8f-97d838fcd371fileName">16进制转字符串</con:setting>
                <con:setting id="02a7cbb3-20dc-4365-a42a-6904e234595cfileName">sha256方法</con:setting>
                <con:setting id="239df1b6-ddc0-4a0b-99c4-29d920b29a89fileName">ECDSA签名</con:setting>
                <con:setting id="1406044e-2dc1-4078-b6b8-6a911d92e167fileName">消息鉴权</con:setting>
            </con:settings>
            <con:properties>
                <con:property>
                    <con:name>msg</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>data</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>hash</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>signature</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>ede7dc91-817b-4808-b8f0-3cd0c0d55637</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>9848cffc-c5b8-4478-9a67-d27db50e4563</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>158f22af-1aee-4924-9cf5-0b5256bb06db</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
    </con:testSuite>
    <con:testSuite id="b9a3bd8c-4a00-4056-9e3f-4ac703e7956b" name="BTC-RPC接口列表" disabled="true">
        <con:settings>
            <con:setting id="1cb2941d-97da-4caf-aa15-b656d5077a64fileName">BTC-RPC接口列表</con:setting>
            <con:setting id="b9a3bd8c-4a00-4056-9e3f-4ac703e7956bfileName">BTC-RPC接口列表</con:setting>
        </con:settings>
        <con:savedRecentRuns>1</con:savedRecentRuns>
        <con:runType>SEQUENTIAL</con:runType>
        <con:properties>
            <con:property>
                <con:name>index</con:name>
                <con:value>0</con:value>
            </con:property>
        </con:properties>
        <con:reportParameters/>
        <con:testCase id="621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="getnewaddress" searchProperties="true">
            <con:settings>
                <con:setting id="864fc531-229e-404a-8e30-bce6d7bbd366fileName">getaccount</con:setting>
                <con:setting id="77a36727-07b8-4b15-8351-c980f65ac644fileName">getnewaddress</con:setting>
                <con:setting id="621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00fileName">getnewaddress</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="httprequest" name="查询" id="2dbaa351-44eb-404a-9657-ae9d52227f34">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "getnewaddress",
                        "params": [
                        "${#TestCase#account}","legacy"
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="0c230fff-c072-4395-b522-402cc5637c13">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>address</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>address</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>account</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>address</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="7718e35c-12db-4bf4-afce-0eb1d96f0000" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="getaccountByAddress" searchProperties="true">
            <con:settings>
                <con:setting id="864fc531-229e-404a-8e30-bce6d7bbd366fileName">getaccount</con:setting>
                <con:setting id="7718e35c-12db-4bf4-afce-0eb1d96f0000fileName">getaccountByAddress</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="httprequest" name="查询" id="25196f48-5168-4841-b168-3734936af29b">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                        <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{ "jsonrpc": "2.0", "method": "getaccount", "params": [ "${#TestCase#address}" ], "id":
                        "yctest" }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="f8fee7bd-a8bc-4ebd-8c2f-12eaecd6e7c4">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>account</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>account</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>address</con:name>
                    <con:value>2MyXNXqnubkaaTuUKvLcfuDKwcfPsvnJYYh</con:value>
                </con:property>
                <con:property>
                    <con:name>account</con:name>
                    <con:value>yctest</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="9a65b211-28ca-423d-9dea-dcc667fbf2db" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="getbalanceByAddress" searchProperties="true">
            <con:settings>
                <con:setting id="a63fcdb3-86ed-4517-a6bd-72c955e2d79ffileName">getbalance</con:setting>
                <con:setting id="9a65b211-28ca-423d-9dea-dcc667fbf2dbfileName">getbalanceByAddress</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="httprequest" name="查询account" id="018f1398-6313-4f88-b8f8-43dc44041ff3">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16"
                            name="查询account" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "getaccount",
                        "params": [
                        "${#TestCase#address}"
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="查询" id="979a0723-f1b7-48de-a8dd-ac182fa0bbfe">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "getbalance",
                        "params": [
                        "${查询account#ResponseAsXml#declare namespace ns1='http://42.159.153.121/'; //ns1:Response[1]/ns1:result[1]}"
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="d365082e-df49-4fc1-9e60-0c863ee14b2c"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="498ca501-9f3b-40bf-8b98-520598cdd648">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>balance</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>balance</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>address</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>balance</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="b158eafc-184d-4083-8abb-bfbd0e4bb26a" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="listunspent" searchProperties="true">
            <con:settings>
                <con:setting id="864fc531-229e-404a-8e30-bce6d7bbd366fileName">getaccount</con:setting>
                <con:setting id="e15176ad-82aa-427a-a593-339ec7e5604cfileName">listunspent</con:setting>
                <con:setting id="b158eafc-184d-4083-8abb-bfbd0e4bb26afileName">listunspent</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="httprequest" name="查询" id="b9aba6ea-8704-40f3-84f9-317c262a95c6">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "listunspent",
                        "params": [
                        0,9999999,[
                        "${#TestCase#address}"
                        ]
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="查找UTXO" id="43ad7ec5-03e1-4f33-8c32-f8b4d47b9e2b">
                <con:settings/>
                <con:config>
                    <script>import groovy.json.JsonSlurper

                        def txid = context.expand( '${#TestCase#txid}' )

                        def response = context.expand( '${查询#Response}' )

                        def slurper = new JsonSlurper()
                        def json = slurper.parseText(response)
                        def result = json.result

                        for(int i = 0 ; i &lt; result.size; i++){
                        if(txid == result[i].txid){
                        testRunner.testCase.setPropertyValue("amount",result[i].amount.toString());
                        testRunner.testCase.setPropertyValue("scriptPubkey",result[i].scriptPubKey);
                        testRunner.testCase.setPropertyValue("voutindex",result[i].vout.toString());
                        // testRunner.testCase.setPropertyValue("vouttxid",i.toString());
                        }
                        // log.info vout[i].scriptPubKey
                        }
                        //vout.each{
                        // if(it.addresses != null){
                        // log.info "aa"
                        // }
                        //// if(){
                        ////
                        //// }
                        //}


                        //def result = context.expand(
                        '${JDBC Request-查询出金上报状态#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/SENDMSGLOG.MSGCONTENT[1]}'
                        )
                        //
                        //def slurper = new JsonSlurper()
                        //def json = slurper.parseText(result)
                        //def 待确认批次号 = context.expand( '${#TestSuite#待确认批次号}' )
                        //
                        //assert json.code==0
                        //assert json.status.equals('0')
                        //assert json.batchId.equals(待确认批次号)
                        //assert json.data[0].result.equals('0')
                        //log.info json.data[0].result
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="91c11583-1635-4bc0-adff-ffbdc2c229da"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>amount</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:e[1]/ns1:amount[1]
                        </con:sourcePath>
                        <con:targetType>amount</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>redeemScript</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:e[1]/ns1:redeemScript[1]
                        </con:sourcePath>
                        <con:targetType>redeemScript</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>scriptPubKey</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:e[1]/ns1:scriptPubKey[1]
                        </con:sourcePath>
                        <con:targetType>scriptPubKey</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>txid</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:e[1]/ns1:txid[1]
                        </con:sourcePath>
                        <con:targetType>txid</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>address</con:name>
                    <con:value>2N42hvrYCqdXNNy5dhefEKvxZC3aR245ARn</con:value>
                </con:property>
                <con:property>
                    <con:name>amount</con:name>
                    <con:value>0.16594311</con:value>
                </con:property>
                <con:property>
                    <con:name>redeemScript</con:name>
                    <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                </con:property>
                <con:property>
                    <con:name>scriptPubkey</con:name>
                    <con:value>76a9148580bc89240bf130a841491c27b651978f8c9d7688ac</con:value>
                </con:property>
                <con:property>
                    <con:name>txid</con:name>
                    <con:value>9a848ee343898615cc78a943a832965b85567bd6f15adfde85c1dc0fb4564d97</con:value>
                </con:property>
                <con:property>
                    <con:name>voutindex</con:name>
                    <con:value>1</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="f21636bb-2b38-4b28-8a82-3a4b7f19a251" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="listunspent3" searchProperties="true">
            <con:settings>
                <con:setting id="864fc531-229e-404a-8e30-bce6d7bbd366fileName">getaccount</con:setting>
                <con:setting id="e15176ad-82aa-427a-a593-339ec7e5604cfileName">listunspent</con:setting>
                <con:setting id="65251eed-1322-471c-b7d6-5b3c4c167114fileName">listunspent3</con:setting>
                <con:setting id="f21636bb-2b38-4b28-8a82-3a4b7f19a251fileName">listunspent3</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="httprequest" name="查询" id="589b5418-e68e-4ff0-a9f1-8e43974b5bdf">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "listunspent",
                        "params": [
                        0,9999999,[
                        "${#TestCase#address}"
                        ]
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="91af9cbc-b26a-443f-893a-0a08c46d1444">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>Response</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>address</con:name>
                    <con:value>2NCf6zAx7xm9PqNXtrxnLhgqyiicwpxUsZL</con:value>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="16ee5d7d-bf32-44d8-be12-573b968b9ec7" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="getbestblockhash" searchProperties="true">
            <con:settings>
                <con:setting id="864fc531-229e-404a-8e30-bce6d7bbd366fileName">getaccount</con:setting>
                <con:setting id="ba2b16cd-f704-4fec-8f1c-52b9ea6fc1b0fileName">getbestblockhash</con:setting>
                <con:setting id="16ee5d7d-bf32-44d8-be12-573b968b9ec7fileName">getbestblockhash</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="httprequest" name="查询" id="94acb4da-92cc-44cc-bc3b-ad287d1a83d3">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "getbestblockhash",
                        "params": [
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="01d392b4-7c04-4b4e-938a-1e32935dc839">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>result</con:name>
                    <con:value>000000000000002959cc944b063b6f5178f6d20a032b2f47efc82cbec1ea33d7</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="d30220ec-8cbe-499d-bb6f-180b05e52d62" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="dumpprivkey" searchProperties="true">
            <con:settings>
                <con:setting id="f77da271-709d-4706-98f0-53d74796226efileName">查询地址pubkey</con:setting>
                <con:setting id="514d515f-3813-4dfc-b1d6-eb253fb33811fileName">dumpprivkey</con:setting>
                <con:setting id="d30220ec-8cbe-499d-bb6f-180b05e52d62fileName">dumpprivkey</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="httprequest" name="查询账户信息" id="2e55df3c-c333-428d-a0e0-6db6f7ffe05a">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="9d608617-62e8-4454-8e07-0d56c6a6d535"
                            name="查询账户信息" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://42.159.153.121:20337</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "dumpprivkey",
                        "params": [
                        "${#TestCase#地址}"
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="8fa0846b-c803-4277-9863-a4d198fdb41a"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="1988ec44-e4fa-4fef-9054-1a0207eada03">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>key</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询账户信息</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>私钥</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>地址</con:name>
                    <con:value>miuiakWVBLHe4CeFaMD1dTt2dmEPKre6p2</con:value>
                </con:property>
                <con:property>
                    <con:name>私钥</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>30ba691e-2d37-4558-81a7-5880eac65ac9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="ff4c6551-ce48-4256-8642-daadc4c1d347" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="walletpassphrase" searchProperties="true">
            <con:settings>
                <con:setting id="864fc531-229e-404a-8e30-bce6d7bbd366fileName">getaccount</con:setting>
                <con:setting id="77a36727-07b8-4b15-8351-c980f65ac644fileName">getnewaddress</con:setting>
                <con:setting id="a6da8135-2f63-4a92-b2fe-5dad582e2f10fileName">walletpassphrase</con:setting>
                <con:setting id="ff4c6551-ce48-4256-8642-daadc4c1d347fileName">walletpassphrase</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="httprequest" name="查询" id="ffddd2f1-c888-47ff-a589-5415a9ffbb3d">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "walletpassphrase",
                        "params": [
                        "${#TestCase#passphrase}",60
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>passphrase</con:name>
                    <con:value>pwd</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="517e01b2-884e-477f-9554-cff7235d6a40" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="CreateRawTransaction" searchProperties="true">
            <con:settings>
                <con:setting id="3fdef9f0-6478-421f-a498-68b56359587ffileName">CreateRawTransaction</con:setting>
                <con:setting id="517e01b2-884e-477f-9554-cff7235d6a40fileName">CreateRawTransaction</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="创建交易" id="b18af85b-c397-4188-b5d6-5f6a9cbbc51c">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16"
                            name="创建交易" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "id": "yctest",
                        "method": "createrawtransaction",
                        "params": [
                        [
                        {
                        "txid": "${#TestCase#txid}",
                        "vout": ${#TestCase#vout},
                        "redeemScript": "${#TestCase#redeemScript}",
                        "scriptPubKey": "${#TestCase#scriptPubKey}"
                        }
                        ],
                        {
                        "${#TestCase#目的地址}": "${#TestCase#金额}",
                        "${#TestCase#源地址}": "${#TestCase#找零余额}"
                        }
                        ]
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="084de788-20dd-4e06-8392-89b479228b95"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="a16ac9ac-de41-4a60-a61b-13cd4b76f8e5">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>创建交易</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>txid</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>vout</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>redeemScript</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>scriptPubKey</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>源地址</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>找零余额</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="32e349cf-f050-40ed-a810-dff7f2d12a41" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="SignRawTransaction" searchProperties="true">
            <con:settings>
                <con:setting id="3fdef9f0-6478-421f-a498-68b56359587ffileName">CreateRawTransaction</con:setting>
                <con:setting id="9cfbc3b9-d66e-40ec-8790-620f7b34aee6fileName">SignRawTransaction</con:setting>
                <con:setting id="32e349cf-f050-40ed-a810-dff7f2d12a41fileName">SignRawTransaction</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="签名交易" id="45f4b0fa-71d9-4072-97c4-3ce0b55e08f0">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16"
                            name="签名交易" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "id": "yctest",
                        "method": "signrawtransaction",
                        "params": [
                        "${#TestCase#rawTxHash}",
                        [
                        {
                        "txid": "${#TestCase#txid}",
                        "vout": ${#TestCase#vout},
                        "redeemScript": "${#TestCase#redeemScript}",
                        "scriptPubKey": "${#TestCase#scriptPubKey}",
                        "amount": "${#TestCase#金额}"
                        }
                        ],
                        [
                        "${#TestCase#源地址私钥}"
                        ]
                        ]
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="084de788-20dd-4e06-8392-89b479228b95"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Match" id="6d67e795-134b-45e2-9779-728a6e7654f6"
                                   name="Match content of [complete]">
                        <con:configuration>
                            <path>$.result.complete</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="7b4e11b4-d7d4-4bdd-aa7e-f64defe7d0fc">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>签名交易</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:hex[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>源地址私钥</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>rawTxHash</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>txid</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>vout</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>redeemScript</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>scriptPubKey</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="30ed8e6b-6571-412b-b3e9-91096f0eae2b" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="SignRawTransaction_wholePara" searchProperties="true">
            <con:settings>
                <con:setting id="3fdef9f0-6478-421f-a498-68b56359587ffileName">CreateRawTransaction</con:setting>
                <con:setting id="9cfbc3b9-d66e-40ec-8790-620f7b34aee6fileName">SignRawTransaction</con:setting>
                <con:setting id="32e349cf-f050-40ed-a810-dff7f2d12a41fileName">SignRawTransaction</con:setting>
                <con:setting id="30ed8e6b-6571-412b-b3e9-91096f0eae2bfileName">SignRawTransaction_wholePara
                </con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Groovy Script" id="e8140e51-9c0c-4f3a-82b3-d932993c4eaf">
                <con:settings/>
                <con:config>
                    <script>def params = context.expand( '${#TestCase#params}' )

                        log.info "params:" + params
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="签名交易" id="fa5bdf09-bc42-498e-a504-9f456ce56385">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16"
                            name="签名交易" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "id": "yctest",
                        "method": "signrawtransaction",
                        "params": ${#TestCase#params}
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="084de788-20dd-4e06-8392-89b479228b95"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Match" id="6d67e795-134b-45e2-9779-728a6e7654f6"
                                   name="Match content of [complete]">
                        <con:configuration>
                            <path>$.result.complete</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="cf6e0d78-ce9e-411e-a5ef-e5beb5c1e96f">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>签名交易</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:hex[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>params</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="7fe2a65c-74d7-41e2-b468-5ea3dc93ba29" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="sendrawtransaction" searchProperties="true">
            <con:settings>
                <con:setting id="3fdef9f0-6478-421f-a498-68b56359587ffileName">CreateRawTransaction</con:setting>
                <con:setting id="9cfbc3b9-d66e-40ec-8790-620f7b34aee6fileName">SignRawTransaction</con:setting>
                <con:setting id="16e87ca8-2889-4d50-b9f9-296a33530855fileName">sendrawtransaction</con:setting>
                <con:setting id="7fe2a65c-74d7-41e2-b468-5ea3dc93ba29fileName">sendrawtransaction</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="发送交易至链" id="2e086b02-d661-48dd-a204-7b0d5b70b5fc">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16"
                            name="发送交易至链" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "id": "yctest",
                        "method": "sendrawtransaction",
                        "params": [
                        "${#TestCase#signedHash}"
                        ]
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="4ecb8dc9-7d02-44b0-848a-3ac272c58c24"
                                   name="Check for existence of [result]">
                        <con:configuration>
                            <path>$.result</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Match" id="fcf4a2e8-ea73-41cb-be5c-fc85c8313655"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="ae17d126-0f4f-4512-b059-b5b71589a118">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>发送交易至链</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>signedHash</con:name>
                    <con:value>
                        02000000029ab04b90e1f2d3bc803c5a75127a8a261cfe1dbcb652153bf40e014f10f2114900000000da0048304502210093532884be28cbfa2db7b26d62dbca6af2653f460b9a45b7a0b7a2daf6f50001022077354f5a53e6ade32aa8057120381cc1e0467a445e787f81418e83b36a9df70f01473044022074c1241c07ab78d090ae21e70903b6f6a26127ece3530ab5cd571c597d5d601202206a4d61b08356ad61f1fbafd694abe3b235418e29d649bd34ca61a71294032c660147522103c900d592c56ab696e3dbcbf7b78a3c077369469122ad2b5f2630216bc0c8060e21021efb5e006363c8c85bd60b14ee083801173c3af52abc53e71d6749a788e7750252aeffffffffef7a3eeb3e0b284653a06eb358f7ae7da674468e918f0502f87df0bbedf39a0400000000da00483045022100dcf3ee2866e7622c531d2a2ce3e781641743c2f0883c1575396cee18853156c402201152817f7e95e8df17b75e6a85c4029830169a02a63d99dec541ff2186db29510147304402202828954a586338d567f89f6c19c09d1d072b5800c549c70a107116c3ff8d24b502206604f1f8676b85f0fc5105e9bffb132b104023005da36accc671063440a8f7480147522103c900d592c56ab696e3dbcbf7b78a3c077369469122ad2b5f2630216bc0c8060e21021efb5e006363c8c85bd60b14ee083801173c3af52abc53e71d6749a788e7750252aeffffffff02010000000000000017a914764b4ccc193adbceefe56022ce3080694979d6608710270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000
                    </con:value>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="3f4cb9c8-2326-4497-a51e-a55801b12b4f" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="listunspent3-multi" searchProperties="true">
            <con:settings>
                <con:setting id="864fc531-229e-404a-8e30-bce6d7bbd366fileName">getaccount</con:setting>
                <con:setting id="e15176ad-82aa-427a-a593-339ec7e5604cfileName">listunspent</con:setting>
                <con:setting id="65251eed-1322-471c-b7d6-5b3c4c167114fileName">listunspent3</con:setting>
                <con:setting id="f21636bb-2b38-4b28-8a82-3a4b7f19a251fileName">listunspent3</con:setting>
                <con:setting id="3f4cb9c8-2326-4497-a51e-a55801b12b4ffileName">listunspent3-multi</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询" id="bc958f4c-6093-48be-bf7e-038b5cba90cb">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点-多签}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "listunspent",
                        "params": [
                        0,9999999,[
                        "${#TestCase#address}"
                        ]
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="0b7e909b-ef25-46f0-96b4-0b3cb2605800">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>Response</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>address</con:name>
                    <con:value>2NCf6zAx7xm9PqNXtrxnLhgqyiicwpxUsZL</con:value>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="6f039113-f64d-45cc-a0ff-0ca03fd4e1dd" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="decoderawtransaction" searchProperties="true">
            <con:settings>
                <con:setting id="3fdef9f0-6478-421f-a498-68b56359587ffileName">CreateRawTransaction</con:setting>
                <con:setting id="9cfbc3b9-d66e-40ec-8790-620f7b34aee6fileName">SignRawTransaction</con:setting>
                <con:setting id="16e87ca8-2889-4d50-b9f9-296a33530855fileName">sendrawtransaction</con:setting>
                <con:setting id="3edd4bdf-afe9-4b07-8387-e5d30d2638a7fileName">decoderawtransaction</con:setting>
                <con:setting id="6f039113-f64d-45cc-a0ff-0ca03fd4e1ddfileName">decoderawtransaction</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="decoderawtransaction" id="c685548c-4879-4f18-b090-6b90ca49c53a">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16"
                            name="decoderawtransaction" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "id": "yctest",
                        "method": "decoderawtransaction",
                        "params": [
                        "02000000015d4bb5f19e24fe1493ef7f261ccfbced526125a4362c54bbb52fe7ea91bccb940000000000ffffffff0220f40e000000000017a914d4ee872f24e3040122de437b893351789907b2468710270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000"
                        ]
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="084de788-20dd-4e06-8392-89b479228b95"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="55699ce7-fb77-47d4-af90-15fe3064ed39">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>decoderawtransaction</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:hex[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>源地址私钥</con:name>
                    <con:value>2MvkqrXoxnPsR7Qg1arjHWRGH7DdydUswLa</con:value>
                </con:property>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value>2MyXNXqnubkaaTuUKvLcfuDKwcfPsvnJYYh</con:value>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value>0.001</con:value>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value>
                        02000000000101677e3c8d416184b42c753a8446f17b0b7997f0df7149449fbd0aef3cdfd29bfb0000000017160014add44d46cb27dde6104787355c36a5455487b97affffffff01a08601000000000017a91444de8ad785149e6c87f85239bdb4a4b46aeeb2d08702483045022100847e1a173fa20da43c43f9c3a9ed18b3933db921fc360e6dd9891fe49eb9ae7702205744d3e2e81fbcfbf93cdc02d4b381883f4984be184e8460c14e7b17b69ef2fe0121030b849af7670709e03a2a9894203320f4acb6c5d7ddf1a25240024f42cf971de300000000
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="4f7f11b0-67ba-480b-8d74-44c5881ecf79" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="insight-交易查询" searchProperties="true">
            <con:settings>
                <con:setting id="de38863e-1ef5-46ba-b924-9037520b9fc9fileName">insight-地址余额</con:setting>
                <con:setting id="c40aabbe-ee96-4b04-a4e7-d670320ae418fileName">insight-交易查询</con:setting>
                <con:setting id="4f7f11b0-67ba-480b-8d74-44c5881ecf79fileName">insight-交易查询</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询" id="88fc4314-fcf8-41b1-bcc5-0a7274909da5">
                <con:settings/>
                <con:config method="GET" xsi:type="con:HttpRequest" id="1a01c771-fa25-4849-888b-3171c7e592b8" name="查询"
                            postQueryString="false" mediaType="application/xml" timeout=""
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>https://${#Project#insight比特币地址}/api/tx/${#TestCase#txid}</con:endpoint>
                    <con:request/>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="查找本地址交易" id="a7497959-ecff-417a-afef-c6a86ff99cb2">
                <con:settings/>
                <con:config>
                    <script>import groovy.json.JsonSlurper

                        def 交易地址 = context.expand( '${#TestCase#交易地址}' )

                        def response = context.expand( '${查询#Response}' )

                        def slurper = new JsonSlurper()
                        def json = slurper.parseText(response)
                        def vout = json.vout

                        for(int i = 0 ; i &lt; vout.size; i++){
                        if(交易地址 == vout[i].scriptPubKey.addresses[0]){
                        testRunner.testCase.setPropertyValue("voutindex",i.toString());
                        // testRunner.testCase.setPropertyValue("vouttxid",i.toString());
                        }
                        // log.info vout[i].scriptPubKey
                        }
                        //vout.each{
                        // if(it.addresses != null){
                        // log.info "aa"
                        // }
                        //// if(){
                        ////
                        //// }
                        //}


                        //def result = context.expand(
                        '${JDBC Request-查询出金上报状态#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/SENDMSGLOG.MSGCONTENT[1]}'
                        )
                        //
                        //def slurper = new JsonSlurper()
                        //def json = slurper.parseText(result)
                        //def 待确认批次号 = context.expand( '${#TestSuite#待确认批次号}' )
                        //
                        //assert json.code==0
                        //assert json.status.equals('0')
                        //assert json.batchId.equals(待确认批次号)
                        //assert json.data[0].result.equals('0')
                        //log.info json.data[0].result
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="245d71da-c8bb-4ca4-a027-ffff4a9b7f38">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>confirmation</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace
                            ns1='https://test-insight.bitpay.com/api/tx/${#TestCase#txid}';
                            //ns1:Response[1]/ns1:confirmations[1]
                        </con:sourcePath>
                        <con:targetType>confirmations</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>fee</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace
                            ns1='https://test-insight.bitpay.com/api/tx/${#TestCase#txid}';
                            //ns1:Response[1]/ns1:fees[1]
                        </con:sourcePath>
                        <con:targetType>fee</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>txid</con:name>
                    <con:value>dd5e5ef730704bd570cc4a265d7b278056273ed280a7e9c56a8438337b14a12f</con:value>
                </con:property>
                <con:property>
                    <con:name>confirmations</con:name>
                    <con:value>8</con:value>
                </con:property>
                <con:property>
                    <con:name>fee</con:name>
                    <con:value>5.0E-5</con:value>
                </con:property>
                <con:property>
                    <con:name>voutindex</con:name>
                    <con:value>0</con:value>
                </con:property>
                <con:property>
                    <con:name>交易地址</con:name>
                    <con:value>miuiakWVBLHe4CeFaMD1dTt2dmEPKre6p2</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="dbfcb656-1c40-42af-b77d-e0a33925a2df" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="insight-地址余额" searchProperties="true">
            <con:settings>
                <con:setting id="de38863e-1ef5-46ba-b924-9037520b9fc9fileName">insight-地址余额</con:setting>
                <con:setting id="dbfcb656-1c40-42af-b77d-e0a33925a2dffileName">insight-地址余额</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询" id="19e4d836-7fd6-4bca-8769-df50674465c7">
                <con:settings/>
                <con:config method="GET" xsi:type="con:HttpRequest" id="1a01c771-fa25-4849-888b-3171c7e592b8" name="查询"
                            postQueryString="false" mediaType="application/xml"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>https://${#Project#insight比特币地址}/api/addr/${#TestCase#address}/balance</con:endpoint>
                    <con:request/>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="89cf869f-8f25-43eb-995c-01061ab142ff">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>amount</con:name>
                        <con:sourceType>Response</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:targetType>amount</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>amount</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>address</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="25404c24-04c1-43dc-997f-021d0ea63dc4" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="查询地址pubkey" searchProperties="true">
            <con:settings>
                <con:setting id="f77da271-709d-4706-98f0-53d74796226efileName">查询地址pubkey</con:setting>
                <con:setting id="25404c24-04c1-43dc-997f-021d0ea63dc4fileName">查询地址pubkey</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询账户信息" id="af8a7388-a2c1-4812-979d-18b2a51c69b5">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="9d608617-62e8-4454-8e07-0d56c6a6d535"
                            name="查询账户信息" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://42.159.153.121:20337</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "validateaddress",
                        "params": [
                        "${#TestCase#地址}"
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="8fa0846b-c803-4277-9863-a4d198fdb41a"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="135f7bf5-cbaf-40c3-84be-46ffa3ebd014">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询账户信息</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:pubkey[1]
                        </con:sourcePath>
                        <con:targetType>pubKey</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>地址</con:name>
                    <con:value>mwbPWjszvkniUVUyYeZndu5pG4o6GLZhcX</con:value>
                </con:property>
                <con:property>
                    <con:name>pubKey</con:name>
                    <con:value>021efb5e006363c8c85bd60b14ee083801173c3af52abc53e71d6749a788e77502</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>30ba691e-2d37-4558-81a7-5880eac65ac9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="3fc374a5-df02-4c6c-85d1-95863dfb6d68" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="查询地址prikey" searchProperties="true">
            <con:settings>
                <con:setting id="f77da271-709d-4706-98f0-53d74796226efileName">查询地址pubkey</con:setting>
                <con:setting id="25404c24-04c1-43dc-997f-021d0ea63dc4fileName">查询地址pubkey</con:setting>
                <con:setting id="3fc374a5-df02-4c6c-85d1-95863dfb6d68fileName">查询地址prikey</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-解锁钱包" id="31297265-f7e7-41f5-b755-4f693a515e6a">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>ff4c6551-ce48-4256-8642-daadc4c1d347</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>passphrase</con:name>
                            <con:value>pwd</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties/>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="解析地址列表" id="b4b18d64-4318-4ec2-84cd-7ebf3289c6d2">
                <con:settings/>
                <con:config>
                    <script>import groovy.json.JsonSlurper

                        def slurper = new JsonSlurper()
                        def teststep = testRunner.testCase.testSteps["Run TestCase-查询源地址私钥"]

                        def 地址列表 = context.expand( '${#TestCase#地址列表}' )
                        地址列表 = 地址列表.split(",")
                        def prikeySet = ""
                        for(def 地址 : 地址列表){
                        teststep.setPropertyValue("地址",地址)
                        def result = testRunner.runTestStepByName("Run TestCase-查询源地址私钥")
                        def json = slurper.parseText(result.getMessageExchanges()[0].getResponseContent())
                        prikeySet = prikeySet + json.result + ","
                        }
                        prikeySet = prikeySet[0..-2]
                        //log.info prikeySet
                        testRunner.testCase.setPropertyValue("prikeySet",prikeySet);
                        //def teststep = testRunner.testCase.testSteps["Run TestCase-查询源地址私钥"]
                        //def cont = new MockTestRunContext(testRunner,teststep)
                        //testRunner.setMockRunContext(cont)
                        //cont.setProperty("地址",地址列表[0])
                        //def result = testRunner.runTestStep(teststep)
                        //log.info result.getMessageExchanges()[0].getRequestContent()
                        //log.info cont.getProperty("地址")

                        //log.info result.getMessageExchanges()[0].getResponseContent()

                        //def testStep = TEST_SUITE.getTestCaseByName('TestCase').getTestStepByName('Login')
                        //
                        //def testStepContext = new WsdlTestRunContext(testStep)
                        //def result = testStep.run(testRunner, testStepContext)
                        //
                        //log.info result.responseContent
                        //testRunner.runTestStepByname("Groovy Script")
                        //testSteps["Input"]
                        //return 地址列表
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询源地址私钥" id="be7e731d-d417-4716-8956-d7c01be34294"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>d30220ec-8cbe-499d-bb6f-180b05e52d62</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>mgBkc5VHWrkx6Rri875AXrTGK1iaC4KaYF</con:value>
                        </con:property>
                        <con:property>
                            <con:name>私钥</con:name>
                            <con:value>cVsHL8rWM7wpvMKUEiH1MEj2xSxNbm4xAgHakRdRDDRNiepEBBB8</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>私钥</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="fd75c40e-8b40-4db0-bfbd-74b2ac319b11"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType xsi:nil="true"/>
                        <con:sourceStep xsi:nil="true"/>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:pubkey[1]
                        </con:sourcePath>
                        <con:targetType>prikeySet</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>地址列表</con:name>
                    <con:value>muFvcH8kKNZWNZVoz7PGCE3UyeiXnzjzKi,mgBkc5VHWrkx6Rri875AXrTGK1iaC4KaYF</con:value>
                </con:property>
                <con:property>
                    <con:name>prikeySet</con:name>
                    <con:value>
                        cTTxdheo42USoiaJfZTZqv4ZZuJ67RkLUzq9DXVnLLX88LZUR4c6,cVsHL8rWM7wpvMKUEiH1MEj2xSxNbm4xAgHakRdRDDRNiepEBBB8
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>30ba691e-2d37-4558-81a7-5880eac65ac9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="bd81b5d3-bd13-4f8a-9e57-f8f757c87058" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="转账" searchProperties="true">
            <con:settings>
                <con:setting id="7516b0c5-bef3-482d-8017-0ef38591602ffileName">转账</con:setting>
                <con:setting id="bd81b5d3-bd13-4f8a-9e57-f8f757c87058fileName">转账</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-解锁钱包" id="f7f9adad-57d6-455c-bd47-9a0ad5713da6">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>ff4c6551-ce48-4256-8642-daadc4c1d347</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>passphrase</con:name>
                            <con:value>pwd</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties/>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询源地址私钥" id="e6d71456-30b4-402f-95ab-e0fe3bb4bcf4">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>d30220ec-8cbe-499d-bb6f-180b05e52d62</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${#TestCase#源地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>私钥</con:name>
                            <con:value>cU89rSnpY3gtkAFEtRXkby5kFfhDzaoRiidwizWfyCumMoVw9G1X</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>私钥</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询UTXO" id="6e459b0b-a7c4-4371-a83d-e906e1423db4">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>b158eafc-184d-4083-8abb-bfbd0e4bb26a</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestCase#源地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>0.16594311</con:value>
                        </con:property>
                        <con:property>
                            <con:name>redeemScript</con:name>
                            <con:value xsi:nil="true"/>
                        </con:property>
                        <con:property>
                            <con:name>scriptPubkey</con:name>
                            <con:value>76a9148580bc89240bf130a841491c27b651978f8c9d7688ac</con:value>
                        </con:property>
                        <con:property>
                            <con:name>txid</con:name>
                            <con:value>${#TestCase#voutTxid}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>voutindex</con:name>
                            <con:value>1</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                        <con:entry>scriptPubkey</con:entry>
                        <con:entry>voutindex</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="找零余额计算" id="93900ef3-5dd5-48e5-9fe6-402e7f8a66b0">
                <con:settings/>
                <con:config>
                    <script>def 转账金额 = context.expand( '${#TestCase#金额}' ).toBigDecimal()
                        def 当前余额 = context.expand( '${Run TestCase-查询UTXO#amount}' ).toBigDecimal()

                        return 当前余额 - 转账金额 - 0.0000500
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-创建交易" id="c5e348bc-ee6f-4071-8804-42e8f2a01e44">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>517e01b2-884e-477f-9554-cff7235d6a40</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>目的地址</con:name>
                            <con:value>${#TestCase#目的地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>金额</con:name>
                            <con:value>${#TestCase#金额}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value>
                                0200000001974d56b40fdcc185dedf5af1d67b56855b9632a843a978cc15868943e38e849a0100000000ffffffff02a08601000000000017a91444de8ad785149e6c87f85239bdb4a4b46aeeb2d0875f9bfb00000000001976a914b058ba58f2363cea5bed01794a1910df70e0dda388ac00000000
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>txid</con:name>
                            <con:value>${#TestCase#voutTxid}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>vout</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>redeemScript</con:name>
                            <con:value>${Run TestCase-查询UTXO#redeemScript}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>scriptPubKey</con:name>
                            <con:value>${Run TestCase-查询UTXO#scriptPubkey}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>源地址</con:name>
                            <con:value>${#TestCase#源地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>找零余额</con:name>
                            <con:value>${找零余额计算#result}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-签名交易" id="e3d12491-9c2c-4272-b12e-598d95652647">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>32e349cf-f050-40ed-a810-dff7f2d12a41</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>源地址私钥</con:name>
                            <con:value>${Run TestCase-查询源地址私钥#私钥}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>目的地址</con:name>
                            <con:value>${#TestCase#目的地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>金额</con:name>
                            <con:value>${#TestCase#金额}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value/>
                        </con:property>
                        <con:property>
                            <con:name>rawTxHash</con:name>
                            <con:value>${Run TestCase-创建交易#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>txid</con:name>
                            <con:value>${Run TestCase-查询UTXO#txid}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>vout</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>redeemScript</con:name>
                            <con:value>${Run TestCase-查询UTXO#redeemScript}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>scriptPubKey</con:name>
                            <con:value>${Run TestCase-查询UTXO#scriptPubkey}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-发送交易上链" id="b900b645-f865-41f1-a730-160512fb235e">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>7fe2a65c-74d7-41e2-b468-5ea3dc93ba29</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>signedHash</con:name>
                            <con:value>
                                010000000271d06d992dada33335079711e4b0ed41f192fcf3793d93145bb5e6f03ad4d86b000000009200483045022100d9d6ad43a873e1498b5c6d687be86358a322a8dbdc5e35d04dbd957b22f1394c022013779dbe94b28f001f792bcb84b20dcd32cde450dd917054702f7e7ade6877d2014730440220226d0c3a46808e6318cfd17c0c50364dec0e68c98d2821bf43e4b132aed70a7c02206421683556fd2b587ac22667d2783f78dfa292ec7775374661da82c9d2b2550b01ffffffff939886b9cddf6370941beab4849cfcae077bbac1d5a60135f9cae8d01f3585f8000000009300483045022100cb7fe0e8adc925a05980b74ffaf339f634b17e1b7283e857e9a7a5bde59e9b0e02205d8101fac8101536bcc2d85dc455a7b7452296c157a90f9064723b90d3ceefe001483045022100c01eab12f57adfc7efaaf0de964db97850a37d39e9ef55eef639998ea6e6af7602207fb26712cef6a861ce2e5dc4e2226ce90750c00b9bf7b787ddfeb441e7b1bd9601ffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value/>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="320b8a23-23c3-42a3-af46-2d95b37713bc">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>result</con:sourceType>
                        <con:sourceStep>Run TestCase-发送交易上链</con:sourceStep>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>voutindex</con:name>
                        <con:sourceType>voutindex</con:sourceType>
                        <con:sourceStep>Run TestCase-查询UTXO</con:sourceStep>
                        <con:targetType>voutindex</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>源地址</con:name>
                    <con:value>n3LmVYWecvYrSfsBqKXiSYfukgjhKyt627</con:value>
                </con:property>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value>2MyXNXqnubkaaTuUKvLcfuDKwcfPsvnJYYh</con:value>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value>0.001</con:value>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                </con:property>
                <con:property>
                    <con:name>voutTxid</con:name>
                    <con:value>9a848ee343898615cc78a943a832965b85567bd6f15adfde85c1dc0fb4564d97</con:value>
                </con:property>
                <con:property>
                    <con:name>voutindex</con:name>
                    <con:value>1</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>99ae7b30-1e04-4d19-b2b7-576a57ec0e59</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>0201aa4d-03aa-4b4f-9613-6a42a4d8cedf</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>fa5bdf09-bc42-498e-a504-9f456ce56385</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>31297265-f7e7-41f5-b755-4f693a515e6a</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>be7e731d-d417-4716-8956-d7c01be34294</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
    </con:testSuite>
    <con:testSuite id="c03a168f-38ff-4436-a803-c719bc44d3cf" name="LTC-RPC接口列表" disabled="true">
        <con:settings>
            <con:setting id="1cb2941d-97da-4caf-aa15-b656d5077a64fileName">BTC-RPC接口列表</con:setting>
            <con:setting id="b9a3bd8c-4a00-4056-9e3f-4ac703e7956bfileName">BTC-RPC接口列表</con:setting>
            <con:setting id="c03a168f-38ff-4436-a803-c719bc44d3cffileName">LTC-RPC接口列表</con:setting>
        </con:settings>
        <con:savedRecentRuns>1</con:savedRecentRuns>
        <con:runType>SEQUENTIAL</con:runType>
        <con:properties>
            <con:property>
                <con:name>index</con:name>
                <con:value>0</con:value>
            </con:property>
        </con:properties>
        <con:reportParameters/>
        <con:testCase id="ba0954a4-481a-4893-b370-cf0b32f1f1f3" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="getnewaddress" searchProperties="true">
            <con:settings>
                <con:setting id="864fc531-229e-404a-8e30-bce6d7bbd366fileName">getaccount</con:setting>
                <con:setting id="77a36727-07b8-4b15-8351-c980f65ac644fileName">getnewaddress</con:setting>
                <con:setting id="621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00fileName">getnewaddress</con:setting>
                <con:setting id="ba0954a4-481a-4893-b370-cf0b32f1f1f3fileName">getnewaddress</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="httprequest" name="查询" id="b66b0d6c-32e7-43bd-ad03-a46df2536ee3">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#LTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "getnewaddress",
                        "params": [
                        "${#TestCase#account}","legacy"
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="f00ab65d-3642-4ba0-b84e-9388d0e23665">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>address</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>address</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>account</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>address</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="d5b139dd-818e-47c9-ad09-878a92101ff1" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="getaccountByAddress" searchProperties="true">
            <con:settings>
                <con:setting id="864fc531-229e-404a-8e30-bce6d7bbd366fileName">getaccount</con:setting>
                <con:setting id="7718e35c-12db-4bf4-afce-0eb1d96f0000fileName">getaccountByAddress</con:setting>
                <con:setting id="d5b139dd-818e-47c9-ad09-878a92101ff1fileName">getaccountByAddress</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询" id="0bb6bf21-b4f3-4be2-a96d-6b1c75d40c5b">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "getaccount",
                        "params": [
                        "${#TestCase#address}"
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="60790a9d-6973-4d04-a1d7-aeb7987692de">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>account</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>account</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>address</con:name>
                    <con:value>2MyXNXqnubkaaTuUKvLcfuDKwcfPsvnJYYh</con:value>
                </con:property>
                <con:property>
                    <con:name>account</con:name>
                    <con:value>yctest</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="ce52880b-f7de-43ba-ad0d-19f70e33ab0a" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="getbalanceByAddress" searchProperties="true">
            <con:settings>
                <con:setting id="a63fcdb3-86ed-4517-a6bd-72c955e2d79ffileName">getbalance</con:setting>
                <con:setting id="9a65b211-28ca-423d-9dea-dcc667fbf2dbfileName">getbalanceByAddress</con:setting>
                <con:setting id="ce52880b-f7de-43ba-ad0d-19f70e33ab0afileName">getbalanceByAddress</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询account" id="50db61e8-7d77-46c8-9841-b23d2fd60b34">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16"
                            name="查询account" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "getaccount",
                        "params": [
                        "${#TestCase#address}"
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="查询" id="8aba0148-5bc4-4118-b137-2c7d9beca532">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "getbalance",
                        "params": [
                        "${查询account#ResponseAsXml#declare namespace ns1='http://42.159.153.121/'; //ns1:Response[1]/ns1:result[1]}"
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="d365082e-df49-4fc1-9e60-0c863ee14b2c"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="c4308c6c-dede-45d3-8bc6-281387209103">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>balance</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>balance</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>address</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>balance</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="9aad83b1-1bb2-4b2a-a610-f307cb2cde96" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="listunspent" searchProperties="true">
            <con:settings>
                <con:setting id="864fc531-229e-404a-8e30-bce6d7bbd366fileName">getaccount</con:setting>
                <con:setting id="e15176ad-82aa-427a-a593-339ec7e5604cfileName">listunspent</con:setting>
                <con:setting id="b158eafc-184d-4083-8abb-bfbd0e4bb26afileName">listunspent</con:setting>
                <con:setting id="9aad83b1-1bb2-4b2a-a610-f307cb2cde96fileName">listunspent</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询" id="52b5b76b-baf7-44ce-9b4e-76d212d80890">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#LTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "listunspent",
                        "params": [
                        0,9999999,[
                        "${#TestCase#address}"
                        ]
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="查找UTXO" id="4f33d7b9-76b1-42d2-94b8-af6aa47797f1">
                <con:settings/>
                <con:config>
                    <script>import groovy.json.JsonSlurper

                        def txid = context.expand( '${#TestCase#txid}' )

                        def response = context.expand( '${查询#Response}' )

                        def slurper = new JsonSlurper()
                        def json = slurper.parseText(response)
                        def result = json.result

                        for(int i = 0 ; i &lt; result.size; i++){
                        if(txid == result[i].txid){
                        testRunner.testCase.setPropertyValue("amount",result[i].amount.toString());
                        testRunner.testCase.setPropertyValue("scriptPubkey",result[i].scriptPubKey);
                        testRunner.testCase.setPropertyValue("voutindex",result[i].vout.toString());
                        // testRunner.testCase.setPropertyValue("vouttxid",i.toString());
                        }
                        // log.info vout[i].scriptPubKey
                        }
                        //vout.each{
                        // if(it.addresses != null){
                        // log.info "aa"
                        // }
                        //// if(){
                        ////
                        //// }
                        //}


                        //def result = context.expand(
                        '${JDBC Request-查询出金上报状态#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/SENDMSGLOG.MSGCONTENT[1]}'
                        )
                        //
                        //def slurper = new JsonSlurper()
                        //def json = slurper.parseText(result)
                        //def 待确认批次号 = context.expand( '${#TestSuite#待确认批次号}' )
                        //
                        //assert json.code==0
                        //assert json.status.equals('0')
                        //assert json.batchId.equals(待确认批次号)
                        //assert json.data[0].result.equals('0')
                        //log.info json.data[0].result
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="608f97e2-e0a9-42b5-adc7-7afcdc8d04d3"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>amount</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:e[1]/ns1:amount[1]
                        </con:sourcePath>
                        <con:targetType>amount</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>redeemScript</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:e[1]/ns1:redeemScript[1]
                        </con:sourcePath>
                        <con:targetType>redeemScript</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>scriptPubKey</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:e[1]/ns1:scriptPubKey[1]
                        </con:sourcePath>
                        <con:targetType>scriptPubKey</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>txid</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:e[1]/ns1:txid[1]
                        </con:sourcePath>
                        <con:targetType>txid</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>address</con:name>
                    <con:value>mjFBdzsYNBCeabLNwyYYCt8epG7GhzYeTw</con:value>
                </con:property>
                <con:property>
                    <con:name>amount</con:name>
                    <con:value>0.16594311</con:value>
                </con:property>
                <con:property>
                    <con:name>redeemScript</con:name>
                    <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                </con:property>
                <con:property>
                    <con:name>scriptPubkey</con:name>
                    <con:value>76a9148580bc89240bf130a841491c27b651978f8c9d7688ac</con:value>
                </con:property>
                <con:property>
                    <con:name>txid</con:name>
                    <con:value>9a848ee343898615cc78a943a832965b85567bd6f15adfde85c1dc0fb4564d97</con:value>
                </con:property>
                <con:property>
                    <con:name>voutindex</con:name>
                    <con:value>1</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="2cd29505-8a5f-46cd-a5a1-eeeead113c2a" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="listunspent3" searchProperties="true">
            <con:settings>
                <con:setting id="864fc531-229e-404a-8e30-bce6d7bbd366fileName">getaccount</con:setting>
                <con:setting id="e15176ad-82aa-427a-a593-339ec7e5604cfileName">listunspent</con:setting>
                <con:setting id="65251eed-1322-471c-b7d6-5b3c4c167114fileName">listunspent3</con:setting>
                <con:setting id="f21636bb-2b38-4b28-8a82-3a4b7f19a251fileName">listunspent3</con:setting>
                <con:setting id="2cd29505-8a5f-46cd-a5a1-eeeead113c2afileName">listunspent3</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询" id="a04c190c-dc78-43d2-851c-c3400653fb03">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#LTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "listunspent",
                        "params": [
                        0,9999999,[
                        "${#TestCase#address}"
                        ]
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="3c45db8c-339f-46e8-a92b-173a78ea1e07">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>Response</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>address</con:name>
                    <con:value>mvVcvP3QstSqCLSGyPQYTMJfZV76jpu1b9</con:value>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="ffbd26c8-17cb-4bbf-8b98-50f811ca0c25" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="getbestblockhash" searchProperties="true">
            <con:settings>
                <con:setting id="864fc531-229e-404a-8e30-bce6d7bbd366fileName">getaccount</con:setting>
                <con:setting id="ba2b16cd-f704-4fec-8f1c-52b9ea6fc1b0fileName">getbestblockhash</con:setting>
                <con:setting id="16ee5d7d-bf32-44d8-be12-573b968b9ec7fileName">getbestblockhash</con:setting>
                <con:setting id="ffbd26c8-17cb-4bbf-8b98-50f811ca0c25fileName">getbestblockhash</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询" id="d0662af5-282e-49c0-8d6f-1a3789d19232">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#LTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "getbestblockhash",
                        "params": [
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="c4865bce-304c-447c-bf94-937754c67c2c">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>result</con:name>
                    <con:value>000000000000002959cc944b063b6f5178f6d20a032b2f47efc82cbec1ea33d7</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="1d15d426-b36b-41ae-9384-f36209bfa9b1" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="dumpprivkey" searchProperties="true">
            <con:settings>
                <con:setting id="f77da271-709d-4706-98f0-53d74796226efileName">查询地址pubkey</con:setting>
                <con:setting id="514d515f-3813-4dfc-b1d6-eb253fb33811fileName">dumpprivkey</con:setting>
                <con:setting id="d30220ec-8cbe-499d-bb6f-180b05e52d62fileName">dumpprivkey</con:setting>
                <con:setting id="1d15d426-b36b-41ae-9384-f36209bfa9b1fileName">dumpprivkey</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询账户信息" id="83d1b50c-72dc-46af-a748-421e92f99f55">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="9d608617-62e8-4454-8e07-0d56c6a6d535"
                            name="查询账户信息" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#LTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "dumpprivkey",
                        "params": [
                        "${#TestCase#地址}"
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="8fa0846b-c803-4277-9863-a4d198fdb41a"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="dab88e74-1987-47d6-9d38-7606957a37fe">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>key</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询账户信息</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>私钥</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>地址</con:name>
                    <con:value>mxsGoaJju6cfHj9NN8Q7rEpovVGsK3Yfuk</con:value>
                </con:property>
                <con:property>
                    <con:name>私钥</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>30ba691e-2d37-4558-81a7-5880eac65ac9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="c6adf25f-901b-4378-98d5-bdaa2b697f44" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="walletpassphrase" searchProperties="true">
            <con:settings>
                <con:setting id="864fc531-229e-404a-8e30-bce6d7bbd366fileName">getaccount</con:setting>
                <con:setting id="77a36727-07b8-4b15-8351-c980f65ac644fileName">getnewaddress</con:setting>
                <con:setting id="a6da8135-2f63-4a92-b2fe-5dad582e2f10fileName">walletpassphrase</con:setting>
                <con:setting id="ff4c6551-ce48-4256-8642-daadc4c1d347fileName">walletpassphrase</con:setting>
                <con:setting id="c6adf25f-901b-4378-98d5-bdaa2b697f44fileName">walletpassphrase</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询" id="1bd9ef1c-b0bf-44b1-86a4-4d7039804e33">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "walletpassphrase",
                        "params": [
                        "${#TestCase#passphrase}",60
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>passphrase</con:name>
                    <con:value>pwd</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="3f96958e-1d96-4462-a5f2-d653373134ea" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="CreateRawTransaction" searchProperties="true">
            <con:settings>
                <con:setting id="3fdef9f0-6478-421f-a498-68b56359587ffileName">CreateRawTransaction</con:setting>
                <con:setting id="517e01b2-884e-477f-9554-cff7235d6a40fileName">CreateRawTransaction</con:setting>
                <con:setting id="3f96958e-1d96-4462-a5f2-d653373134eafileName">CreateRawTransaction</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="创建交易" id="3a704aa1-7b96-44b5-8e6f-711e5a65fb30">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16"
                            name="创建交易" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "id": "yctest",
                        "method": "createrawtransaction",
                        "params": [
                        [
                        {
                        "txid": "${#TestCase#txid}",
                        "vout": ${#TestCase#vout},
                        "redeemScript": "${#TestCase#redeemScript}",
                        "scriptPubKey": "${#TestCase#scriptPubKey}"
                        }
                        ],
                        {
                        "${#TestCase#目的地址}": "${#TestCase#金额}",
                        "${#TestCase#源地址}": "${#TestCase#找零余额}"
                        }
                        ]
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="084de788-20dd-4e06-8392-89b479228b95"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="2c22d735-eba8-4675-9ad8-63d2679a4ed4">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>创建交易</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>txid</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>vout</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>redeemScript</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>scriptPubKey</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>源地址</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>找零余额</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="461d9b70-7063-41fe-9571-d7170a2668cf" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="SignRawTransaction" searchProperties="true">
            <con:settings>
                <con:setting id="3fdef9f0-6478-421f-a498-68b56359587ffileName">CreateRawTransaction</con:setting>
                <con:setting id="9cfbc3b9-d66e-40ec-8790-620f7b34aee6fileName">SignRawTransaction</con:setting>
                <con:setting id="32e349cf-f050-40ed-a810-dff7f2d12a41fileName">SignRawTransaction</con:setting>
                <con:setting id="461d9b70-7063-41fe-9571-d7170a2668cffileName">SignRawTransaction</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="签名交易" id="b1bb1f3b-7c23-44ab-ad9f-6748246a3e57">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16"
                            name="签名交易" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "id": "yctest",
                        "method": "signrawtransaction",
                        "params": [
                        "${#TestCase#rawTxHash}",
                        [
                        {
                        "txid": "${#TestCase#txid}",
                        "vout": ${#TestCase#vout},
                        "redeemScript": "${#TestCase#redeemScript}",
                        "scriptPubKey": "${#TestCase#scriptPubKey}",
                        "amount": "${#TestCase#金额}"
                        }
                        ],
                        [
                        "${#TestCase#源地址私钥}"
                        ]
                        ]
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="084de788-20dd-4e06-8392-89b479228b95"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Match" id="6d67e795-134b-45e2-9779-728a6e7654f6"
                                   name="Match content of [complete]">
                        <con:configuration>
                            <path>$.result.complete</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="44b9b1d1-3b99-4e00-ae19-427614005ce7">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>签名交易</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:hex[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>源地址私钥</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>rawTxHash</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>txid</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>vout</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>redeemScript</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>scriptPubKey</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="484464c1-e924-4493-9f41-364ac7b23618" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="SignRawTransaction_wholePara" searchProperties="true">
            <con:settings>
                <con:setting id="3fdef9f0-6478-421f-a498-68b56359587ffileName">CreateRawTransaction</con:setting>
                <con:setting id="9cfbc3b9-d66e-40ec-8790-620f7b34aee6fileName">SignRawTransaction</con:setting>
                <con:setting id="32e349cf-f050-40ed-a810-dff7f2d12a41fileName">SignRawTransaction</con:setting>
                <con:setting id="30ed8e6b-6571-412b-b3e9-91096f0eae2bfileName">SignRawTransaction_wholePara
                </con:setting>
                <con:setting id="484464c1-e924-4493-9f41-364ac7b23618fileName">SignRawTransaction_wholePara
                </con:setting>
            </con:settings>
            <con:testStep type="groovy" name="Groovy Script" id="13273901-73d3-4890-b602-38706450eac5">
                <con:settings/>
                <con:config>
                    <script>def params = context.expand( '${#TestCase#params}' )

                        log.info "params:" + params
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="签名交易" id="28441831-cae2-4e6b-85b0-dae75c6711d4">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16"
                            name="签名交易" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "id": "yctest",
                        "method": "signrawtransaction",
                        "params": ${#TestCase#params}
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="084de788-20dd-4e06-8392-89b479228b95"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Match" id="6d67e795-134b-45e2-9779-728a6e7654f6"
                                   name="Match content of [complete]">
                        <con:configuration>
                            <path>$.result.complete</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="572606be-16af-4c35-98bc-5636fc6b75ba">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>签名交易</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:hex[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>params</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="988ae1e8-c523-4732-868e-2d11453dd622" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="sendrawtransaction" searchProperties="true">
            <con:settings>
                <con:setting id="3fdef9f0-6478-421f-a498-68b56359587ffileName">CreateRawTransaction</con:setting>
                <con:setting id="9cfbc3b9-d66e-40ec-8790-620f7b34aee6fileName">SignRawTransaction</con:setting>
                <con:setting id="16e87ca8-2889-4d50-b9f9-296a33530855fileName">sendrawtransaction</con:setting>
                <con:setting id="7fe2a65c-74d7-41e2-b468-5ea3dc93ba29fileName">sendrawtransaction</con:setting>
                <con:setting id="988ae1e8-c523-4732-868e-2d11453dd622fileName">sendrawtransaction</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="发送交易至链" id="cea476af-10fd-4995-9c4b-fa6b6cdce3cb">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16"
                            name="发送交易至链" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "id": "yctest",
                        "method": "sendrawtransaction",
                        "params": [
                        "${#TestCase#signedHash}"
                        ]
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="4ecb8dc9-7d02-44b0-848a-3ac272c58c24"
                                   name="Check for existence of [result]">
                        <con:configuration>
                            <path>$.result</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="JsonPath Match" id="fcf4a2e8-ea73-41cb-be5c-fc85c8313655"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="76acbdf0-95fb-4e5b-838a-0aee5c3b1909">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>发送交易至链</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>signedHash</con:name>
                    <con:value>
                        02000000029ab04b90e1f2d3bc803c5a75127a8a261cfe1dbcb652153bf40e014f10f2114900000000da0048304502210093532884be28cbfa2db7b26d62dbca6af2653f460b9a45b7a0b7a2daf6f50001022077354f5a53e6ade32aa8057120381cc1e0467a445e787f81418e83b36a9df70f01473044022074c1241c07ab78d090ae21e70903b6f6a26127ece3530ab5cd571c597d5d601202206a4d61b08356ad61f1fbafd694abe3b235418e29d649bd34ca61a71294032c660147522103c900d592c56ab696e3dbcbf7b78a3c077369469122ad2b5f2630216bc0c8060e21021efb5e006363c8c85bd60b14ee083801173c3af52abc53e71d6749a788e7750252aeffffffffef7a3eeb3e0b284653a06eb358f7ae7da674468e918f0502f87df0bbedf39a0400000000da00483045022100dcf3ee2866e7622c531d2a2ce3e781641743c2f0883c1575396cee18853156c402201152817f7e95e8df17b75e6a85c4029830169a02a63d99dec541ff2186db29510147304402202828954a586338d567f89f6c19c09d1d072b5800c549c70a107116c3ff8d24b502206604f1f8676b85f0fc5105e9bffb132b104023005da36accc671063440a8f7480147522103c900d592c56ab696e3dbcbf7b78a3c077369469122ad2b5f2630216bc0c8060e21021efb5e006363c8c85bd60b14ee083801173c3af52abc53e71d6749a788e7750252aeffffffff02010000000000000017a914764b4ccc193adbceefe56022ce3080694979d6608710270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000
                    </con:value>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="81f3f1d4-5625-4c88-93e5-6b9253a5841a" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="listunspent3-multi" searchProperties="true">
            <con:settings>
                <con:setting id="864fc531-229e-404a-8e30-bce6d7bbd366fileName">getaccount</con:setting>
                <con:setting id="e15176ad-82aa-427a-a593-339ec7e5604cfileName">listunspent</con:setting>
                <con:setting id="65251eed-1322-471c-b7d6-5b3c4c167114fileName">listunspent3</con:setting>
                <con:setting id="f21636bb-2b38-4b28-8a82-3a4b7f19a251fileName">listunspent3</con:setting>
                <con:setting id="3f4cb9c8-2326-4497-a51e-a55801b12b4ffileName">listunspent3-multi</con:setting>
                <con:setting id="81f3f1d4-5625-4c88-93e5-6b9253a5841afileName">listunspent3-multi</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询" id="653a4286-ab35-4daf-abd7-627a0d18957d">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点-多签}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "listunspent",
                        "params": [
                        0,9999999,[
                        "${#TestCase#address}"
                        ]
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="9e722ff6-77a9-42a5-a5ea-c7a5e23e223e">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>Response</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>address</con:name>
                    <con:value>2NCf6zAx7xm9PqNXtrxnLhgqyiicwpxUsZL</con:value>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="e12a1bfd-70c3-4685-8c90-ef54279d4f55" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="decoderawtransaction" searchProperties="true">
            <con:settings>
                <con:setting id="3fdef9f0-6478-421f-a498-68b56359587ffileName">CreateRawTransaction</con:setting>
                <con:setting id="9cfbc3b9-d66e-40ec-8790-620f7b34aee6fileName">SignRawTransaction</con:setting>
                <con:setting id="16e87ca8-2889-4d50-b9f9-296a33530855fileName">sendrawtransaction</con:setting>
                <con:setting id="3edd4bdf-afe9-4b07-8387-e5d30d2638a7fileName">decoderawtransaction</con:setting>
                <con:setting id="6f039113-f64d-45cc-a0ff-0ca03fd4e1ddfileName">decoderawtransaction</con:setting>
                <con:setting id="e12a1bfd-70c3-4685-8c90-ef54279d4f55fileName">decoderawtransaction</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="decoderawtransaction" id="1b99027f-031f-4603-9426-8fd323895c43">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16"
                            name="decoderawtransaction" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#BTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "id": "yctest",
                        "method": "decoderawtransaction",
                        "params": [
                        "02000000015d4bb5f19e24fe1493ef7f261ccfbced526125a4362c54bbb52fe7ea91bccb940000000000ffffffff0220f40e000000000017a914d4ee872f24e3040122de437b893351789907b2468710270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000"
                        ]
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="084de788-20dd-4e06-8392-89b479228b95"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="927d946e-bdf8-4179-a901-25cb8aaabd78">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>decoderawtransaction</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:hex[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>源地址私钥</con:name>
                    <con:value>2MvkqrXoxnPsR7Qg1arjHWRGH7DdydUswLa</con:value>
                </con:property>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value>2MyXNXqnubkaaTuUKvLcfuDKwcfPsvnJYYh</con:value>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value>0.001</con:value>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value>
                        02000000000101677e3c8d416184b42c753a8446f17b0b7997f0df7149449fbd0aef3cdfd29bfb0000000017160014add44d46cb27dde6104787355c36a5455487b97affffffff01a08601000000000017a91444de8ad785149e6c87f85239bdb4a4b46aeeb2d08702483045022100847e1a173fa20da43c43f9c3a9ed18b3933db921fc360e6dd9891fe49eb9ae7702205744d3e2e81fbcfbf93cdc02d4b381883f4984be184e8460c14e7b17b69ef2fe0121030b849af7670709e03a2a9894203320f4acb6c5d7ddf1a25240024f42cf971de300000000
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="7c4009fa-3404-478c-b563-5e1061a7f0f7" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="insight-交易查询" searchProperties="true">
            <con:settings>
                <con:setting id="de38863e-1ef5-46ba-b924-9037520b9fc9fileName">insight-地址余额</con:setting>
                <con:setting id="c40aabbe-ee96-4b04-a4e7-d670320ae418fileName">insight-交易查询</con:setting>
                <con:setting id="4f7f11b0-67ba-480b-8d74-44c5881ecf79fileName">insight-交易查询</con:setting>
                <con:setting id="7c4009fa-3404-478c-b563-5e1061a7f0f7fileName">insight-交易查询</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询" id="3cea60be-3b46-40d7-b0d2-57a77cfab53f">
                <con:settings/>
                <con:config method="GET" xsi:type="con:HttpRequest" id="1a01c771-fa25-4849-888b-3171c7e592b8" name="查询"
                            postQueryString="false" mediaType="application/xml" timeout=""
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>https://${#Project#insight比特币地址}/api/tx/${#TestCase#txid}</con:endpoint>
                    <con:request/>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="查找本地址交易" id="6ec0e7b6-198c-4181-b3e1-dd3cc6969d50">
                <con:settings/>
                <con:config>
                    <script>import groovy.json.JsonSlurper

                        def 交易地址 = context.expand( '${#TestCase#交易地址}' )

                        def response = context.expand( '${查询#Response}' )

                        def slurper = new JsonSlurper()
                        def json = slurper.parseText(response)
                        def vout = json.vout

                        for(int i = 0 ; i &lt; vout.size; i++){
                        if(交易地址 == vout[i].scriptPubKey.addresses[0]){
                        testRunner.testCase.setPropertyValue("voutindex",i.toString());
                        // testRunner.testCase.setPropertyValue("vouttxid",i.toString());
                        }
                        // log.info vout[i].scriptPubKey
                        }
                        //vout.each{
                        // if(it.addresses != null){
                        // log.info "aa"
                        // }
                        //// if(){
                        ////
                        //// }
                        //}


                        //def result = context.expand(
                        '${JDBC Request-查询出金上报状态#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/SENDMSGLOG.MSGCONTENT[1]}'
                        )
                        //
                        //def slurper = new JsonSlurper()
                        //def json = slurper.parseText(result)
                        //def 待确认批次号 = context.expand( '${#TestSuite#待确认批次号}' )
                        //
                        //assert json.code==0
                        //assert json.status.equals('0')
                        //assert json.batchId.equals(待确认批次号)
                        //assert json.data[0].result.equals('0')
                        //log.info json.data[0].result
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="6c766aee-27f9-4e36-a4a0-d18fe3ba5d32">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>confirmation</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace
                            ns1='https://test-insight.bitpay.com/api/tx/${#TestCase#txid}';
                            //ns1:Response[1]/ns1:confirmations[1]
                        </con:sourcePath>
                        <con:targetType>confirmations</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>fee</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace
                            ns1='https://test-insight.bitpay.com/api/tx/${#TestCase#txid}';
                            //ns1:Response[1]/ns1:fees[1]
                        </con:sourcePath>
                        <con:targetType>fee</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>txid</con:name>
                    <con:value>dd5e5ef730704bd570cc4a265d7b278056273ed280a7e9c56a8438337b14a12f</con:value>
                </con:property>
                <con:property>
                    <con:name>confirmations</con:name>
                    <con:value>8</con:value>
                </con:property>
                <con:property>
                    <con:name>fee</con:name>
                    <con:value>5.0E-5</con:value>
                </con:property>
                <con:property>
                    <con:name>voutindex</con:name>
                    <con:value>0</con:value>
                </con:property>
                <con:property>
                    <con:name>交易地址</con:name>
                    <con:value>miuiakWVBLHe4CeFaMD1dTt2dmEPKre6p2</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="f7d39cc6-1219-4022-9465-5ae225c1273c" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="insight-地址余额" searchProperties="true">
            <con:settings>
                <con:setting id="de38863e-1ef5-46ba-b924-9037520b9fc9fileName">insight-地址余额</con:setting>
                <con:setting id="dbfcb656-1c40-42af-b77d-e0a33925a2dffileName">insight-地址余额</con:setting>
                <con:setting id="f7d39cc6-1219-4022-9465-5ae225c1273cfileName">insight-地址余额</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询" id="a3c153c7-cc8e-4a83-8ad3-1dd42e3922f3">
                <con:settings/>
                <con:config method="GET" xsi:type="con:HttpRequest" id="1a01c771-fa25-4849-888b-3171c7e592b8" name="查询"
                            postQueryString="false" mediaType="application/xml"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>https://${#Project#insight比特币地址}/api/addr/${#TestCase#address}/balance</con:endpoint>
                    <con:request/>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="fb037321-d63e-40c4-ad1a-ee90335e5e0d">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>amount</con:name>
                        <con:sourceType>Response</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:targetType>amount</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>amount</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>address</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="4fed871e-7934-4b60-b132-1dd1d9acde0b" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="查询地址pubkey" searchProperties="true">
            <con:settings>
                <con:setting id="f77da271-709d-4706-98f0-53d74796226efileName">查询地址pubkey</con:setting>
                <con:setting id="25404c24-04c1-43dc-997f-021d0ea63dc4fileName">查询地址pubkey</con:setting>
                <con:setting id="4fed871e-7934-4b60-b132-1dd1d9acde0bfileName">查询地址pubkey</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询账户信息" id="78089c67-375e-444f-a2a0-09678fae2ff0">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="9d608617-62e8-4454-8e07-0d56c6a6d535"
                            name="查询账户信息" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#LTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "validateaddress",
                        "params": [
                        "${#TestCase#地址}"
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="8fa0846b-c803-4277-9863-a4d198fdb41a"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="420cb211-a12e-4a93-8b11-f753ed0e0b59">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询账户信息</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:pubkey[1]
                        </con:sourcePath>
                        <con:targetType>pubKey</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>地址</con:name>
                    <con:value>QPSRZCGpqnzmnKpbYytG81pRKznU7x69Ja</con:value>
                </con:property>
                <con:property>
                    <con:name>pubKey</con:name>
                    <con:value>02857ba19a93b4612a46d6520b6076e8fa74cc2e8691b74e2f684e87de34e13671</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>30ba691e-2d37-4558-81a7-5880eac65ac9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="e47922cc-fa16-42a5-96b7-c352b713632e" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="查询地址prikey" searchProperties="true">
            <con:settings>
                <con:setting id="f77da271-709d-4706-98f0-53d74796226efileName">查询地址pubkey</con:setting>
                <con:setting id="25404c24-04c1-43dc-997f-021d0ea63dc4fileName">查询地址pubkey</con:setting>
                <con:setting id="3fc374a5-df02-4c6c-85d1-95863dfb6d68fileName">查询地址prikey</con:setting>
                <con:setting id="e47922cc-fa16-42a5-96b7-c352b713632efileName">查询地址prikey</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-解锁钱包" id="4b62bf8d-c6f1-4f9b-aba3-c7a93ebac1ce">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>c6adf25f-901b-4378-98d5-bdaa2b697f44</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>passphrase</con:name>
                            <con:value>pwd</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties/>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="解析地址列表" id="2fee95de-3dc4-481a-988b-bb88299da521">
                <con:settings/>
                <con:config>
                    <script>import groovy.json.JsonSlurper

                        def slurper = new JsonSlurper()
                        def teststep = testRunner.testCase.testSteps["Run TestCase-查询源地址私钥"]

                        def 地址列表 = context.expand( '${#TestCase#地址列表}' )
                        地址列表 = 地址列表.split(",")
                        def prikeySet = ""
                        for(def 地址 : 地址列表){
                        teststep.setPropertyValue("地址",地址)
                        def result = testRunner.runTestStepByName("Run TestCase-查询源地址私钥")
                        def json = slurper.parseText(result.getMessageExchanges()[0].getResponseContent())
                        prikeySet = prikeySet + json.result + ","
                        }
                        prikeySet = prikeySet[0..-2]
                        //log.info prikeySet
                        testRunner.testCase.setPropertyValue("prikeySet",prikeySet);
                        //def teststep = testRunner.testCase.testSteps["Run TestCase-查询源地址私钥"]
                        //def cont = new MockTestRunContext(testRunner,teststep)
                        //testRunner.setMockRunContext(cont)
                        //cont.setProperty("地址",地址列表[0])
                        //def result = testRunner.runTestStep(teststep)
                        //log.info result.getMessageExchanges()[0].getRequestContent()
                        //log.info cont.getProperty("地址")

                        //log.info result.getMessageExchanges()[0].getResponseContent()

                        //def testStep = TEST_SUITE.getTestCaseByName('TestCase').getTestStepByName('Login')
                        //
                        //def testStepContext = new WsdlTestRunContext(testStep)
                        //def result = testStep.run(testRunner, testStepContext)
                        //
                        //log.info result.responseContent
                        //testRunner.runTestStepByname("Groovy Script")
                        //testSteps["Input"]
                        //return 地址列表
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询源地址私钥" id="44f2e3f7-0f60-4ae2-9422-47410702e5a6"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>1d15d426-b36b-41ae-9384-f36209bfa9b1</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>mgBkc5VHWrkx6Rri875AXrTGK1iaC4KaYF</con:value>
                        </con:property>
                        <con:property>
                            <con:name>私钥</con:name>
                            <con:value>cVsHL8rWM7wpvMKUEiH1MEj2xSxNbm4xAgHakRdRDDRNiepEBBB8</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>私钥</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="c3dabcae-45f4-4dcc-a35b-c419100cd46a"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType xsi:nil="true"/>
                        <con:sourceStep xsi:nil="true"/>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:pubkey[1]
                        </con:sourcePath>
                        <con:targetType>prikeySet</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>地址列表</con:name>
                    <con:value>muFvcH8kKNZWNZVoz7PGCE3UyeiXnzjzKi,mgBkc5VHWrkx6Rri875AXrTGK1iaC4KaYF</con:value>
                </con:property>
                <con:property>
                    <con:name>prikeySet</con:name>
                    <con:value>
                        cTTxdheo42USoiaJfZTZqv4ZZuJ67RkLUzq9DXVnLLX88LZUR4c6,cVsHL8rWM7wpvMKUEiH1MEj2xSxNbm4xAgHakRdRDDRNiepEBBB8
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>30ba691e-2d37-4558-81a7-5880eac65ac9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="c28405b3-4d67-4eef-97a6-260037d43b56" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="转账" searchProperties="true">
            <con:settings>
                <con:setting id="7516b0c5-bef3-482d-8017-0ef38591602ffileName">转账</con:setting>
                <con:setting id="bd81b5d3-bd13-4f8a-9e57-f8f757c87058fileName">转账</con:setting>
                <con:setting id="c28405b3-4d67-4eef-97a6-260037d43b56fileName">转账</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-解锁钱包" id="0a374756-ff35-405c-9f7a-c8a8200d0a79">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>c6adf25f-901b-4378-98d5-bdaa2b697f44</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>passphrase</con:name>
                            <con:value>pwd</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties/>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询源地址私钥" id="dd272b0a-7d43-45d3-9d99-30e230c26937">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>1d15d426-b36b-41ae-9384-f36209bfa9b1</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${#TestCase#源地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>私钥</con:name>
                            <con:value>cU89rSnpY3gtkAFEtRXkby5kFfhDzaoRiidwizWfyCumMoVw9G1X</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>私钥</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询UTXO" id="51f52239-e90b-46d1-8d40-a591c24d2dc5">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>9aad83b1-1bb2-4b2a-a610-f307cb2cde96</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestCase#源地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>0.16594311</con:value>
                        </con:property>
                        <con:property>
                            <con:name>redeemScript</con:name>
                            <con:value xsi:nil="true"/>
                        </con:property>
                        <con:property>
                            <con:name>scriptPubkey</con:name>
                            <con:value>76a9148580bc89240bf130a841491c27b651978f8c9d7688ac</con:value>
                        </con:property>
                        <con:property>
                            <con:name>txid</con:name>
                            <con:value>${#TestCase#voutTxid}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>voutindex</con:name>
                            <con:value>1</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                        <con:entry>scriptPubkey</con:entry>
                        <con:entry>voutindex</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="找零余额计算" id="3e9b6555-346e-49f1-9610-783967be2f0f">
                <con:settings/>
                <con:config>
                    <script>def 转账金额 = context.expand( '${#TestCase#金额}' ).toBigDecimal()
                        def 当前余额 = context.expand( '${Run TestCase-查询UTXO#amount}' ).toBigDecimal()

                        return 当前余额 - 转账金额 - 0.0000500
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-创建交易" id="61655d8a-eda7-42f7-b44d-935840173b2f">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>3f96958e-1d96-4462-a5f2-d653373134ea</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>目的地址</con:name>
                            <con:value>${#TestCase#目的地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>金额</con:name>
                            <con:value>${#TestCase#金额}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value>
                                0200000001974d56b40fdcc185dedf5af1d67b56855b9632a843a978cc15868943e38e849a0100000000ffffffff02a08601000000000017a91444de8ad785149e6c87f85239bdb4a4b46aeeb2d0875f9bfb00000000001976a914b058ba58f2363cea5bed01794a1910df70e0dda388ac00000000
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>txid</con:name>
                            <con:value>${#TestCase#voutTxid}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>vout</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>redeemScript</con:name>
                            <con:value>${Run TestCase-查询UTXO#redeemScript}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>scriptPubKey</con:name>
                            <con:value>${Run TestCase-查询UTXO#scriptPubkey}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>源地址</con:name>
                            <con:value>${#TestCase#源地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>找零余额</con:name>
                            <con:value>${找零余额计算#result}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-签名交易" id="048596b5-7c13-4c05-b2e5-a96586863c51">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>461d9b70-7063-41fe-9571-d7170a2668cf</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>源地址私钥</con:name>
                            <con:value>${Run TestCase-查询源地址私钥#私钥}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>目的地址</con:name>
                            <con:value>${#TestCase#目的地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>金额</con:name>
                            <con:value>${#TestCase#金额}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value/>
                        </con:property>
                        <con:property>
                            <con:name>rawTxHash</con:name>
                            <con:value>${Run TestCase-创建交易#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>txid</con:name>
                            <con:value>${Run TestCase-查询UTXO#txid}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>vout</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>redeemScript</con:name>
                            <con:value>${Run TestCase-查询UTXO#redeemScript}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>scriptPubKey</con:name>
                            <con:value>${Run TestCase-查询UTXO#scriptPubkey}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-发送交易上链" id="d2fff322-b82a-4c1a-975b-dedcc564c77a">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>988ae1e8-c523-4732-868e-2d11453dd622</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>signedHash</con:name>
                            <con:value>
                                010000000271d06d992dada33335079711e4b0ed41f192fcf3793d93145bb5e6f03ad4d86b000000009200483045022100d9d6ad43a873e1498b5c6d687be86358a322a8dbdc5e35d04dbd957b22f1394c022013779dbe94b28f001f792bcb84b20dcd32cde450dd917054702f7e7ade6877d2014730440220226d0c3a46808e6318cfd17c0c50364dec0e68c98d2821bf43e4b132aed70a7c02206421683556fd2b587ac22667d2783f78dfa292ec7775374661da82c9d2b2550b01ffffffff939886b9cddf6370941beab4849cfcae077bbac1d5a60135f9cae8d01f3585f8000000009300483045022100cb7fe0e8adc925a05980b74ffaf339f634b17e1b7283e857e9a7a5bde59e9b0e02205d8101fac8101536bcc2d85dc455a7b7452296c157a90f9064723b90d3ceefe001483045022100c01eab12f57adfc7efaaf0de964db97850a37d39e9ef55eef639998ea6e6af7602207fb26712cef6a861ce2e5dc4e2226ce90750c00b9bf7b787ddfeb441e7b1bd9601ffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value/>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="ba5b02d3-c1cd-4413-9f6d-8a0145938d87">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>result</con:sourceType>
                        <con:sourceStep>Run TestCase-发送交易上链</con:sourceStep>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>voutindex</con:name>
                        <con:sourceType>voutindex</con:sourceType>
                        <con:sourceStep>Run TestCase-查询UTXO</con:sourceStep>
                        <con:targetType>voutindex</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>源地址</con:name>
                    <con:value>n3LmVYWecvYrSfsBqKXiSYfukgjhKyt627</con:value>
                </con:property>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value>2MyXNXqnubkaaTuUKvLcfuDKwcfPsvnJYYh</con:value>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value>0.001</con:value>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                </con:property>
                <con:property>
                    <con:name>voutTxid</con:name>
                    <con:value>9a848ee343898615cc78a943a832965b85567bd6f15adfde85c1dc0fb4564d97</con:value>
                </con:property>
                <con:property>
                    <con:name>voutindex</con:name>
                    <con:value>1</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>99ae7b30-1e04-4d19-b2b7-576a57ec0e59</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>0201aa4d-03aa-4b4f-9613-6a42a4d8cedf</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>fa5bdf09-bc42-498e-a504-9f456ce56385</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>31297265-f7e7-41f5-b755-4f693a515e6a</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>be7e731d-d417-4716-8956-d7c01be34294</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="f8975dbf-40ed-485a-b733-8f4539209ee2" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="importPrikey" searchProperties="true">
            <con:settings>
                <con:setting id="864fc531-229e-404a-8e30-bce6d7bbd366fileName">getaccount</con:setting>
                <con:setting id="77a36727-07b8-4b15-8351-c980f65ac644fileName">getnewaddress</con:setting>
                <con:setting id="621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00fileName">getnewaddress</con:setting>
                <con:setting id="ba0954a4-481a-4893-b370-cf0b32f1f1f3fileName">getnewaddress</con:setting>
                <con:setting id="f8975dbf-40ed-485a-b733-8f4539209ee2fileName">importPrikey</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="查询" id="a058cd8f-c4ea-4c53-9b9a-f9f04168df25">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d5470198-002e-4955-9671-fc4f93b0ee16" name="查询"
                            postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://${#Project#LTC同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "importprivkey",
                        "params": [
                        "${#TestCase#wif}","testing",false
                        ],
                        "id": "yctest"
                        }
                    </con:request>
                    <con:assertion type="JsonPath Match" id="69bb6037-4c10-4356-bef3-5d8d7d4cb95b"
                                   name="Match content of [error]">
                        <con:configuration>
                            <path>$.error</path>
                            <content>null</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:username>test</con:username>
                        <con:password>test</con:password>
                        <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
                        <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
                        <con:authType>Global HTTP Settings</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="0ae2359c-a878-430e-a1d5-f3ee7c554db1">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>address</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType xsi:nil="true"/>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>address</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>查询</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType xsi:nil="true"/>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>wif</con:name>
                    <con:value>cSK5UZ6eKgqaabgRPFAaT8xQ4TkcEXeUvr9262xNtiL2Ln1SbDah</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
    </con:testSuite>
    <con:testSuite id="6003d0f4-7a7a-4624-ba81-32d16fbe9c64" name="ETH-RPC接口列表" disabled="true">
        <con:settings>
            <con:setting id="08ee1b00-0e99-4c9f-b924-866226589ef7fileName">ontology-RPC接口列表</con:setting>
            <con:setting id="3e2c7d29-9553-4d42-aeaf-bb35833aa1cdfileName">ETH-RPC接口列表</con:setting>
            <con:setting id="6003d0f4-7a7a-4624-ba81-32d16fbe9c64fileName">ETH-RPC接口列表</con:setting>
        </con:settings>
        <con:savedRecentRuns>1</con:savedRecentRuns>
        <con:runType>SEQUENTIAL</con:runType>
        <con:properties>
            <con:property>
                <con:name>amount</con:name>
                <con:value>12000000000000000000</con:value>
            </con:property>
            <con:property>
                <con:name>password</con:name>
                <con:value>password</con:value>
            </con:property>
        </con:properties>
        <con:reportParameters/>
        <con:testCase id="f89dd767-7f66-4acd-9bcb-d219efe0b86a" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="eth_sendTransaction" searchProperties="true">
            <con:settings>
                <con:setting id="7451b6fb-02f6-4fab-9801-84c94489dd84fileName">getrawtransaction</con:setting>
                <con:setting id="d6870cc4-3c50-4933-9127-9c6f7887d077fileName">getmempooltxstate</con:setting>
                <con:setting id="f785dc04-0cfc-41e9-a746-11c14871e234fileName">getsmartcodeevent1</con:setting>
                <con:setting id="fdb9c863-2151-43fb-86d5-5352f52103effileName">getsmartcodeevent</con:setting>
                <con:setting id="54d56ef5-6ed5-4477-b311-5bb2a2d8c6cffileName">eth_getBalance</con:setting>
                <con:setting id="ddd6b561-e910-4528-b96e-e895c08e47c0fileName">eth_sendTransaction</con:setting>
                <con:setting id="f89dd767-7f66-4acd-9bcb-d219efe0b86afileName">eth_sendTransaction</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="httprequest" name="eth_sendTransaction" id="8dc8efc6-f401-4a93-ab0f-20cf41790339">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d71c12dd-961e-4c51-b172-2864888a9752"
                            name="eth_sendTransaction" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>http://${#Project#ETH同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "eth_sendTransaction",
                        "params": [
                        {
                        "from": "${#TestCase#源地址}",
                        "to": "${#TestCase#目的地址}",
                        "gas": "${#TestCase#gas}",
                        "gasPrice": "${#TestCase#gasprice}",
                        "value": "${#TestCase#金额}",
                        "nonce":"${#TestCase#nonce}"
                        }
                        ],
                        "id": 67
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="Copy of eth_sendTransaction"
                          id="1304d306-3a19-4ed3-94b1-023cb3298ff3" disabled="true">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d71c12dd-961e-4c51-b172-2864888a9752"
                            name="Copy of eth_sendTransaction" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>http://${#Project#ETH同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "eth_sendTransaction",
                        "params": [
                        {
                        "from": "0x3b5ca8662bc7dc319c03dcaae434664bbbf073bc",
                        "to": "0x61Ef5a68DddD4f241B515E690f7F291D8c6Db483",
                        "gas": "0x76c0",
                        "gasPrice": "0x9184e72a000",
                        "value": "0x9184e72a",
                        "nonce":"0x0"
                        }
                        ],
                        "id": 67
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>源地址</con:name>
                    <con:value>0x3b5ca8662bc7dc319c03dcaae434664bbbf073bc</con:value>
                </con:property>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value>0x61Ef5a68DddD4f241B515E690f7F291D8c6Db483</con:value>
                </con:property>
                <con:property>
                    <con:name>gas</con:name>
                    <con:value>0x76c0</con:value>
                </con:property>
                <con:property>
                    <con:name>gasprice</con:name>
                    <con:value>0x9184e72a000</con:value>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value>0x9184e72a</con:value>
                </con:property>
                <con:property>
                    <con:name>data</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>nonce</con:name>
                    <con:value>0x0</con:value>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="1bd742ae-dacc-45b2-ba42-ff9d4a2b4b7f" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="eth_syncing" searchProperties="true">
            <con:settings>
                <con:setting id="7451b6fb-02f6-4fab-9801-84c94489dd84fileName">getrawtransaction</con:setting>
                <con:setting id="d6870cc4-3c50-4933-9127-9c6f7887d077fileName">getmempooltxstate</con:setting>
                <con:setting id="f785dc04-0cfc-41e9-a746-11c14871e234fileName">getsmartcodeevent1</con:setting>
                <con:setting id="fdb9c863-2151-43fb-86d5-5352f52103effileName">getsmartcodeevent</con:setting>
                <con:setting id="1bd742ae-dacc-45b2-ba42-ff9d4a2b4b7ffileName">eth_syncing</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="httprequest" name="eth_syncing" id="bc10227f-a52f-49d5-adb4-a5c45c311645">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d71c12dd-961e-4c51-b172-2864888a9752"
                            name="eth_syncing" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>http://${#Project#ETH同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc":"2.0",
                        "method":"eth_syncing",
                        "params":[

                        ],
                        "id":67
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="xfer" id="af8a42a3-4e3c-4fba-ba10-1fe27b30054f">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>eth_syncing</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/api/v1/transaction';
                            //ns1:Response[1]/ns1:result[1]/ns1:TxHash[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>status</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>eth_syncing</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/api/v1/transaction';
                            //ns1:Response[1]/ns1:result[1]/ns1:State[1]
                        </con:sourcePath>
                        <con:targetType>status</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>交易哈希</con:name>
                    <con:value>f5d6e464b27cf68fc677eb4aec3d382543679087c474bf2e166a178897c23009</con:value>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                </con:property>
                <con:property>
                    <con:name>status</con:name>
                    <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="5562fac0-6820-4eaa-b081-38a6e5f306ef" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="eth_blockNumber" searchProperties="true">
            <con:settings>
                <con:setting id="7451b6fb-02f6-4fab-9801-84c94489dd84fileName">getrawtransaction</con:setting>
                <con:setting id="d6870cc4-3c50-4933-9127-9c6f7887d077fileName">getmempooltxstate</con:setting>
                <con:setting id="f785dc04-0cfc-41e9-a746-11c14871e234fileName">getsmartcodeevent1</con:setting>
                <con:setting id="fdb9c863-2151-43fb-86d5-5352f52103effileName">getsmartcodeevent</con:setting>
                <con:setting id="495d826a-6f3f-4af6-bc02-a5ab98c61334fileName">eth_blockNumber</con:setting>
                <con:setting id="5562fac0-6820-4eaa-b081-38a6e5f306effileName">eth_blockNumber</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="eth_blockNumber" id="4ad8f55f-bb0e-43ff-8d07-98776e76ad90">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d71c12dd-961e-4c51-b172-2864888a9752"
                            name="eth_blockNumber" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>http://${#Project#ETH同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc":"2.0",
                        "method":"eth_blockNumber",
                        "params":[

                        ],
                        "id":67
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="xfer" id="f8a99758-3691-454f-bd30-00aa17154623">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>eth_blockNumber</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/api/v1/transaction';
                            //ns1:Response[1]/ns1:result[1]/ns1:TxHash[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>status</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>eth_blockNumber</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/api/v1/transaction';
                            //ns1:Response[1]/ns1:result[1]/ns1:State[1]
                        </con:sourcePath>
                        <con:targetType>status</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>交易哈希</con:name>
                    <con:value>f5d6e464b27cf68fc677eb4aec3d382543679087c474bf2e166a178897c23009</con:value>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value>
                        00d149fd878df401000000000000204e00000000000031e00cb352bcd788e8bd3b3da1aa9ed64a6a0d036e00c66b6a14ed21edcb9ccc7d76a71225ba5746f8df81cb19f1c86a14dadd20c0598dc556ecbdda0efedf18cb9dfc8310c86a51c86c51c1087472616e736665721400000000000000000000000000000000000000010068164f6e746f6c6f67792e4e61746976652e496e766f6b650002414025c9a6c500b3d1bbd32fa9036c8a7611f54f27ad133a4d5718b896b7a1c7b1b180a77f8a9b9fafe2e7235985c14f2761bf817571d6ee2f272d1d3053a549ef2a23210222e545baca6d4347eed604276aed0c35d5c7b2d2ca68e8a39a8ad83a126deaccac8240e8b376114cd599b759ef77c8989273e72e9dba6db7df5f74d80ac81bf8eb6f6093d29172d3f89ec213ffcc00102901ceee99e57a1d7c5c21a37d86fcc069bbeb40d93f927b4f082f2f673c728870ef43c628ad350e404a497aa776a0847c7d80f2f27e7d90cfe7536610273944dcfd315759bae11d4bcec4ad726fc380ddcab00947522102327a149dcf8449ee66204bd0f58f3abf5b65a30e6cf82b778ff93b450cace2f02102eb6d75369e1c86c4fc2ffb0daff79e08ce848cb13b7dae4343f7a403d47ffa8652ae
                    </con:value>
                </con:property>
                <con:property>
                    <con:name>status</con:name>
                    <con:value>1</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="55fd7691-c844-49bd-8557-0eca3a87a187" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="eth_sendRawTransaction" searchProperties="true">
            <con:settings>
                <con:setting id="7451b6fb-02f6-4fab-9801-84c94489dd84fileName">getrawtransaction</con:setting>
                <con:setting id="d6870cc4-3c50-4933-9127-9c6f7887d077fileName">getmempooltxstate</con:setting>
                <con:setting id="f785dc04-0cfc-41e9-a746-11c14871e234fileName">getsmartcodeevent1</con:setting>
                <con:setting id="fdb9c863-2151-43fb-86d5-5352f52103effileName">getsmartcodeevent</con:setting>
                <con:setting id="54d56ef5-6ed5-4477-b311-5bb2a2d8c6cffileName">eth_getBalance</con:setting>
                <con:setting id="5232ea6d-b402-4159-be28-1f8e78f8a1b2fileName">eth_sendRawTransaction</con:setting>
                <con:setting id="55fd7691-c844-49bd-8557-0eca3a87a187fileName">eth_sendRawTransaction</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="eth_sendRawTransaction" id="9bc186d0-7970-4381-b651-87de8a00b6d7">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d71c12dd-961e-4c51-b172-2864888a9752"
                            name="eth_sendRawTransaction" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>http://${#Project#ETH同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "eth_sendTransaction",
                        "params": [
                        {
                        "data": "0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"
                        }
                        ],
                        "id": 67
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="转换为十进制" id="a4cca553-d7dc-4aa7-a518-844e9c147952">
                <con:settings/>
                <con:config>
                    <script>def 十六进制 = context.expand(
                        '${eth_sendRawTransaction#ResponseAsXml#declare namespace ns1=\'http://42.159.153.121/\'; //ns1:Response[1]/ns1:result[1]}'
                        )
                        //def bty = "a688906bd8b00000".decodeHex()
                        def str = 十六进制.split("0x")
                        //log.info str[1]
                        //def binaryString = "a688906bd8b00000"
                        BigInteger number = new BigInteger(str[1] , 16);
                        log.info number.toString()
                        testRunner.testCase.setPropertyValue("amount",number.toString());
                        //return number
                        //int intValue = Integer.parseInt(binaryString, 2)
                        //def d = Long.valueOf(binaryString,16)
                        //log.info d
                        //log.info iFactor
                        //def 十进制 = decodeHex
                    </script>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>源地址</con:name>
                    <con:value>0xe97e0D9532975DB09CDF98846f4C6a88dB338d07</con:value>
                </con:property>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value>0x61Ef5a68DddD4f241B515E690f7F291D8c6Db483</con:value>
                </con:property>
                <con:property>
                    <con:name>gas</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>gasprice</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value>1</con:value>
                </con:property>
                <con:property>
                    <con:name>data</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>nonce</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="4c446ce8-a5ab-42c2-8ef3-dbd2b2ee6ae1" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="eth_getBalance" searchProperties="true">
            <con:settings>
                <con:setting id="7451b6fb-02f6-4fab-9801-84c94489dd84fileName">getrawtransaction</con:setting>
                <con:setting id="d6870cc4-3c50-4933-9127-9c6f7887d077fileName">getmempooltxstate</con:setting>
                <con:setting id="f785dc04-0cfc-41e9-a746-11c14871e234fileName">getsmartcodeevent1</con:setting>
                <con:setting id="fdb9c863-2151-43fb-86d5-5352f52103effileName">getsmartcodeevent</con:setting>
                <con:setting id="54d56ef5-6ed5-4477-b311-5bb2a2d8c6cffileName">eth_getBalance</con:setting>
                <con:setting id="4c446ce8-a5ab-42c2-8ef3-dbd2b2ee6ae1fileName">eth_getBalance</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="eth_getBalance" id="69acbb7d-005b-42d9-8acc-5886d8b10209">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d71c12dd-961e-4c51-b172-2864888a9752"
                            name="eth_getBalance" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>http://${#Project#ETH同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc":"2.0",
                        "method":"eth_getBalance",
                        "params":[
                        "${#TestCase#address}"
                        ],
                        "id":67
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="xfer" id="4c52811b-9268-4d06-99f5-293e3cad5856">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>amount</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>eth_getBalance</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>amount</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>address</con:name>
                    <con:value>0x3b5ca8662bc7dc319c03dcaae434664bbbf073bc</con:value>
                </con:property>
                <con:property>
                    <con:name>amount</con:name>
                    <con:value>0x83d6c7aab6360000</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="3694c62e-9881-4adb-b250-1f3b9def5838" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="eth_getBlockByHash" searchProperties="true">
            <con:settings>
                <con:setting id="7451b6fb-02f6-4fab-9801-84c94489dd84fileName">getrawtransaction</con:setting>
                <con:setting id="d6870cc4-3c50-4933-9127-9c6f7887d077fileName">getmempooltxstate</con:setting>
                <con:setting id="f785dc04-0cfc-41e9-a746-11c14871e234fileName">getsmartcodeevent1</con:setting>
                <con:setting id="fdb9c863-2151-43fb-86d5-5352f52103effileName">getsmartcodeevent</con:setting>
                <con:setting id="54d56ef5-6ed5-4477-b311-5bb2a2d8c6cffileName">eth_getBalance</con:setting>
                <con:setting id="a077bf45-5cdf-478a-95bc-477d14603583fileName">eth_getBlockByHash</con:setting>
                <con:setting id="3694c62e-9881-4adb-b250-1f3b9def5838fileName">eth_getBlockByHash</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="eth_getBlockByHash" id="a8b19352-ffa5-4844-9bc5-c5591ed43ca5">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d71c12dd-961e-4c51-b172-2864888a9752"
                            name="eth_getBlockByHash" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>http://${#Project#ETH同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "eth_getBlockByHash",
                        "params":[
                        "0x082d9d40fc4db837a2917e93999ef0999430992a4e580dde52f74b97e21d80ed",
                        true
                        ],
                        "id": 67
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>源地址</con:name>
                    <con:value>0xe97e0D9532975DB09CDF98846f4C6a88dB338d07</con:value>
                </con:property>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value>0x61Ef5a68DddD4f241B515E690f7F291D8c6Db483</con:value>
                </con:property>
                <con:property>
                    <con:name>gas</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>gasprice</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value>1</con:value>
                </con:property>
                <con:property>
                    <con:name>data</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>nonce</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="aea2f5bb-2f6a-4602-b166-b78a4aea0f95" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="eth_getTransactionByHash" searchProperties="true">
            <con:settings>
                <con:setting id="7451b6fb-02f6-4fab-9801-84c94489dd84fileName">getrawtransaction</con:setting>
                <con:setting id="d6870cc4-3c50-4933-9127-9c6f7887d077fileName">getmempooltxstate</con:setting>
                <con:setting id="f785dc04-0cfc-41e9-a746-11c14871e234fileName">getsmartcodeevent1</con:setting>
                <con:setting id="fdb9c863-2151-43fb-86d5-5352f52103effileName">getsmartcodeevent</con:setting>
                <con:setting id="54d56ef5-6ed5-4477-b311-5bb2a2d8c6cffileName">eth_getBalance</con:setting>
                <con:setting id="2a307ccf-cd33-4d54-b89d-608a7be43370fileName">eth_getTransactionByHash</con:setting>
                <con:setting id="aea2f5bb-2f6a-4602-b166-b78a4aea0f95fileName">eth_getTransactionByHash</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="eth_getTransactionByHash" id="b139a126-64b6-40c4-a948-e036943c425a">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d71c12dd-961e-4c51-b172-2864888a9752"
                            name="eth_getTransactionByHash" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>http://${#Project#ETH同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "eth_getTransactionByHash",
                        "params":[
                        "${#TestCase#hash}"
                        ],
                        "id": 67
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="8795c3d1-39aa-4a55-9b55-47ea4c2c566f"
                                   name="Check for existence of [result]">
                        <con:configuration>
                            <path>$.result</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="15068c54-753c-4efe-88ab-69687f97dde1">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>eth_getTransactionByHash</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:value[1]
                        </con:sourcePath>
                        <con:targetType>value</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>gasLimit</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>eth_getTransactionByHash</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:gas[1]
                        </con:sourcePath>
                        <con:targetType>gasLimit</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>hash</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>value</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>gasLimit</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="6494ef3c-4e17-45cb-9e22-caa26a524c0b" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="eth_getTransactionCount" searchProperties="true">
            <con:settings>
                <con:setting id="7451b6fb-02f6-4fab-9801-84c94489dd84fileName">getrawtransaction</con:setting>
                <con:setting id="d6870cc4-3c50-4933-9127-9c6f7887d077fileName">getmempooltxstate</con:setting>
                <con:setting id="f785dc04-0cfc-41e9-a746-11c14871e234fileName">getsmartcodeevent1</con:setting>
                <con:setting id="fdb9c863-2151-43fb-86d5-5352f52103effileName">getsmartcodeevent</con:setting>
                <con:setting id="76eab3fb-e407-4890-9ea4-3bbeace550c2fileName">eth_getTransactionCount</con:setting>
                <con:setting id="6494ef3c-4e17-45cb-9e22-caa26a524c0bfileName">eth_getTransactionCount</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="eth_getTransactionCount" id="e3a6ab3d-e9fe-4874-891c-f7d6b821068f">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d71c12dd-961e-4c51-b172-2864888a9752"
                            name="eth_getTransactionCount" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>http://${#Project#ETH同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc":"2.0",
                        "method":"eth_getTransactionCount",
                        "params":["${#TestCase#address}","latest"],
                        "id":67
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="xfer" id="7207a4f5-973f-491c-b29f-3ea596528fc4">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>eth_getTransactionCount</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>result</con:name>
                    <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                </con:property>
                <con:property>
                    <con:name>address</con:name>
                    <con:value>0x74135F9cf2219A377385E8C962982e0764b68a0F</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="02ea55b5-22ae-41f2-a0be-094a0a045a7e" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="personal_unlockAccount" searchProperties="true">
            <con:settings>
                <con:setting id="7451b6fb-02f6-4fab-9801-84c94489dd84fileName">getrawtransaction</con:setting>
                <con:setting id="d6870cc4-3c50-4933-9127-9c6f7887d077fileName">getmempooltxstate</con:setting>
                <con:setting id="f785dc04-0cfc-41e9-a746-11c14871e234fileName">getsmartcodeevent1</con:setting>
                <con:setting id="fdb9c863-2151-43fb-86d5-5352f52103effileName">getsmartcodeevent</con:setting>
                <con:setting id="2ebe258d-75fd-494b-a7cd-417e2b853427fileName">personal_unlockAccount</con:setting>
                <con:setting id="02ea55b5-22ae-41f2-a0be-094a0a045a7efileName">personal_unlockAccount</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="personal_unlockAccount" id="c7cda058-f755-45a3-8f85-e8504aeb0702">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d71c12dd-961e-4c51-b172-2864888a9752"
                            name="personal_unlockAccount" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>http://${#Project#ETH同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "personal_unlockAccount",
                        "params": [
                        "${#TestCase#address}",
                        "${#TestSuite#password}",
                        null
                        ],
                        "id": 67
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="xfer" id="e5baded4-bd94-4ac2-a5aa-96f38decb237">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>personal_unlockAccount</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>result</con:name>
                    <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value>
                </con:property>
                <con:property>
                    <con:name>address</con:name>
                    <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                        0x3b5ca8662bc7dc319c03dcaae434664bbbf073bc
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="c64577cd-30f3-4a50-9e15-9c035862f4ff" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="personal_newAccount" searchProperties="true">
            <con:settings>
                <con:setting id="7451b6fb-02f6-4fab-9801-84c94489dd84fileName">getrawtransaction</con:setting>
                <con:setting id="d6870cc4-3c50-4933-9127-9c6f7887d077fileName">getmempooltxstate</con:setting>
                <con:setting id="f785dc04-0cfc-41e9-a746-11c14871e234fileName">getsmartcodeevent1</con:setting>
                <con:setting id="fdb9c863-2151-43fb-86d5-5352f52103effileName">getsmartcodeevent</con:setting>
                <con:setting id="c40d90a5-e088-48d2-9478-7c02fd94958cfileName">personal_newAccount</con:setting>
                <con:setting id="c64577cd-30f3-4a50-9e15-9c035862f4fffileName">personal_newAccount</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="personal_newAccount" id="a44e5647-bb1f-469a-8e1a-c2d9d4bb8556">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d71c12dd-961e-4c51-b172-2864888a9752"
                            name="personal_newAccount" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>http://${#Project#ETH同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "personal_newAccount",
                        "params": [
                        "${#TestSuite#password}"
                        ],
                        "id": 67
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="xfer" id="e3e63976-e047-4f1b-ad20-ebd1affa9d4e">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>personal_newAccount</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>result</con:name>
                    <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                        0x3b5ca8662bc7dc319c03dcaae434664bbbf073bc
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="73ef8fe3-139c-4e57-b608-11a65a810114" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="eth_getTransactionReceipt" searchProperties="true">
            <con:settings>
                <con:setting id="7451b6fb-02f6-4fab-9801-84c94489dd84fileName">getrawtransaction</con:setting>
                <con:setting id="d6870cc4-3c50-4933-9127-9c6f7887d077fileName">getmempooltxstate</con:setting>
                <con:setting id="f785dc04-0cfc-41e9-a746-11c14871e234fileName">getsmartcodeevent1</con:setting>
                <con:setting id="fdb9c863-2151-43fb-86d5-5352f52103effileName">getsmartcodeevent</con:setting>
                <con:setting id="54d56ef5-6ed5-4477-b311-5bb2a2d8c6cffileName">eth_getBalance</con:setting>
                <con:setting id="2a307ccf-cd33-4d54-b89d-608a7be43370fileName">eth_getTransactionByHash</con:setting>
                <con:setting id="09762c81-344d-4bf6-a911-03939373e82afileName">eth_getTransactionReceipt</con:setting>
                <con:setting id="73ef8fe3-139c-4e57-b608-11a65a810114fileName">eth_getTransactionReceipt</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="eth_getTransactionReceipt" id="a2fc988e-d487-4065-b6c4-a12db4418857">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d71c12dd-961e-4c51-b172-2864888a9752"
                            name="eth_getTransactionReceipt" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>http://${#Project#ETH同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "eth_getTransactionReceipt",
                        "params":[
                        "${#TestCase#hash}"
                        ],
                        "id": 67
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="8795c3d1-39aa-4a55-9b55-47ea4c2c566f"
                                   name="Check for existence of [result]">
                        <con:configuration>
                            <path>$.result</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="0c81212e-4083-4b5e-8fde-e8d3f500e69c">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>cumulativeGasUsed</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>eth_getTransactionReceipt</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:cumulativeGasUsed[1]
                        </con:sourcePath>
                        <con:targetType>cumulativeGasUsed</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>status</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>eth_getTransactionReceipt</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:status[1]
                        </con:sourcePath>
                        <con:targetType>status</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>gasUsed</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>eth_getTransactionReceipt</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]/ns1:gasUsed[1]
                        </con:sourcePath>
                        <con:targetType>gasUsed</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>status</con:name>
                    <con:value>0x1</con:value>
                </con:property>
                <con:property>
                    <con:name>hash</con:name>
                    <con:value>0x22e937a587ceaa41d6c50c3df25804b2868b455626cc1afe2cb2beb191f06d66</con:value>
                </con:property>
                <con:property>
                    <con:name>cumulativeGasUsed</con:name>
                    <con:value>0x209ce0</con:value>
                </con:property>
                <con:property>
                    <con:name>gasUsed</con:name>
                    <con:value>0x1a186</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="3af5f2ce-4e09-49ec-8123-1071cda9fc6c" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="eth_gasPrice" searchProperties="true">
            <con:settings>
                <con:setting id="7451b6fb-02f6-4fab-9801-84c94489dd84fileName">getrawtransaction</con:setting>
                <con:setting id="d6870cc4-3c50-4933-9127-9c6f7887d077fileName">getmempooltxstate</con:setting>
                <con:setting id="f785dc04-0cfc-41e9-a746-11c14871e234fileName">getsmartcodeevent1</con:setting>
                <con:setting id="fdb9c863-2151-43fb-86d5-5352f52103effileName">getsmartcodeevent</con:setting>
                <con:setting id="53fe7df7-f0b7-40bb-90c6-d5dd5b446faefileName">eth_gasPrice</con:setting>
                <con:setting id="3af5f2ce-4e09-49ec-8123-1071cda9fc6cfileName">eth_gasPrice</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="eth_gasPrice" id="b1732a01-5702-4e8c-8128-9ff40ccad9db">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d71c12dd-961e-4c51-b172-2864888a9752"
                            name="eth_gasPrice" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>http://${#Project#ETH同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc":"2.0",
                        "method":"eth_gasPrice",
                        "params":[

                        ],
                        "id":67
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="xfer" id="757c6e6f-312f-4254-8925-f75b8a35f464">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>result</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>eth_gasPrice</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>result</con:name>
                    <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="c24bc796-bc1b-4aeb-90e8-c256bcc0d209" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="eth转账" searchProperties="true">
            <con:settings>
                <con:setting id="7451b6fb-02f6-4fab-9801-84c94489dd84fileName">getrawtransaction</con:setting>
                <con:setting id="d6870cc4-3c50-4933-9127-9c6f7887d077fileName">getmempooltxstate</con:setting>
                <con:setting id="f785dc04-0cfc-41e9-a746-11c14871e234fileName">getsmartcodeevent1</con:setting>
                <con:setting id="fdb9c863-2151-43fb-86d5-5352f52103effileName">getsmartcodeevent</con:setting>
                <con:setting id="54d56ef5-6ed5-4477-b311-5bb2a2d8c6cffileName">eth_getBalance</con:setting>
                <con:setting id="ddd6b561-e910-4528-b96e-e895c08e47c0fileName">eth_sendTransaction</con:setting>
                <con:setting id="2f474608-96e9-458d-9dd4-5a2597c1b509fileName">eth转账</con:setting>
                <con:setting id="c24bc796-bc1b-4aeb-90e8-c256bcc0d209fileName">eth转账</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-将gas转化成十六进制" id="2dba0b98-7b31-4677-9057-acff7bef6a2e">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>f1caca18-7f04-44a2-a992-7e9abae1f9a8</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>input</con:name>
                            <con:value>${#TestCase#gas}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>output</con:name>
                            <con:value>0xf4240</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>output</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-将gasPrice转换成16进制"
                          id="fc765834-af38-4c85-b441-612c68f507a9">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>f1caca18-7f04-44a2-a992-7e9abae1f9a8</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>input</con:name>
                            <con:value>${#TestCase#gasprice}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>output</con:name>
                            <con:value>0xf4240</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>output</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-将amount转换成16进制"
                          id="a4a2215a-edd8-4f00-9956-9d7aab14e436">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>f1caca18-7f04-44a2-a992-7e9abae1f9a8</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>input</con:name>
                            <con:value>${#TestCase#金额}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>output</con:name>
                            <con:value>0x2386f26fc10000</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>output</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询源地址nonce" id="0c07616e-caf7-49e5-b474-0cf1a64864d6">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>76eab3fb-e407-4890-9ea4-3bbeace550c2</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value>0x1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestCase#源地址}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-解锁账户" id="9c2425dc-8501-4113-94cb-d37568607425">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>2ebe258d-75fd-494b-a7cd-417e2b853427</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value>true</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestCase#源地址}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言解锁成功" id="9d23e704-60be-4ca0-a0df-c3b076a55100">
                <con:settings/>
                <con:config>
                    <script>def result = context.expand( '${Run TestCase-解锁账户#result}' )
                        assert result == "true"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="eth_sendTransaction" id="c8b65616-1b01-42b8-86dc-9c1c124cf859">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="d71c12dd-961e-4c51-b172-2864888a9752"
                            name="eth_sendTransaction" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding/>
                    <con:endpoint>http://${#Project#ETH同步节点地址}</con:endpoint>
                    <con:request>{
                        "jsonrpc": "2.0",
                        "method": "eth_sendTransaction",
                        "params": [
                        {
                        "from": "${#TestCase#源地址}",
                        "to": "${#TestCase#目的地址}",
                        "gas": "${Run TestCase-将gas转化成十六进制#output}",
                        "gasPrice": "${Run TestCase-将gasPrice转换成16进制#output}",
                        "value": "${Run TestCase-将amount转换成16进制#output}",
                        "nonce":"${Run TestCase-查询源地址nonce#result}"
                        }
                        ],
                        "id": 67
                        }
                    </con:request>
                    <con:assertion type="JsonPath Existence Match" id="4a98635e-95ab-43a3-b1fe-e6aaf72ac6d5"
                                   name="Check for existence of [result]">
                        <con:configuration>
                            <path>$.result</path>
                            <content>true</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="dedc3541-7810-42eb-baca-c675cc91f8bd">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>ResponseAsXml</con:sourceType>
                        <con:sourceStep>eth_sendTransaction</con:sourceStep>
                        <con:sourcePath>declare namespace ns1='http://42.159.153.121/';
                            //ns1:Response[1]/ns1:result[1]
                        </con:sourcePath>
                        <con:targetType>result</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="Groovy Script" id="edeb4b48-4931-4534-b61e-04d65ef97d6f" disabled="true">
                <con:settings/>
                <con:config>
                    <script>//def nonce16 = context.expand( '${#TestCase#nonce}' )
                        //
                        //Transform.toDec()
                        //
                        //log.info nonce16
                        //def gas = context.expand( '${#TestCase#gas}' )
                        //log.info gas
                        //log.info Integer.valueOf("11",16)
                        //int num = Integer.parseInt("12");
                        //log.info '0x76c0'.isBigInteger()
                        //int n = new Integer(gas)
                        //int n = 0x18;
                        // Integer.toHexString(n);
                        // log.info n + "的二进制是:" + Integer.toBinaryString(n);
                        // log.info n + "的八进制是:" + Integer.toOctalString(n);
                        // log.info n + "的十六进制是:" + Integer.toHexString(n);
                        // log.info n + "的三进制是:" + Integer.toString(n, 3);
                    </script>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>源地址</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>目的地址</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>gas</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>gasprice</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>金额</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>result</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>0fb5b216-8605-4e45-bf68-5f938bdd3f16</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>fb2adef5-09c1-424f-a5cd-42cd4b15c53b</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>3f6bb1a4-f141-41f5-9c85-c889d6a52b2a</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="bb62fc22-aaef-4eb9-835e-95b7810ef210" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="转换成十六进制wei" searchProperties="true">
            <con:settings>
                <con:setting id="1685f99c-1733-4401-bbc8-2e6f80d8f371fileName">转换成十进制</con:setting>
                <con:setting id="f1caca18-7f04-44a2-a992-7e9abae1f9a8fileName">转换成十六进制wei</con:setting>
                <con:setting id="bb62fc22-aaef-4eb9-835e-95b7810ef210fileName">转换成十六进制wei</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="转换为十六进制" id="13020af4-5cc5-4e90-96ea-478931180e2f">
                <con:settings/>
                <con:config>
                    <script>def 十进制 = context.expand( '${#TestCase#input}' )

                        if(十进制 == ""){
                        testRunner.testCase.setPropertyValue("output","");
                        }else{
                        def number = 十进制.toBigDecimal()
                        def big = number * 1000000000000000000 as BigInteger
                        def output = "0x" + big.toString(16)
                        // BigInteger output = new BigInteger(n.toString());
                        // log.info big.toString(16)
                        testRunner.testCase.setPropertyValue("output",output);
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>input</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>output</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="4195f663-55f0-464b-81c5-225f623f6783" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="转换成十进制ether" searchProperties="true">
            <con:settings>
                <con:setting id="1685f99c-1733-4401-bbc8-2e6f80d8f371fileName">转换成十进制</con:setting>
                <con:setting id="4195f663-55f0-464b-81c5-225f623f6783fileName">转换成十进制ether</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="转换为十进制" id="cc64bd38-3261-45de-b089-fbacabe2b647">
                <con:settings/>
                <con:config>
                    <script>//def 十六进制 = context.expand(
                        '${eth_sendRawTransaction#ResponseAsXml#declare namespace ns1=\'http://42.159.153.121/\'; //ns1:Response[1]/ns1:result[1]}'
                        )
                        def 十六进制 = context.expand( '${#TestCase#input}' )
                        if(十六进制 == ""){
                        testRunner.testCase.setPropertyValue("output","");
                        }else{
                        def str = 十六进制.split("0x")
                        BigInteger number = new BigInteger(str[1] , 16);
                        double d = number / 1000000000000000000d
                        testRunner.testCase.setPropertyValue("output",d.toString());
                        }

                        //def bty = "a688906bd8b00000".decodeHex()
                        //log.info str[1]
                        //def binaryString = "a688906bd8b00000"
                        //log.info number.toString()
                    </script>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>input</con:name>
                    <con:value/>
                </con:property>
                <con:property>
                    <con:name>output</con:name>
                    <con:value/>
                </con:property>
            </con:properties>
            <con:reportParameters/>
        </con:testCase>
    </con:testSuite>
    <con:testSuite id="2e7c07c3-1d3a-4dda-8a94-925bf19477e4" name="模拟钱包系统异步发送">
        <con:settings>
            <con:setting id="2e7c07c3-1d3a-4dda-8a94-925bf19477e4fileName">模拟钱包系统异步发送</con:setting>
        </con:settings>
        <con:savedRecentRuns>1</con:savedRecentRuns>
        <con:runType>SEQUENTIAL</con:runType>
        <con:properties/>
        <con:reportParameters/>
        <con:testCase id="2d1fa819-376d-4c2f-b83d-b1d1694b2db9" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="模拟创建地址应答" searchProperties="true">
            <con:settings>
                <con:setting id="2d1fa819-376d-4c2f-b83d-b1d1694b2db9fileName">模拟report-deposit</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="HTTP Test Request" id="206968b9-6afe-4ba8-909d-9bbf09e16db3">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="81065bfe-419d-4faa-b975-2aa159cbeea9"
                            name="HTTP Test Request" postQueryString="false" mediaType="application/json" timeout=""
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding xsi:nil="true"/>
                    <con:endpoint>https://139.219.129.26/api/v1/addresses/confirm</con:endpoint>
                    <con:request>{ "data":
                        "7b226d73675f6964223a2242544331353438373438373336222c2264617461223a7b2274785f6964223a226175746f746573745f4254435f222c22636f696e5f74797065223a22425443222c2261646472657373223a22324d786554627257614c6b7132676d6348674b4d54585244704179725352566247484b222c2269735f73756363223a747275657d7d",
                        "hash": "60d81638df5d4cd03983f747b6dea27f8a29c56198536e93969d81f3bae7d6fd", "signature":
                        "d5eaf02b2d9f865320fc279b654691a7f3e0725dd8b8b324363a1a7c4b711d866a291917338d02cf79451d7423abd3e2bc221849498d9f02fc8808aaa9181b05"
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="cf8aec40-19fd-4735-9853-7e4a918f4894" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="模拟入金通知应答" searchProperties="true">
            <con:settings>
                <con:setting id="2d1fa819-376d-4c2f-b83d-b1d1694b2db9fileName">模拟report-deposit</con:setting>
                <con:setting id="cf8aec40-19fd-4735-9853-7e4a918f4894fileName">模拟入金通知应答</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="HTTP Test Request" id="e2c96973-2011-4e74-b1d3-b10b1716997c">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="81065bfe-419d-4faa-b975-2aa159cbeea9"
                            name="HTTP Test Request" postQueryString="false" mediaType="application/json" timeout=""
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding xsi:nil="true"/>
                    <con:endpoint>https://139.219.129.26/api/v1/transactions/deposit</con:endpoint>
                    <con:request>{
                        "data":
                        "7b226d73675f6964223a2242544331353530303534363131222c2264617461223a7b2268617368223a2235653130386637393061373264643831376632303138623439353432663037623037356637633535373162366264626234343135326366656331323233376266222c22636f696e5f74797065223a22425443222c2266726f6d5f61646472657373223a22396439313131326333663234626432346535623062633838383662633561663866363763663934386639336430653733613636376433633164313865383163323a312c653966656337623538353730393336396665366435626163366262613435306339636466393234633432643266323630643766626330363531313636323738343a312c393063656639303634656539306566383135646363323064613365643664336237363337353830366535353535336537353366373535633065663432363535653a312c363963636236656539376364666535666162323634626633393737623732383565333731666431666161633739653736343838393664376264666665613537323a312c376339386463633832316238393136633730316539366430316339383436653763383739643236326533333762386636663931383438373636613566613063613a312c222c22746f5f61646472657373223a22324e364d7a7a7241564e70644351445775583777545932797069694e35656a50385362222c22616d6f756e74223a22302e30303031222c22636f6e6669726d5f74696d65223a2231353530303536343832222c22537461747573223a22362f36227d7d",
                        "hash": "f1d3f9f77c3cb94514c9359765f12a58dc67e98f34ac7718c10fc2e389028607",
                        "signature":
                        "3f59d14ccfdc3818402224dea6874d296b9547ebcb309244d8e4d92c6a0a454a9cd65a35b09dc77bb999ae8f46d918a45cd06397773b31638b90ac5b2a079b90"
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="6641cca3-3e2a-4b22-a200-060c768e4511" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="模拟出金通知" searchProperties="true">
            <con:settings>
                <con:setting id="2d1fa819-376d-4c2f-b83d-b1d1694b2db9fileName">模拟report-deposit</con:setting>
                <con:setting id="cf8aec40-19fd-4735-9853-7e4a918f4894fileName">模拟入金通知应答</con:setting>
                <con:setting id="6641cca3-3e2a-4b22-a200-060c768e4511fileName">模拟出金通知</con:setting>
            </con:settings>
            <con:testStep type="httprequest" name="HTTP Test Request" id="1c38e1dd-148c-447d-bd10-be984b00dfa4">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="81065bfe-419d-4faa-b975-2aa159cbeea9"
                            name="HTTP Test Request" postQueryString="false" mediaType="application/json" timeout=""
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:encoding xsi:nil="true"/>
                    <con:endpoint>
                        https://139.219.129.26/api/v1/transactions/69ccb6ee97cdfe5fab264bf3977b7285e371fd1faac79e7648896d7bdffea572/confirm
                    </con:endpoint>
                    <con:request>{
                        "data":
                        "7b226d73675f6964223a2242544331353530323030323239222c2264617461223a7b22636f696e5f74797065223a22425443222c2274785f6964223a226175746f746573745f4254435f77697468647265775f3533222c2274785f68617368223a2236356436643935643163653730613731383033313238643338656235373931313939623731353638653136333831313830383763343866633934616564303361222c2269735f73756363657373223a747275652c226d657373616765223a22227d7d",
                        "hash": "10d3e324efda969b06114540c03e73781aab4fb7ebd750e3c1371f57892d83ba",
                        "signature":
                        "fd373dcd16f874aca2dc96856cb4efae7820b693b7d55f750ce1365d99f36735ead35c450c9a5b66715ae551e8a8bf940f0861a6919612050a76a41e083c3683"
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
        </con:testCase>
    </con:testSuite>
    <con:testSuite id="68ea8aee-73db-4c64-8637-ebf2b5167611" name="ETH冒烟用例">
        <con:settings>
            <con:setting id="0737d4d2-65b1-4f1c-a20c-5f2093cc2e97fileName">ONT钱包服务</con:setting>
            <con:setting id="45435b0a-c995-425e-9f63-fe171bf14aecfileName">ONT冒烟用例</con:setting>
            <con:setting id="30fd042b-b0ba-459b-825b-5fd8b39fe70efileName">BTC冒烟用例1</con:setting>
            <con:setting id="IncludeOverview">true</con:setting>
            <con:setting id="IncludeResults">true</con:setting>
            <con:setting id="FlowLayout">false</con:setting>
            <con:setting id="ErrorDetails">true</con:setting>
            <con:setting id="IncludeCoverage">true</con:setting>
            <con:setting id="b1100d65-6e85-44c0-9252-2727ec8be875fileName">BTC冒烟用例</con:setting>
            <con:setting id="68ea8aee-73db-4c64-8637-ebf2b5167611fileName">ETH冒烟用例</con:setting>
        </con:settings>
        <con:savedRecentRuns>1</con:savedRecentRuns>
        <con:runType>SEQUENTIAL</con:runType>
        <con:properties>
            <con:property>
                <con:name>币种</con:name>
                <con:value>ETH</con:value>
            </con:property>
            <con:property>
                <con:name>返回tx_id</con:name>
                <con:value>autotest_BTC_51</con:value>
            </con:property>
            <con:property>
                <con:name>入金amount</con:name>
                <con:value>20000</con:value>
            </con:property>
            <con:property>
                <con:name>amount</con:name>
                <con:value>10000</con:value>
            </con:property>
            <con:property>
                <con:name>外部币池</con:name>
                <con:value>msgrPLKzTz2j8oZ9ruLbnjKu1K219mnGZf</con:value>
            </con:property>
            <con:property>
                <con:name>外部币池私钥</con:name>
                <con:value>cMmeobe2QuWuUTpMYyAsByg9gf1BiFpfYumb3r2KgxJVJTQnn4Dc</con:value>
            </con:property>
            <con:property>
                <con:name>新用户地址</con:name>
                <con:value>2N5x2Yr4pDcPpfBdrUdsp8LWQcdB2KVCyjX</con:value>
            </con:property>
            <con:property>
                <con:name>出金tx_id</con:name>
                <con:value>autotest_BTC_withdrew_53</con:value>
            </con:property>
            <con:property>
                <con:name>单签地址1</con:name>
                <con:value>mo7WGjhAhtw19t5JuJSnsRLpaaPUreHGB9</con:value>
            </con:property>
            <con:property>
                <con:name>单签地址2</con:name>
                <con:value>msaUm9Bkd3JtNoudNvLWpa4miULQYPQS25</con:value>
            </con:property>
            <con:property>
                <con:name>单签地址3</con:name>
                <con:value>mvWDkHtuMLY4PKyxGi2onknDEbS1MULyhj</con:value>
            </con:property>
            <con:property>
                <con:name>单签地址4</con:name>
                <con:value>miTwLTmLdWzhw5F3vFLBaZb2rpTETLgqQz</con:value>
            </con:property>
            <con:property>
                <con:name>单签地址5</con:name>
                <con:value>mfeHxBsBqrgatxXwLdoepyjPxQeXfGPbko</con:value>
            </con:property>
            <con:property>
                <con:name>多签地址私钥</con:name>
                <con:value>
                    cU3GcGMuEQ2HS538eAUiKZWCDcaAiQhFdEM9o792fR1ivUQ7CvDg,cVbWqin8u9199qpMpgCxkxsWhkw6EdGqPvAYaoeQtuT7Ch4G3nL2
                </con:value>
            </con:property>
            <con:property>
                <con:name>入金hash</con:name>
                <con:value>843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6</con:value>
            </con:property>
            <con:property>
                <con:name>出金hash</con:name>
                <con:value>65d6d95d1ce70a71803128d38eb5791199b71568e1638118087c48fc94aed03a</con:value>
            </con:property>
        </con:properties>
        <con:reportParameters/>
        <con:testCase id="3e3a2916-e66f-43a8-82ee-5808cc457c94" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="多签地址生成-4/5签" searchProperties="true">
            <con:settings>
                <con:setting id="71e903b7-7910-4ab4-923b-6acfb18cee7afileName">普通客户单币种开户-正常</con:setting>
                <con:setting id="da1825e7-b809-4662-9f5d-3f3c2e169dfbfileName">普通客户单币种开户-正常</con:setting>
                <con:setting id="8cc66d22-f6b7-4e72-8c56-5b1fe56e8adbfileName">多签地址生成</con:setting>
                <con:setting id="9f854a3c-8bee-4449-a3b8-919837689ad5fileName">多签地址生成-4%2F5签</con:setting>
                <con:setting id="3e3a2916-e66f-43a8-82ee-5808cc457c94fileName">多签地址生成-4%2F5签</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="calltestcase" name="Run TestCase - 获得批次号" id="df4e6edc-b28d-42ab-8db2-4a4b1600e058">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>a788c355-6f44-4021-bac2-329976c20043</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>批次号</con:name>
                            <con:value>116</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>批次号</con:entry>
                    </con:returnProperties>
                    <con:runMode>SINGLETON_AND_WAIT</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址1" id="0fa08751-fa98-4d3f-99ea-5dcabd79d023">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>n2MAxA3697e8oY2sKnxo4n4AQzpCEkRfoV</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址1的公钥"
                          id="973cb635-75b8-4822-b780-36c99aab1db4">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址1#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>029b928072c576c446cd7b12c1e8fd3c6a2fb4f26072edd0e30490bf25101ac543</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址2" id="26a4e828-979f-4205-8d46-194d58ca9b71">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>mnc8fHKhqfmCMAY2yQc12wCYtcVc1ewZsX</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址2的公钥"
                          id="5ae8a7c2-6c06-485a-a04d-96d001f76e34">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址2#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>039b22fe6a3a0e8bb18269406f387070110437083a2cbb38ab66ab25e4c854f847</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址3" id="b448dd95-0834-49c9-893b-2e533f27209a">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>mvWDkHtuMLY4PKyxGi2onknDEbS1MULyhj</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址3的公钥"
                          id="209f45b3-13c6-4c9b-a4b5-4cc8d0677b65">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址3#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>039b56fd1888148f21371f8eba039f4ba124a2c186823197ca7145c4e5ce877618</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址4" id="3ab874a4-8440-4f0c-9f57-17351eee97d2">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>miTwLTmLdWzhw5F3vFLBaZb2rpTETLgqQz</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址4的公钥"
                          id="5b318787-4409-4d58-8867-10af8caa8b27">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址4#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>021e282c5a20d5628b2c61d9f9f64a59a591a1288a6945a3232114ce11abc10961</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址5" id="7270aafc-80d4-4257-b89b-b51bd712abfd">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>mfeHxBsBqrgatxXwLdoepyjPxQeXfGPbko</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址5的公钥"
                          id="05fecfa5-bfce-4ccb-8662-da36ce8e2c38">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址5#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>022af9d2870299c4c0cc00e6f10ecc98ab87b5c0d6829be9e0c9c5922e5630d5b4</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-创建多签地址" id="de50100a-1507-4fb7-a637-1feff767c4c8">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4388fc92-fafd-43a0-89a3-076fc44579b1</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>tx_id</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>required</con:name>
                            <con:value>4</con:value>
                        </con:property>
                        <con:property>
                            <con:name>addr_info</con:name>
                            <con:value>
                                ${Run TestCase-生成单签地址1#address}:${Run TestCase - 获得单签地址1的公钥#pubKey},${Run TestCase-生成单签地址2#address}:${Run TestCase - 获得单签地址2的公钥#pubKey},${Run TestCase-生成单签地址3#address}:${Run TestCase - 获得单签地址3的公钥#pubKey},${Run TestCase-生成单签地址4#address}:${Run TestCase - 获得单签地址4的公钥#pubKey},${Run TestCase-生成单签地址5#address}:${Run TestCase - 获得单签地址5的公钥#pubKey}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>{"msg_id":"autotest","code":0,"msg":"","data":null}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言地址生成" id="df8e4203-67ef-44b2-875a-12d61485ce87">
                <con:settings/>
                <con:config>
                    <script>def code = context.expand( '${Run TestCase-创建多签地址#return_msg#$.code}' )
                        assert code == "0"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 查询私钥列表" id="178781ca-017d-4d2a-919e-569d504b84c3">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>3fc374a5-df02-4c6c-85d1-95863dfb6d68</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址列表</con:name>
                            <con:value>
                                ${Run TestCase-生成单签地址1#address},${Run TestCase-生成单签地址2#address},${Run TestCase-生成单签地址3#address},${Run TestCase-生成单签地址4#address},${Run TestCase-生成单签地址5#address}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>prikeySet</con:name>
                            <con:value>
                                cUCQyUkXnhnXHHmDu9u62hqGf5eRfz6LDvFJf9vfHLUn22iCGtHC,cUEqUhQvUGmju9vYvhijkYpyTCaQ3QFSvue1yapXfYvoXirVmCyH,cV3qFsGkgdDvUabprWXFXTnMeKzUqS8HJmh4Z7CSuo1UgTaorVPa,cRveaD7EYERxdiNr4Y6oXhqjanR5K9En5M7JJx9YVNFhHbZfduFZ,cPZiRP1XBPS5pG79EdG6geNTxrRvMSmz7SM14hkikWjobn3uXQvW
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>prikeySet</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="delay" name="Delay" id="24568262-d66e-4bec-9e98-a4e73059f152">
                <con:settings/>
                <con:config>
                    <delay>5000</delay>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="等待地址生成消息" id="bf04da39-5a4e-44fa-912f-c32343d28344">
                <con:settings/>
                <con:config>
                    <script>def tx_id = context.expand( '${Run TestCase-创建多签地址#tx_id}' )
                        def 返回tx_id = context.expand( '${#TestSuite#返回tx_id}' )
                        def prikeySet = context.expand( '${Run TestCase - 查询私钥列表#prikeySet}' )

                        if( !tx_id.equals(返回tx_id)){
                        log.info "没有找到地址生成消息，继续等待"
                        testRunner.gotoStepByName("Delay")
                        }else{//找到入金确认消息
                        log.info "找到地址生成消息"
                        testRunner.testCase.testSuite.setPropertyValue("多签地址私钥",prikeySet);
                        // testRunner.gotoStepByName("Run TestCase-记录账户交易后ONT")
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="341b74ce-b469-4de6-9a25-bb555ef5ca24">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>1</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址1</con:sourceStep>
                        <con:targetType>单签地址1</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>2</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址2</con:sourceStep>
                        <con:targetType>单签地址2</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>3</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址3</con:sourceStep>
                        <con:targetType>单签地址3</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>4</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址4</con:sourceStep>
                        <con:targetType>单签地址4</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>5</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址5</con:sourceStep>
                        <con:targetType>单签地址5</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="设置为入金地址" id="a4291540-712f-48dd-97d9-9b97760a222d" disabled="true">
                <con:settings/>
                <con:config>
                    <script>def 多签地址 = context.expand( '${#TestSuite#多签地址}' )

                        testRunner.testCase.testSuite.setPropertyValue("新用户地址",多签地址);
                    </script>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>7bac0008-ca14-4cc8-845d-a514a9ee183e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="1f9c5e98-6ea3-4714-a191-e565a298e0d1" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="多签地址生成-2/3签" searchProperties="true">
            <con:settings>
                <con:setting id="71e903b7-7910-4ab4-923b-6acfb18cee7afileName">普通客户单币种开户-正常</con:setting>
                <con:setting id="da1825e7-b809-4662-9f5d-3f3c2e169dfbfileName">普通客户单币种开户-正常</con:setting>
                <con:setting id="8cc66d22-f6b7-4e72-8c56-5b1fe56e8adbfileName">多签地址生成</con:setting>
                <con:setting id="9f854a3c-8bee-4449-a3b8-919837689ad5fileName">多签地址生成-4%2F5签</con:setting>
                <con:setting id="9a45ef2b-4ae4-4414-98ca-a40e01e07ab5fileName">多签地址生成-2%2F3签</con:setting>
                <con:setting id="1f9c5e98-6ea3-4714-a191-e565a298e0d1fileName">多签地址生成-2%2F3签</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase - 获得批次号" id="08266835-fc94-4237-9542-ae9a7243cbb6">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>a788c355-6f44-4021-bac2-329976c20043</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>批次号</con:name>
                            <con:value>51</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>批次号</con:entry>
                    </con:returnProperties>
                    <con:runMode>SINGLETON_AND_WAIT</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址1" id="e50647f7-7056-4e7e-847f-3c6c939a1690">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>mo7WGjhAhtw19t5JuJSnsRLpaaPUreHGB9</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址1的公钥"
                          id="6ffbd0f9-bfcf-4c51-be9d-dbcad881d4d4">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址1#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>023d533943bb87ca1696ae4edda06434a202862fe1c75141b8e39469e4cbc50d14</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-生成单签地址2" id="6c0aff16-c48d-4b1a-82c6-504428024cc3">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>621d5bd6-d5dc-4fbc-a1c0-22a0fef8ca00</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>account</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>msaUm9Bkd3JtNoudNvLWpa4miULQYPQS25</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>address</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 获得单签地址2的公钥"
                          id="af0f7ad9-9d7d-4edb-9d34-5fa088e6f7ea">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>25404c24-04c1-43dc-997f-021d0ea63dc4</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址</con:name>
                            <con:value>${Run TestCase-生成单签地址2#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>pubKey</con:name>
                            <con:value>02536c8ddf98e73a5c94407012d51f021f8cd297cff07716ca1f8cddf2461fe229</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>pubKey</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-创建多签地址" id="1b053ef2-f51e-46b5-88c5-95950e5ad6a7">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4388fc92-fafd-43a0-89a3-076fc44579b1</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>tx_id</con:name>
                            <con:value>autotest_${#TestSuite#币种}_${Run TestCase - 获得批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>required</con:name>
                            <con:value>2</con:value>
                        </con:property>
                        <con:property>
                            <con:name>addr_info</con:name>
                            <con:value>
                                ${Run TestCase-生成单签地址1#address}:${Run TestCase - 获得单签地址1的公钥#pubKey},${Run TestCase-生成单签地址2#address}:${Run TestCase - 获得单签地址2的公钥#pubKey}
                            </con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>{"msg_id":"autotest","code":0,"msg":"","data":null}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言地址生成" id="5adb5019-721e-4747-9379-e101326595c8">
                <con:settings/>
                <con:config>
                    <script>def code = context.expand( '${Run TestCase-创建多签地址#return_msg#$.code}' )
                        assert code == "0"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 查询私钥列表" id="ef0dcd0b-1539-4f2b-9cdc-43d7b9e3a62d">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>3fc374a5-df02-4c6c-85d1-95863dfb6d68</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>地址列表</con:name>
                            <con:value>${Run TestCase-生成单签地址1#address},${Run TestCase-生成单签地址2#address}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>prikeySet</con:name>
                            <con:value>
                                cU3GcGMuEQ2HS538eAUiKZWCDcaAiQhFdEM9o792fR1ivUQ7CvDg,cVbWqin8u9199qpMpgCxkxsWhkw6EdGqPvAYaoeQtuT7Ch4G3nL2
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>prikeySet</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="delay" name="Delay" id="5f4906f6-3a22-414a-a429-1395fc1afd6b">
                <con:settings/>
                <con:config>
                    <delay>5000</delay>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="等待地址生成消息" id="9d0c137c-e73c-49e7-91e0-ac601039baee">
                <con:settings/>
                <con:config>
                    <script>def tx_id = context.expand( '${Run TestCase-创建多签地址#tx_id}' )
                        def 返回tx_id = context.expand( '${#TestSuite#返回tx_id}' )
                        def prikeySet = context.expand( '${Run TestCase - 查询私钥列表#prikeySet}' )

                        if( !tx_id.equals(返回tx_id)){
                        log.info "没有找到地址生成消息，继续等待"
                        testRunner.gotoStepByName("Delay")
                        }else{//找到入金确认消息
                        log.info "找到地址生成消息"
                        testRunner.testCase.testSuite.setPropertyValue("多签地址私钥",prikeySet);
                        // testRunner.gotoStepByName("Run TestCase-记录账户交易后ONT")
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="fc4bc656-6ae1-4d50-b8c3-fa69bb80eca6">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>1</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址1</con:sourceStep>
                        <con:targetType>单签地址1</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>2</con:name>
                        <con:sourceType>address</con:sourceType>
                        <con:sourceStep>Run TestCase-生成单签地址2</con:sourceStep>
                        <con:targetType>单签地址2</con:targetType>
                        <con:targetStep>#TestSuite#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="设置为入金地址" id="6ad5a658-98d3-47ce-9fc8-a68997f23f31" disabled="true">
                <con:settings/>
                <con:config>
                    <script>def 多签地址 = context.expand( '${#TestSuite#多签地址}' )

                        testRunner.testCase.testSuite.setPropertyValue("新用户地址",多签地址);
                    </script>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>7bac0008-ca14-4cc8-845d-a514a9ee183e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>5620973d-9c5d-4eb1-84a6-467847773470</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="176972b5-3d21-4793-ac65-c5354b86d8ec" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="入金确认" searchProperties="true">
            <con:settings>
                <con:setting id="f4ec3b44-64b5-4b17-8c38-907e5d52a9a0fileName">入金</con:setting>
                <con:setting id="f3af21cf-6860-4a62-a3cd-3004a26c4dc7fileName">入金</con:setting>
                <con:setting id="468d696d-f068-4724-8ab8-918ce31e0678fileName">入金确认</con:setting>
                <con:setting id="c8a3a43e-c0b7-439d-b8f8-4038052f350ffileName">入金确认</con:setting>
                <con:setting id="395a9db1-31bf-4d31-aee7-453c6da5ed04fileName">入金确认</con:setting>
                <con:setting id="b4a374f4-d27a-4867-8124-2ec2d8289971fileName">入金确认</con:setting>
                <con:setting id="176972b5-3d21-4793-ac65-c5354b86d8ecfileName">入金确认</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-查询转出账户余额" id="58421db6-39a8-468f-8912-d6237892b845">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#外部币池}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>57421888</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="确保余额足够" id="c2d6262d-f254-4117-997d-ae8b4f66dff2">
                <con:settings/>
                <con:config>
                    <script>def amount = context.expand( '${#TestSuite#入金amount}' ).toBigDecimal()
                        def btc = context.expand( '${Run TestCase-查询转出账户余额#amount}' ).toBigDecimal()

                        //log.info btc
                        assert btc > amount

                        return amount / 1e+8
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录账户当前余额" id="e98d464c-df61-4ca5-8293-b581ad095e08">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestCase#入金地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>0</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-btc转账2" id="ea56335c-10e1-42a0-9872-aad4b3776f22"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>746749d0-aa4d-4e44-afe4-d70335e45737</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>目的地址</con:name>
                            <con:value>${#TestCase#入金地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>金额</con:name>
                            <con:value>${#TestSuite#amount}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>源地址私钥</con:name>
                            <con:value>${#TestSuite#外部币池私钥}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>ac2105a4e28745c9b10a361980a24b25b50a3c4fd9ffb8490da37bcdc470fee5</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>hash</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-btc转账" id="36321ead-0620-4b60-94b6-60890fc9ccbb">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>746749d0-aa4d-4e44-afe4-d70335e45737</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>目的地址</con:name>
                            <con:value>${#TestCase#入金地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>金额</con:name>
                            <con:value>${#TestSuite#入金amount}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>源地址私钥</con:name>
                            <con:value>${#TestSuite#外部币池私钥}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>hash</con:name>
                            <con:value>843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>hash</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="delay" name="Delay" id="b434427a-16ef-4f3f-9a93-1063e26d59f1">
                <con:settings/>
                <con:config>
                    <delay>300000</delay>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="等待入金6/6消息" id="78e3e909-f97a-4fd4-bd60-0266773aefa5">
                <con:settings/>
                <con:config>
                    <script>def 消息hash = context.expand( '${#TestSuite#入金hash}' )
                        def 入金交易hash = context.expand( '${Run TestCase-btc转账#hash}' )

                        if( !消息hash.equals(入金交易hash)){
                        log.info "没有找到入金确认消息，继续等待"
                        testRunner.gotoStepByName("Delay")
                        }else{//找到入金确认消息
                        log.info "找到入金确认消息"
                        // testRunner.gotoStepByName("Run TestCase-记录账户交易后ONT")
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询交易是否上链" id="74ca6cf1-b661-4ead-afc5-73027f709ccb">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4f7f11b0-67ba-480b-8d74-44c5881ecf79</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>txid</con:name>
                            <con:value>${Run TestCase-btc转账#hash}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>confirmations</con:name>
                            <con:value>10</con:value>
                        </con:property>
                        <con:property>
                            <con:name>fee</con:name>
                            <con:value>0.001</con:value>
                        </con:property>
                        <con:property>
                            <con:name>voutindex</con:name>
                            <con:value>0</con:value>
                        </con:property>
                        <con:property>
                            <con:name>交易地址</con:name>
                            <con:value>${#TestCase#入金地址}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>confirmations</con:entry>
                        <con:entry>fee</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言上链" id="b5176f30-20f6-440a-bea1-d09abe0c098b">
                <con:settings/>
                <con:config>
                    <script>def confirmations = context.expand( '${Run TestCase-查询交易是否上链#confirmations}' ).toInteger()

                        assert confirmations > 0
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录账户交易后余额" id="700b53fa-f791-4879-9287-728104e2c597">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestCase#入金地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>20000</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="jdbc" name="JDBC Request-查询数据库入金记录表" id="1c7a546e-1f04-4f20-939b-88601f826d70">
                <con:settings>
                    <con:setting id="prettyPrintResponse">true</con:setting>
                </con:settings>
                <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dbConnectionName>cus-test</con:dbConnectionName>
                    <con:driver>com.mysql.jdbc.Driver</con:driver>
                    <con:connectionString>jdbc:mysql://139.219.140.220:3306/wallet?user=custodian&amp;password=PASS_VALUE</con:connectionString>
                    <con:password>custodian</con:password>
                    <con:connectionProperties/>
                    <con:query>select * from depositlog where txhash = '${Run TestCase-btc转账#hash}'</con:query>
                    <con:assertion type="XPath Match" id="19c71012-72ba-48ea-aaa5-d5cff8443cc3"
                                   name="Match content of [DEPOSITLOG.WALLETADDR]">
                        <con:configuration>
                            <path>//Results[1]/ResultSet[1]/Row[1]/DEPOSITLOG.WALLETADDR[1]/text()</path>
                            <content>${#TestCase#入金地址}</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="XPath Match" id="182df64b-c9fb-4cbd-8667-8af14cfb03cc"
                                   name="Match content of [DEPOSITLOG.TXHASH]">
                        <con:configuration>
                            <path>//Results[1]/ResultSet[1]/Row[1]/DEPOSITLOG.TXHASH[1]/text()</path>
                            <content>${Run TestCase-btc转账#hash}</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:properties/>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询冷钱包余额" id="29cd78fd-7048-4114-9618-74d356ca5c3d">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>29ade236-3a4b-4ff9-b703-aa7bf41d51c2</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>addresses</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","data":[{"address":"2N5x2Yr4pDcPpfBdrUdsp8LWQcdB2KVCyjX","amount":"0.0002"}]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言" id="b2f194f9-6bbe-4263-b6e5-df20b1bdda8d">
                <con:settings/>
                <con:config>
                    <script>def db_amount = context.expand(
                        '${JDBC Request-查询数据库入金记录表#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/DEPOSITLOG.AMOUNT[1]}'
                        ).toBigDecimal()
                        def 入金_amount = context.expand( '${确保余额足够#result}' ).toBigDecimal()
                        assert db_amount == 入金_amount

                        def 接口余额 = context.expand( '${Run TestCase-查询冷钱包余额#return_msg#$.data.data[0].amount}'
                        ).toBigDecimal()
                        def 链上余额 = context.expand( '${Run TestCase-记录账户交易后余额#amount}' ).toBigDecimal()
                        assert 链上余额 == 接口余额 * 1e+8


                        def 交易前余额 = context.expand( '${Run TestCase-记录账户当前余额#amount}' ).toBigDecimal()
                        def 交易后余额 = context.expand( '${Run TestCase-记录账户交易后余额#amount}' ).toBigDecimal()
                        def amount = context.expand( '${Run TestCase-btc转账#金额}' ).toBigDecimal()

                        //log.info 交易后余额

                        assert 交易前余额 + amount == 交易后余额
                    </script>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>入金地址</con:name>
                    <con:value>${#TestSuite#新用户地址}</con:value>
                </con:property>
                <con:property>
                    <con:name>voutTxid</con:name>
                    <con:value>4fed28126926b5f0e214c350f011ee4d071e7bf023cfd6cff5c525ce50944877</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>a7a7774a-27ef-4239-8539-5d2a6ea0a251</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>235435d3-7924-4784-a304-c3795877f187</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>1f5720b5-4b7e-4ded-8c76-f879606c5720</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>f7665af1-1f69-4eaf-8d7d-219f68fb2a8c</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="328cc8a8-df43-4655-9664-faa27b2bb71c" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="出金申请" searchProperties="true">
            <con:settings>
                <con:setting id="f4ec3b44-64b5-4b17-8c38-907e5d52a9a0fileName">入金</con:setting>
                <con:setting id="a6968614-6e90-44c7-9249-123ab34f0338fileName">出金</con:setting>
                <con:setting id="4959fedf-13a7-462c-8af1-1e9734d9f36ffileName">足额出金</con:setting>
                <con:setting id="d5444faa-3fd0-4a32-b975-dfb75e39b227fileName">出金申请</con:setting>
                <con:setting id="50b9afd4-b593-45f8-ad8f-31b5eb9e982dfileName">出金申请</con:setting>
                <con:setting id="fafd4d98-098d-4261-8753-59d714f5c32bfileName">出金申请</con:setting>
                <con:setting id="328cc8a8-df43-4655-9664-faa27b2bb71cfileName">出金申请</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="清除retmsg" id="9df6862e-0689-4347-bce9-f6f1a89c76b3">
                <con:settings/>
                <con:config>
                    <script>testRunner.testCase.setPropertyValue("ret_msg","");</script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 查询地址有效性" id="81964235-01d1-434d-a34b-0e2493913d6a">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>2962146d-7878-4bdf-bb83-98e9a98f8d2c</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","is_valid":true}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言地址有效" id="c8b78dec-4404-4830-adb8-a0c2ace3498b">
                <con:settings/>
                <con:config>
                    <script>def is_valid = context.expand( '${Run TestCase - 查询地址有效性#return_msg#$.data.is_valid}' )

                        assert is_valid == "true"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询出金账户余额" id="85078aae-0e7c-413e-b6f2-d46d448ea178">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>20000</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="确保余额足够" id="0377ad33-8b91-4722-bab6-9445890e1a02">
                <con:settings/>
                <con:config>
                    <script>//def ont = context.expand( '${Run TestCase-查询出金账户余额#ont}' ).toBigDecimal()
                        def btc = context.expand( '${Run TestCase-查询出金账户余额#amount}' ).toBigDecimal()
                        def amount = context.expand( '${#TestSuite#amount}' ).toBigDecimal()

                        assert btc > amount

                        return amount / 1e+8
                        //assert ong > 1000000
                        //assert before_ont + amount == after_ont
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase -获取批次号" id="0b15381c-201e-4de6-b988-dd7ef1754cb5">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>a788c355-6f44-4021-bac2-329976c20043</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>批次号</con:name>
                            <con:value>53</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>批次号</con:entry>
                    </con:returnProperties>
                    <con:runMode>SINGLETON_AND_WAIT</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-发起出金申请" id="88bdfd53-a00a-4fee-bf47-4cfe6ef952ce">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>8f58c9c9-5f0e-475c-a9bf-79a5947d7628</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>tx_id</con:name>
                            <con:value>autotest_${#TestSuite#币种}_withdrew_${Run TestCase -获取批次号#批次号}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>from_addr</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>data</con:name>
                            <con:value>${#TestSuite#外部币池}:${确保余额足够#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","tx_id":"autotest_BTC_withdrew_53","txs":[{"fee":"0.0001","raw":"0200000001e6005e8b6d16ef102a994acf1d7eed993a25e22b3f60fa7b371b653045cd3b840000000000ffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","signer":"","tx_inputs":[{"amount":"0.0002","output_index":0,"prev_tx_id":"843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6","raw_input":"0100000001c7a1999edbf278fa33630c76334ac2822c1713ad7413a0e933c956d5f022b3f7010000006a47304402201cd0d8852f9d47569a9ecb608d31e0ea9c5dac0c774caa83d0f05cc31937f2390220427d93eafcd4f8143fefef8dd956297004a76a551589629ff3d10aee041d829b012103cf4b8ad1dbf57181f51d0395c766279cddc64c571cc6d015acfe35845ee68b04ffffffff02204e00000000000017a9148b5903f13b89e9728d8ee6736c3c90b32657101287805b6a03000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","script_pub_key":"a9148b5903f13b89e9728d8ee6736c3c90b32657101287","segwit":false}]}]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="a34c1f58-2137-4872-ae2d-f973f00d4d39">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>xfer</con:name>
                        <con:sourceType>return_msg</con:sourceType>
                        <con:sourceStep>Run TestCase-发起出金申请</con:sourceStep>
                        <con:targetType>ret_msg</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言返回内容" id="57511674-4c50-4fa4-9721-c1df35255049">
                <con:settings/>
                <con:config>
                    <script>def code = context.expand( '${Run TestCase-发起出金申请#return_msg#$.code}' )
                        assert code == "0"
                        def return_msg = context.expand( '${Run TestCase-发起出金申请#return_msg}' )
                        //def txs = context.expand( '${Run TestCase-发起出金申请#return_msg#$.data.txs}' )
                        //def utxos = context.expand( '${Run TestCase-发起出金申请#return_msg#$.data.txs[0].tx_inputs}' )
                        //
                        testRunner.testCase.testSuite.testCases["出金确认"].setPropertyValue("出金申请ret_msg",return_msg);
                    </script>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>ret_msg</con:name>
                    <con:value>
                        {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","tx_id":"autotest_BTC_withdrew_53","txs":[{"fee":"0.0001","raw":"0200000001e6005e8b6d16ef102a994acf1d7eed993a25e22b3f60fa7b371b653045cd3b840000000000ffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","signer":"","tx_inputs":[{"amount":"0.0002","output_index":0,"prev_tx_id":"843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6","raw_input":"0100000001c7a1999edbf278fa33630c76334ac2822c1713ad7413a0e933c956d5f022b3f7010000006a47304402201cd0d8852f9d47569a9ecb608d31e0ea9c5dac0c774caa83d0f05cc31937f2390220427d93eafcd4f8143fefef8dd956297004a76a551589629ff3d10aee041d829b012103cf4b8ad1dbf57181f51d0395c766279cddc64c571cc6d015acfe35845ee68b04ffffffff02204e00000000000017a9148b5903f13b89e9728d8ee6736c3c90b32657101287805b6a03000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","script_pub_key":"a9148b5903f13b89e9728d8ee6736c3c90b32657101287","segwit":false}]}]}}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>a7a7774a-27ef-4239-8539-5d2a6ea0a251</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>4fe91578-5db9-4279-beaf-c1afd3f824f9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>c3fa974a-c2f3-4757-9742-c0da509a5147</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>ed1cfacc-0866-41bc-876b-ebe21ddc3199</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>fbbb83d6-6f51-49b9-9c03-5061d89eef28</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="c7c2e561-28f7-4097-926b-d86d313679fb" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="出金确认" searchProperties="true">
            <con:settings>
                <con:setting id="f4ec3b44-64b5-4b17-8c38-907e5d52a9a0fileName">入金</con:setting>
                <con:setting id="a6968614-6e90-44c7-9249-123ab34f0338fileName">出金</con:setting>
                <con:setting id="4959fedf-13a7-462c-8af1-1e9734d9f36ffileName">足额出金</con:setting>
                <con:setting id="05f9d3be-8e36-45de-a3f4-38bc372e4bf1fileName">出金批次确认</con:setting>
                <con:setting id="51c43f8e-81a7-4f92-aeef-b2070aa8887ffileName">出金批次确认</con:setting>
                <con:setting id="c7c2e561-28f7-4097-926b-d86d313679fbfileName">出金确认</con:setting>
            </con:settings>
            <con:testStep type="groovy" name="清楚出金hash" id="5ceec465-6e91-4000-80c8-9830b10ac412">
                <con:settings/>
                <con:config>
                    <script>testRunner.testCase.testSuite.setPropertyValue("出金hash","");</script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录源地址交易前余额" id="85efbdfb-42b9-4e42-988e-a258dc811fae">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>0</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录目标地址余额" id="4d8df06b-0b71-4d54-bae1-34fd92d9f960">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#外部币池}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>57311888</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询utxo" id="a51bc294-1b77-4d6d-9289-d3d774cfa8b3">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>3f4cb9c8-2326-4497-a51e-a55801b12b4f</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value>
                                {"result":[{"txid":"843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6","vout":0,"address":"2N5x2Yr4pDcPpfBdrUdsp8LWQcdB2KVCyjX","account":"","redeemScript":"5221023d533943bb87ca1696ae4edda06434a202862fe1c75141b8e39469e4cbc50d142102536c8ddf98e73a5c94407012d51f021f8cd297cff07716ca1f8cddf2461fe22952ae","scriptPubKey":"a9148b5903f13b89e9728d8ee6736c3c90b32657101287","amount":0.00020000,"confirmations":10,"spendable":false,"solvable":true,"safe":true}],"error":null,"id":"yctest"}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="解析redeem" id="ea71010b-42ab-40d1-8faa-2297ef5cea9f">
                <con:settings/>
                <con:config>
                    <script>import groovy.json.JsonSlurper

                        def ret_msg = context.expand( '${#TestCase#出金申请ret_msg}' )
                        def raw = context.expand( '${#TestCase#出金申请ret_msg#$.data.txs[0].raw}' )

                        //def ret_msg = context.expand( '${Run TestCase-出金申请#ret_msg}' )
                        assert ret_msg != ""

                        def result = context.expand( '${Run TestCase-查询utxo#result#$.result}' )
                        def slurper = new JsonSlurper()
                        def json = slurper.parseText(result)
                        //def raw = context.expand( '${Run TestCase-出金申请#ret_msg#$.data.txs[0].raw}' )
                        def 多签地址私钥 = context.expand( '${#TestSuite#多签地址私钥}' )

                        def utxos = "["
                        for(def utxo : json){
                        def utxoStr = '''{
                        "txid":"''' + utxo.txid + '''",
                        "vout":''' + utxo.vout + ''',
                        "redeemScript":"''' + utxo.redeemScript + '''",
                        "scriptPubKey":"''' + utxo.scriptPubKey + '''",
                        "amount":"''' + utxo.amount + '''"
                        },'''
                        utxos = utxos + utxoStr
                        }
                        utxos = utxos[0..-2]
                        utxos = utxos + "]"

                        多签地址私钥 = 多签地址私钥.split(",")
                        def prikeySet = "["
                        for(def prikey : 多签地址私钥){
                        prikeySet = prikeySet + '''"''' + prikey + '''",'''
                        }
                        prikeySet = prikeySet[0..-2]
                        prikeySet = prikeySet + "]"

                        def params = '''[
                        "''' + raw + '''",''' + utxos + ''',''' + prikeySet + ''']'''
                        log.info params
                        return params
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 签名" id="ec0b3e79-443b-415d-9850-1da9f67bff24">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>30ed8e6b-6571-412b-b3e9-91096f0eae2b</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>params</con:name>
                            <con:value>${解析redeem#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>result</con:name>
                            <con:value>
                                0200000001e6005e8b6d16ef102a994acf1d7eed993a25e22b3f60fa7b371b653045cd3b8400000000da004730440220423977592676070a316ae0bd9bcc62495e4998b36bfbaf965a95a52e453db9db022037fdc72b410c9bb85566f04047ca14ccd724a1fbf42f49f6f262abc3a05e9fc501483045022100b7f0c2f31bbd0d676c856c0188b93abd333dd74d646779b1b82bc3934914036402205a1a3eb65b6a8c58cdbc3cdcdf8514391e0cb24ea13bdebf69542a90482f495501475221023d533943bb87ca1696ae4edda06434a202862fe1c75141b8e39469e4cbc50d142102536c8ddf98e73a5c94407012d51f021f8cd297cff07716ca1f8cddf2461fe22952aeffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>result</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 出金确认" id="6f6da51f-36e7-401a-a0e5-dfc7190b552f">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>16d6c2b6-e5e0-4ed7-a524-44957d97422b</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>tx_id</con:name>
                            <con:value>${#TestCase#出金申请ret_msg#$.data.tx_id}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coin_type</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>tx_contents</con:name>
                            <con:value>${Run TestCase - 签名#result}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>{"msg_id":"autotest","code":0,"msg":"","data":null}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="delay" name="Delay" id="a45f5c5b-8521-4055-9de5-f597a27bd414">
                <con:settings/>
                <con:config>
                    <delay>5000</delay>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="等待出金消息确认" id="dc7299fd-bd0b-46aa-badd-245b2f67c191">
                <con:settings/>
                <con:config>
                    <script>def code = context.expand( '${Run TestCase - 出金确认#return_msg#$.code}' )
                        assert code == "0"

                        def 待确认批次号 = context.expand( '${Run TestCase - 出金确认#tx_id}' )
                        def 已确认批次号 = context.expand( '${#TestSuite#出金tx_id}' )

                        if(待确认批次号.equals(已确认批次号)){//表明获得消息返回
                        def txHash = context.expand( '${#TestSuite#出金hash}' )//获取hash值
                        return txHash
                        }else{
                        testRunner.gotoStepByName("Delay")
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="delay" name="Delay 1" id="e5d08f47-50d5-40d3-a765-12a781e44bb9">
                <con:settings/>
                <con:config>
                    <delay>300000</delay>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-查询链上该币交易状态" id="cdd25a8d-d3e2-4f74-b3c1-abd433081b09">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>4f7f11b0-67ba-480b-8d74-44c5881ecf79</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>txid</con:name>
                            <con:value>${#TestSuite#出金hash}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>confirmations</con:name>
                            <con:value>3</con:value>
                        </con:property>
                        <con:property>
                            <con:name>fee</con:name>
                            <con:value>1.0E-4</con:value>
                        </con:property>
                        <con:property>
                            <con:name>voutindex</con:name>
                            <con:value>0</con:value>
                        </con:property>
                        <con:property>
                            <con:name>交易地址</con:name>
                            <con:value>${#TestSuite#多签地址}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>confirmations</con:entry>
                        <con:entry>fee</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="等待链上确认" id="12d068ce-b486-405c-860c-b1e91ac21429">
                <con:settings/>
                <con:config>
                    <script>def 交易哈希 = context.expand( '${Run TestCase-查询链上该币交易状态#txid}' )
                        def confirmations = context.expand( '${Run TestCase-查询链上该币交易状态#confirmations}' ).toInteger()

                        if(confirmations > 0){
                        log.info "上链"
                        }else{
                        log.info 交易哈希 + "未确认，等待"
                        testRunner.gotoStepByName("Delay 1")
                        }
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录源地址交易后余额" id="1fd16970-28cc-47fe-998e-98d6e9d2b92f">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#新用户地址}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>0</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-记录目标地址当前余额" id="8d9f504a-e137-44b0-b48c-af66c541db41">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>dbfcb656-1c40-42af-b77d-e0a33925a2df</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>address</con:name>
                            <con:value>${#TestSuite#外部币池}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>amount</con:name>
                            <con:value>57311888</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>amount</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="jdbc" name="JDBC Request-查询数据库出金记录表" id="2725dbcb-c024-4975-8671-6814567ebb24">
                <con:settings>
                    <con:setting id="prettyPrintResponse">true</con:setting>
                </con:settings>
                <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dbConnectionName>cus-test</con:dbConnectionName>
                    <con:driver>com.mysql.jdbc.Driver</con:driver>
                    <con:connectionString>jdbc:mysql://139.219.140.220:3306/wallet?user=custodian&amp;password=PASS_VALUE</con:connectionString>
                    <con:password>custodian</con:password>
                    <con:connectionProperties/>
                    <con:query>select * from withdrawallog where fromaddr = '${#TestSuite#新用户地址}' order by operatetime
                        desc limit 1
                    </con:query>
                    <con:assertion type="XPath Match" id="95cebba6-94ac-4f6e-9889-0efbf7b777f7"
                                   name="Match content of [WITHDRAWALLOG.HANDLINGFEE]">
                        <con:configuration>
                            <path>//Results[1]/ResultSet[1]/Row[1]/WITHDRAWALLOG.HANDLINGFEE[1]/text()</path>
                            <content>0.0001</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="XPath Match" id="96fef555-a6c5-4d68-a598-707b700e7fec"
                                   name="Match content of [WITHDRAWALLOG.TXHASH]">
                        <con:configuration>
                            <path>//Results[1]/ResultSet[1]/Row[1]/WITHDRAWALLOG.TXHASH[1]/text()</path>
                            <content>${#TestSuite#出金hash}</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:assertion type="XPath Match" id="31e8e189-1963-4fea-a2ff-b057aa9cf4f5"
                                   name="Match content of [WITHDRAWALLOG.TXID]">
                        <con:configuration>
                            <path>//Results[1]/ResultSet[1]/Row[1]/WITHDRAWALLOG.TXID[1]/text()</path>
                            <content>${Run TestCase - 出金确认#tx_id}</content>
                            <allowWildcards>false</allowWildcards>
                            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                            <ignoreComments>false</ignoreComments>
                        </con:configuration>
                    </con:assertion>
                    <con:properties/>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言金额正确" id="a91cbe45-bc2a-492c-9aa1-edef8909d014">
                <con:settings/>
                <con:config>
                    <script>def srcBefore = context.expand( '${Run TestCase-记录源地址交易前余额#amount}' ).toBigDecimal()
                        def destBefore = context.expand( '${Run TestCase-记录目标地址余额#amount}' ).toBigDecimal()
                        def srcAfter = context.expand( '${Run TestCase-记录源地址交易后余额#amount}' ).toBigDecimal()
                        def destAfter = context.expand( '${Run TestCase-记录目标地址当前余额#amount}' ).toBigDecimal()
                        def fee = context.expand( '${Run TestCase-查询链上该币交易状态#fee}' ).toBigDecimal()
                        def feeDB = context.expand(
                        '${JDBC Request-查询数据库出金记录表#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/WITHDRAWALLOG.HANDLINGFEE[1]}'
                        ).toBigDecimal()

                        //
                        //log.info srcBefore
                        //log.info destBefore
                        //log.info srcAfter
                        //log.info destAfter
                        //log.info fee
                        assert feeDB == fee
                        assert (srcBefore - srcAfter) / 1e+8 - fee == (destAfter - destBefore) / 1e+8
                        //log.info ((before_src_btc - after_src_btc) / 1e+8)
                        //assert before_ont + amount == after_ont
                    </script>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>出金申请ret_msg</con:name>
                    <con:value>
                        {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","tx_id":"autotest_BTC_withdrew_53","txs":[{"fee":"0.0001","raw":"0200000001e6005e8b6d16ef102a994acf1d7eed993a25e22b3f60fa7b371b653045cd3b840000000000ffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","signer":"","tx_inputs":[{"amount":"0.0002","output_index":0,"prev_tx_id":"843bcd4530651b377bfa603f2be2253a99ed7e1dcf4a992a10ef166d8b5e00e6","raw_input":"0100000001c7a1999edbf278fa33630c76334ac2822c1713ad7413a0e933c956d5f022b3f7010000006a47304402201cd0d8852f9d47569a9ecb608d31e0ea9c5dac0c774caa83d0f05cc31937f2390220427d93eafcd4f8143fefef8dd956297004a76a551589629ff3d10aee041d829b012103cf4b8ad1dbf57181f51d0395c766279cddc64c571cc6d015acfe35845ee68b04ffffffff02204e00000000000017a9148b5903f13b89e9728d8ee6736c3c90b32657101287805b6a03000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","script_pub_key":"a9148b5903f13b89e9728d8ee6736c3c90b32657101287","segwit":false}]}]}}
                    </con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>a7a7774a-27ef-4239-8539-5d2a6ea0a251</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>4fe91578-5db9-4279-beaf-c1afd3f824f9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>c3fa974a-c2f3-4757-9742-c0da509a5147</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>ed1cfacc-0866-41bc-876b-ebe21ddc3199</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>a1397e60-c7a0-4997-8004-1561307ab2e6</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>94d76229-eb7e-4cce-801b-2973727ddd0c</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>7c750ec2-ba1f-478e-a197-fef445eab6e6</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>a22f4f5a-15e2-4f12-a054-369373ca5cee</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>f14975a2-cf6f-477c-9829-d802d9ab81e1</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>c40bc4f3-51ee-4fc6-a06e-97f1c95b1476</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>4f49758a-36f8-4dae-baf1-a367ad3565e3</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>3f3e653c-3e14-4422-ae7f-dc5f94c97b7f</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>2ff1ef9a-50de-4aea-995a-c38273faa58f</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>a33c5305-bfa6-4252-816b-11eebf9916bb</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>f820a63f-89c1-4c01-8037-9c4352a6d452</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>c47c3583-43d0-410c-8704-de732fe89e85</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>ee096649-c5ba-46a5-965e-489e7b60bee5</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>d2a033c7-df52-49c7-aa49-333978e0d1aa</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>57d6a693-8aea-43c0-b035-b6082335aca9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>ac0149e2-49b0-4827-9ce3-bbaf768f8ed4</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>f9d02775-f456-45e1-a036-c8544333a1ce</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>a429620b-7505-4fde-a766-7de5329ee635</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="d2581c4c-84b7-4a7a-bd4e-21cc61aeaaa3" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="查询上报消息" searchProperties="true">
            <con:settings>
                <con:setting id="418e98ea-43e0-4a37-9be2-d35674c83b02fileName">历史消息查询</con:setting>
                <con:setting id="66a3df52-d59c-4db5-88e3-38c43997abb0fileName">历史消息查询</con:setting>
                <con:setting id="4c6e78aa-5e15-414d-8ecd-a97366f1eb77fileName">历史消息查询</con:setting>
                <con:setting id="d2581c4c-84b7-4a7a-bd4e-21cc61aeaaa3fileName">查询上报消息</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-历史消息查询" id="76c538d9-7ff9-48a5-b55f-a43e2b19240a">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>82f9e8b9-c976-4128-bac1-a7607f0ad7ea</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg_id</con:name>
                            <con:value>BTC1550115815</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"method":"withdrawal_status","data":["{\"data\":\"7b226d73675f6964223a2242544331353530313135383135222c2264617461223a7b22636f696e5f74797065223a22425443222c2274785f6964223a226175746f746573745f4254435f77697468647265775f3332222c2274785f68617368223a2231613636653264616161333335336538613562303333663239313265363437616665363132343264313432653038633361633037323533303737383630323361222c2269735f73756363657373223a747275652c226d657373616765223a22227d7d\",\"hash\":\"9cad38386d663df26e51ef087fbfc814c7df8035ff79d3e3bdf8db6e39fcf854\",\"signature\":\"ea85c6cbf95db62b5cacdcba748b5a5aa7fe418ac2c005a0cdb939b6760eddc435dafe4a94ac530c5629207a4475a39e723aa1c399da0bb3d4c49aaa7a40f043\"}"]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="datasource" name="DataSource-查询数据库消息" id="b3517b82-f096-4b36-a42f-dfdc31c57e32">
                <con:settings>
                    <con:setting id="com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep@prepared-properties">
                        &lt;xml-fragment/>
                    </con:setting>
                </con:settings>
                <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dataSource type="Data Connection">
                        <con:configuration>
                            <Connection>cus-test( QA )</Connection>
                            <query>Select sendmsglog.msgcontent as sendmsglog_msgcontent
                                From sendmsglog
                                Where sendmsglog.msgid = '${Run TestCase-历史消息查询#msg_id}'
                            </query>
                            <fetchSize/>
                            <stored-procedure>false</stored-procedure>
                        </con:configuration>
                    </con:dataSource>
                    <con:property>sendmsglog_msgcontent</con:property>
                    <con:restartOnRun>true</con:restartOnRun>
                </con:config>
            </con:testStep>
            <con:testStep type="datagen" name="DataGen" id="460aed49-1858-4821-8b27-1d1de3cc2c98">
                <con:settings/>
                <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:property type="Number">
                        <con:configuration>
                            <start>-1</start>
                            <end>10000</end>
                            <step>1</step>
                            <pattern/>
                            <random>false</random>
                            <persist>false</persist>
                        </con:configuration>
                        <con:name>number</con:name>
                        <con:mode>STEP</con:mode>
                        <con:shared>false</con:shared>
                    </con:property>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言每个字段都一致" id="a3d281ef-0253-4a80-8f02-e9e594a81876">
                <con:settings/>
                <con:config>
                    <script>import groovy.json.JsonSlurper

                        def dataDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.data}' )
                        def hashDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.hash}' )
                        def signDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.signature}' )

                        def return_msg = context.expand( '${Run TestCase-历史消息查询#return_msg}' )
                        def slurper = new JsonSlurper()
                        def json = slurper.parseText(return_msg)
                        json = slurper.parseText(json.data.data[0])
                        def dataMSG = json.data
                        def hashMSG = json.hash
                        def signMSG = json.signature

                        assert dataMSG == dataDB
                        assert hashMSG == hashDB
                        assert signMSG == signDB
                        //log.info json.data

                        //def coinTypeDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.coinType}' )
                        //def hashDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.hash}' )
                        //def fromAddrDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.fromAddr}' )
                        //def exchangeCoinAddrDB = context.expand(
                        '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.exchangeCoinAddr}' )
                        //def rechargeAmountDB = context.expand(
                        '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.rechargeAmount}' )
                        //def rechargeTimeDB = context.expand(
                        '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.rechargeTime}' )
                        //def rechargeStatusDB = context.expand(
                        '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.rechargeStatus}' )
                        //
                        //def number = context.expand( '${DataGen#number}' )
                        ////log.info number
                        //String resultF = context.expand( '${Run TestCase-历史消息查询#message#$.result['+number+']}'
                        ).toString()
                        //resultF = resultF.getAt(1..resultF.size() - 1)
                        ////log.info resultF
                        //def slurper = new JsonSlurper()
                        //def json = slurper.parseText(resultF)
                        ////log.info json.hash
                        //assert coinTypeDB.equals( json.coinType)
                        //assert hashDB.equals( json.hash)
                        //assert fromAddrDB.equals( json.fromAddr)
                        //assert exchangeCoinAddrDB.equals( json.exchangeCoinAddr)
                        //assert rechargeAmountDB.equals( json.rechargeAmount)
                        //assert rechargeTimeDB.equals( json.rechargeTime)
                        //assert rechargeStatusDB.equals( json.rechargeStatus)
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="datasourceloop" name="DataSource Loop" id="05da54f0-6305-4cbc-a6ad-1a118e23b6d7">
                <con:settings/>
                <con:config>
                    <dataSourceStep>DataSource-查询数据库消息</dataSourceStep>
                    <targetStep>DataGen</targetStep>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>636fe2ac-2dea-46fa-8a20-0cdf753fc9ee</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="cd012dac-d6bb-45ab-aa99-7209bad1a6c1" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="查询请求消息" searchProperties="true">
            <con:settings>
                <con:setting id="418e98ea-43e0-4a37-9be2-d35674c83b02fileName">历史消息查询</con:setting>
                <con:setting id="66a3df52-d59c-4db5-88e3-38c43997abb0fileName">历史消息查询</con:setting>
                <con:setting id="4c6e78aa-5e15-414d-8ecd-a97366f1eb77fileName">历史消息查询</con:setting>
                <con:setting id="91bf3c86-09fc-4489-a433-73818da3e557fileName">查询请求消息</con:setting>
                <con:setting id="cd012dac-d6bb-45ab-aa99-7209bad1a6c1fileName">查询请求消息</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-历史消息查询" id="91200378-e489-406d-9c9c-4a80f0b53656">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>44a1af8d-10bf-40cb-bb4c-4ba5fa23f236</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>msg_id</con:name>
                            <con:value>20190126531904</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"method":"multisignaddress","data":["{\"msg_id\":\"20190126531904\",\"data\":{\"tx_id\":\"20190126113555105569\",\"coin_type\":\"BTC\",\"addr_info\":[{\"public_key\":\"0253f0df1ad6bc64a6e771884011d253488824ebdecb90262d9b137f0089baa361\",\"address\":\"\"},{\"public_key\":\"0253f0df1ad6bc64a6e771884011d253488824ebdecb90262d9b137f0089baa361\",\"address\":\"\"},{\"public_key\":\"026b5d1baa85e1a0b460ec63a002bae78686446371739ba2bb3ac5426ffc894011\",\"address\":\"\"}],\"required\":2}}"]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="datasource" name="DataSource-查询数据库消息" id="be979fee-873f-4626-9f35-01c8ce9e7457">
                <con:settings>
                    <con:setting id="com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep@prepared-properties">
                        &lt;xml-fragment/>
                    </con:setting>
                </con:settings>
                <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dataSource type="Data Connection">
                        <con:configuration>
                            <Connection>cus-test( QA )</Connection>
                            <query>Select recvmsglog.msgcontent as recvmsglog_msgcontent
                                From recvmsglog
                                Where recvmsglog.msgid = '${Run TestCase-历史消息查询#msg_id}'
                            </query>
                            <fetchSize/>
                            <stored-procedure>false</stored-procedure>
                        </con:configuration>
                    </con:dataSource>
                    <con:property>recvmsglog_msgcontent</con:property>
                    <con:restartOnRun>true</con:restartOnRun>
                </con:config>
            </con:testStep>
            <con:testStep type="datagen" name="DataGen" id="ee5ed6f1-80b5-4eab-b448-2803414cd37f">
                <con:settings/>
                <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:property type="Number">
                        <con:configuration>
                            <start>-1</start>
                            <end>10000</end>
                            <step>1</step>
                            <pattern/>
                            <random>false</random>
                            <persist>false</persist>
                        </con:configuration>
                        <con:name>number</con:name>
                        <con:mode>STEP</con:mode>
                        <con:shared>false</con:shared>
                    </con:property>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言每个字段都一致" id="ff0bff09-0521-49f7-b3f3-25a9fe655ad4">
                <con:settings/>
                <con:config>
                    <script>import groovy.json.JsonSlurper

                        //def dataDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.data}' )
                        //def hashDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.hash}' )
                        //def signDB = context.expand( '${DataSource-查询数据库消息#sendmsglog_msgcontent#$.signature}' )

                        def return_msg = context.expand( '${Run TestCase-历史消息查询#return_msg}' )
                        def slurper = new JsonSlurper()
                        def json1 = slurper.parseText(return_msg)
                        json1 = slurper.parseText(json1.data.data[0])

                        //log.info json1
                        def db_msg = context.expand( '${DataSource-查询数据库消息#recvmsglog_msgcontent}' )
                        def json2 = slurper.parseText(db_msg)
                        //log.info json2

                        assert json1 == json2
                        //def dataMSG = json.data
                        //def hashMSG = json.hash
                        //def signMSG = json.signature
                        //
                        //assert dataMSG == dataDB
                        //assert hashMSG == hashDB
                        //assert signMSG == signDB
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="datasourceloop" name="DataSource Loop" id="a22165b0-eebf-4e69-b5a2-185b990c3113">
                <con:settings/>
                <con:config>
                    <dataSourceStep>DataSource-查询数据库消息</dataSourceStep>
                    <targetStep>DataGen</targetStep>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>636fe2ac-2dea-46fa-8a20-0cdf753fc9ee</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="96961373-001e-49ec-a8bd-3bdbcbfd139c" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="紧急停止部分出金，出金申请失败" searchProperties="true">
            <con:settings>
                <con:setting id="44ab24e1-566b-40ce-93ac-ce653c180600fileName">紧急停止出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="04ea64c3-356d-4982-b3b4-2bc7fb8e750ffileName">紧急停止部分出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="5547b8f8-3dbb-49eb-adab-b89b5c16b4e7fileName">紧急停止部分出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="96961373-001e-49ec-a8bd-3bdbcbfd139cfileName">紧急停止部分出金%EF%BC%8C出金申请失败</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase-出金紧急暂停" id="cc62cb9c-cdb3-4b49-836d-c2e8afff16ce">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>10a9ce98-a7f3-4649-b7cd-a96fc43f907d</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>level</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coins</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":false,"is_stopped":true,"message":""}]}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 出金申请" id="b269c51d-a136-4b01-ab13-763c764163a2">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>328cc8a8-df43-4655-9664-faa27b2bb71c</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>ret_msg</con:name>
                            <con:value>{"msg_id":"autotest","code":1,"msg":"stop BTC withdrawal","data":null}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>ret_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言message" id="a92789f0-7e82-487a-8ad1-33157c5524ac">
                <con:settings/>
                <con:config>
                    <script>def message = context.expand( '${Run TestCase - 出金申请#ret_msg#$.msg}' )

                        assert message == "stop BTC withdrawal"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-获取批次号" id="54e32caf-3b02-46dc-b0ae-05a92838a317"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>5c18318b-220a-4fe4-a029-c6fbe8aaa834</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>批次号</con:name>
                            <con:value>37</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>批次号</con:entry>
                    </con:returnProperties>
                    <con:runMode>SINGLETON_AND_WAIT</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-出金重新开启" id="1d65227e-268e-43df-94e3-6bf93fd8de6e">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>966f34c8-c400-475b-913e-d6f3ca7d7ea7</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>level</con:name>
                            <con:value>2</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coins</con:name>
                            <con:value/>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":true,"is_stopped":false,"message":""}]}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="109938ca-eb02-4121-a772-aec1c40d799c" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="紧急停止部分出金，出金确认失败" searchProperties="true">
            <con:settings>
                <con:setting id="44ab24e1-566b-40ce-93ac-ce653c180600fileName">紧急停止出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="04ea64c3-356d-4982-b3b4-2bc7fb8e750ffileName">紧急停止部分出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="5547b8f8-3dbb-49eb-adab-b89b5c16b4e7fileName">紧急停止部分出金%EF%BC%8C出金申请失败</con:setting>
                <con:setting id="6b76ffbc-10dc-4967-ad74-57eb6a31d052fileName">紧急停止部分出金%EF%BC%8C出金确认失败</con:setting>
                <con:setting id="109938ca-eb02-4121-a772-aec1c40d799cfileName">紧急停止部分出金%EF%BC%8C出金确认失败</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase - 出金申请" id="e70cfc4c-a856-4c6b-bb7a-34017d063861">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>328cc8a8-df43-4655-9664-faa27b2bb71c</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>ret_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":{"coin_type":"BTC","tx_id":"autotest_BTC_withdrew_48","txs":[{"fee":"0.0001","raw":"020000000242491b1d01dd25a5bfa9891fd67067f3607fcc0d9954ad2b22d8a0f8b25ab2bb0000000000ffffffff52f43d1ec87119222aaba9eb6ffc6fbfa72b1e990e9198dcc8ad42000ddb8fb50000000000ffffffff0110270000000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","signer":"","tx_inputs":[{"amount":"0.0001","output_index":0,"prev_tx_id":"bbb25ab2f8a0d8222bad54990dcc7f60f36770d61f89a9bfa525dd011d1b4942","raw_input":"0100000001e5fe70c4cd7ba30d49b8ffd94f3c0ab5254ba28019360ab1c94587e2a40521ac010000006b483045022100fced1f6c4582cc479db99f7e2e33573d0f2fdc66576092b9446a3cc82bba971d02207fb62987a528c5aa1e864d20d18bb2c543b83a181f2c044ae92abee633b450b3012103cf4b8ad1dbf57181f51d0395c766279cddc64c571cc6d015acfe35845ee68b04ffffffff02102700000000000017a9148fe1b40471adb723dd3feee5fba788c0b26993a187a06d7403000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","script_pub_key":"a9148fe1b40471adb723dd3feee5fba788c0b26993a187","segwit":false},{"amount":"0.0001","output_index":0,"prev_tx_id":"b58fdb0d0042adc8dc98910e991e2ba7bf6ffc6feba9ab2a221971c81e3df452","raw_input":"010000000142491b1d01dd25a5bfa9891fd67067f3607fcc0d9954ad2b22d8a0f8b25ab2bb010000006b483045022100a225417bb467abfed7821c66bc5aa4699cfdf2d5345f8ffd01c74799244c308a02201de11bbf952ab17f4b3562dcb42a2aec5db19d544d6cd45d510a85b69245d57e012103cf4b8ad1dbf57181f51d0395c766279cddc64c571cc6d015acfe35845ee68b04ffffffff02102700000000000017a9148fe1b40471adb723dd3feee5fba788c0b26993a187f0bf7203000000001976a9148580bc89240bf130a841491c27b651978f8c9d7688ac00000000","script_pub_key":"a9148fe1b40471adb723dd3feee5fba788c0b26993a187","segwit":false}]}]}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>ret_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-出金紧急暂停" id="35754b5b-e502-4cc5-bee5-7ef0d973af88">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>10a9ce98-a7f3-4649-b7cd-a96fc43f907d</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>level</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coins</con:name>
                            <con:value>${#TestSuite#币种}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":false,"is_stopped":true,"message":""}]}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="Groovy Script" id="e5742547-5758-4188-b7c8-8e06ceb12788">
                <con:settings/>
                <con:config>
                    <script>def ret_msg = context.expand( '${Run TestCase - 出金申请#ret_msg}' )
                        log.info ret_msg
                        return ret_msg
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase - 出金确认" id="1b6d24af-afb0-470b-b349-bc25e5076af2">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>c7c2e561-28f7-4097-926b-d86d313679fb</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>出金申请ret_msg</con:name>
                            <con:value>${Groovy Script#result}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>确认ret_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言message" id="d3aaba17-5469-4228-a2b9-b91819af58cf">
                <con:settings/>
                <con:config>
                    <script>def message = context.expand( '${Run TestCase - 出金确认#确认ret_msg#$.msg}' )

                        assert message == "stop BTC withdrawal"
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-获取批次号" id="0b47ef7d-1a15-477c-a679-8392dd6ccccb"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>5c18318b-220a-4fe4-a029-c6fbe8aaa834</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>批次号</con:name>
                            <con:value>37</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>批次号</con:entry>
                    </con:returnProperties>
                    <con:runMode>SINGLETON_AND_WAIT</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-出金重新开启" id="9d135b8b-5342-42f5-b9dd-7040d7b71994">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>966f34c8-c400-475b-913e-d6f3ca7d7ea7</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>level</con:name>
                            <con:value>2</con:value>
                        </con:property>
                        <con:property>
                            <con:name>coins</con:name>
                            <con:value/>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"autotest","code":0,"msg":"","data":[{"coin_type":"BTC","is_started":true,"is_stopped":false,"message":""}]}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
        </con:testCase>
        <con:testCase id="b03ab623-9f64-42e1-a6ba-3cb02cbc8d3a" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="入金对账(需手动)" searchProperties="true">
            <con:settings>
                <con:setting id="f4ec3b44-64b5-4b17-8c38-907e5d52a9a0fileName">入金</con:setting>
                <con:setting id="ba3c6283-b7bc-4e5d-9f5d-655c5d7cfc6afileName">对账</con:setting>
                <con:setting id="2cee2f1c-af30-4d01-978a-5564d1cffa7efileName">对账</con:setting>
                <con:setting id="0c76d1af-f21d-4f5c-89e7-fd6e6081a056fileName">入金对账%28需手动%29</con:setting>
                <con:setting id="b2317c8c-d3f7-44f6-9f37-6b7c9d5e527ffileName">入金对账%28需手动%29</con:setting>
                <con:setting id="b03ab623-9f64-42e1-a6ba-3cb02cbc8d3afileName">入金对账%28需手动%29</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase - 对账接口" id="178d3243-e804-46e4-a710-cffde6c5c884">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>ab8906a1-3b94-4f94-9388-53060c708f33</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>type</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>begin_time</con:name>
                            <con:value>1543557431</con:value>
                        </con:property>
                        <con:property>
                            <con:name>end_time</con:name>
                            <con:value>1555682623</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"","code":0,"msg":"","data":{"url":"https://139.219.129.26:40339/files/19700101_19700101.csv"}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-入金对账请求" id="b5d4be3d-b810-41a7-a0cd-4f36f4dad682"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>76c2f8a4-951f-494a-a0c8-24a2ef178edf</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>message</con:name>
                            <con:value>http://42.159.155.44:40339/files/in_20181130_20181213.csv</con:value>
                        </con:property>
                        <con:property>
                            <con:name>出入金类型</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>开始时间</con:name>
                            <con:value>${#TestCase#开始时间}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>结束时间</con:name>
                            <con:value>${#TestCase#结束时间}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>message</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="downloadFiles" id="1b21db0e-e932-45f3-a4af-f06163b72536"
                          disabled="true">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="7cb833ac-d086-4a55-822c-1e32247da54c"
                            name="downloadFiles" postQueryString="false" mediaType="application/xml"
                            downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>${Run TestCase-入金对账请求#message}</con:endpoint>
                    <con:request/>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:attachment>
                        <con:name>in_20181123_201811302632195037889636840.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811302632195037889636840.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811302632195037889636840.csv</con:url>
                        <con:id>3dd14eff-f8fc-4a28-8068-ecd849977964</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811306076817833798337393.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811306076817833798337393.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811306076817833798337393.csv</con:url>
                        <con:id>992bc5e0-b566-4374-b01d-36ea0e96d504</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811303985836226281124064.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811303985836226281124064.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811303985836226281124064.csv</con:url>
                        <con:id>2ebe6144-4472-4b4d-a721-8d2d24a8c111</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_20181130485091523965045405.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_20181130485091523965045405.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_20181130485091523965045405.csv</con:url>
                        <con:id>0160aa49-428d-4906-a9d1-925e7d2d4955</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811303528880127235685249.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811303528880127235685249.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811303528880127235685249.csv</con:url>
                        <con:id>c7fbee5d-c2e4-4711-8128-666e1d160d96</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201812131665968294907385453.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201812131665968294907385453.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201812131665968294907385453.csv</con:url>
                        <con:id>4aea7354-bcb3-43b1-8a38-841515232bb3</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181130_201812136822892826078680293.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181130_201812136822892826078680293.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181130_201812136822892826078680293.csv</con:url>
                        <con:id>71f7e8b1-0222-4ffb-a393-ebf2b08dfdfe</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181130_201812131314383023288728051.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181130_201812131314383023288728051.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181130_201812131314383023288728051.csv</con:url>
                        <con:id>4bcfc397-214d-4319-beff-1bac981104a8</con:id>
                    </con:attachment>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="jdbc" name="JDBC Request-查询入金表" id="e83a3e0a-9645-4ab1-9b0f-e721cfe19201">
                <con:settings>
                    <con:setting id="prettyPrintResponse">true</con:setting>
                </con:settings>
                <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dbConnectionName>cus-test</con:dbConnectionName>
                    <con:driver>com.mysql.jdbc.Driver</con:driver>
                    <con:connectionString>jdbc:mysql://139.219.140.220:3306/wallet?user=custodian&amp;password=PASS_VALUE</con:connectionString>
                    <con:password>custodian</con:password>
                    <con:connectionProperties/>
                    <con:query>SELECT * FROM `depositlog` where operatetime >= '${#TestCase#开始时间}' and operatetime &lt;=
                        '${#TestCase#结束时间}'
                    </con:query>
                    <con:properties/>
                </con:config>
            </con:testStep>
            <con:testStep type="datasource" name="DataSource" id="d7b93f46-e68d-41b4-bb80-47cf96d76987">
                <con:settings/>
                <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dataSource type="Excel">
                        <con:configuration>
                            <file>C:/Users/DELL/Desktop/in_20181130_201812131314383023288728051.xlsx</file>
                            <worksheet/>
                            <cell>A9</cell>
                            <ignoreEmpty>false</ignoreEmpty>
                            <evaluateFormulas>false</evaluateFormulas>
                        </con:configuration>
                    </con:dataSource>
                    <con:property>Serialnumber</con:property>
                    <con:property>businessNo</con:property>
                    <con:property>coinType</con:property>
                    <con:property>txType</con:property>
                    <con:property>amount</con:property>
                    <con:property>handlingfee</con:property>
                    <con:property>time</con:property>
                    <con:property>fromAddr</con:property>
                    <con:property>destAddr</con:property>
                    <con:restartOnRun>true</con:restartOnRun>
                </con:config>
            </con:testStep>
            <con:testStep type="datagen" name="DataGen" id="935103a3-2782-495c-89e0-3fcac4b999c6">
                <con:settings/>
                <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:property type="Number">
                        <con:configuration>
                            <start>0</start>
                            <end>10000</end>
                            <step>1</step>
                            <pattern/>
                            <random>false</random>
                            <persist>false</persist>
                        </con:configuration>
                        <con:name>number</con:name>
                        <con:mode>STEP</con:mode>
                        <con:shared>false</con:shared>
                    </con:property>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言字段一致" id="da2cdc26-3b05-4a76-92af-a313e13e3450">
                <con:settings/>
                <con:config>
                    <script>import java.text.SimpleDateFormat

                        def number = context.expand( '${DataGen#number}' )
                        log.info number
                        //String resultF = context.expand( '${Run TestCase-业务操作状态查询#message#$.result['+number+']}'
                        ).toString()
                        def coinTypeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.COINTYPE[1]}'
                        )
                        def fromAddrDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.FROMADDR[1]}'
                        )
                        def amountDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.AMOUNT[1]}'
                        ).toBigDecimal()
                        def handlingfeeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.HANDLINGFEE[1]}'
                        ).toBigDecimal()
                        def timeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.OPERATETIME[1]}'
                        ).toLong()
                        def destAddrDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.LEDGERADDR[1]}'
                        )

                        def coinTypeF = context.expand( '${DataSource#coinType}' )
                        def amountF = context.expand( '${DataSource#amount}' ).toBigDecimal()
                        def handlingfeeF = context.expand( '${DataSource#handlingfee}' ).toBigDecimal()
                        def timeF = context.expand( '${DataSource#time}' )
                        def fromAddrF = context.expand( '${DataSource#fromAddr}' )
                        def destAddrF = context.expand( '${DataSource#destAddr}' )
                        //2018-11-29 04:38:08
                        //log.info timeDB
                        Date date = new Date(timeDB*1000)
                        time = date.format("yyyy-MM-d aH:mm", TimeZone.getTimeZone('UTC'))
                        //log.info time

                        assert coinTypeDB.equals(coinTypeF)
                        assert fromAddrDB.equals(fromAddrF)
                        assert destAddrDB.equals(destAddrF)
                        assert timeF.equals( time)
                        assert handlingfeeDB== handlingfeeF
                        assert amountDB == amountF


                        //def slurper = new JsonSlurper()
                        //def json = slurper.parseText(resultF)
                        ////log.info json.hash
                        //assert coinTypeDB.equals( json.coinType)
                        //assert hashDB.equals( json.hash)
                        //assert fromAddrDB.equals( json.fromAddr)
                        //assert exchangeCoinAddrDB.equals( json.exchangeCoinAddr)
                        //assert rechargeAmountDB.equals( json.rechargeAmount)
                        //assert rechargeTimeDB.equals( json.rechargeTime)
                        //assert rechargeStatusDB.equals( json.rechargeStatus)
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="datasourceloop" name="DataSource Loop" id="3a9ff2e0-ad8c-429c-ad57-7d174fd0efbd">
                <con:settings/>
                <con:config>
                    <dataSourceStep>DataSource</dataSourceStep>
                    <targetStep>DataGen</targetStep>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>开始时间</con:name>
                    <con:value>1543557431</con:value>
                </con:property>
                <con:property>
                    <con:name>结束时间</con:name>
                    <con:value>1555682623</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>a7a7774a-27ef-4239-8539-5d2a6ea0a251</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>98e737a2-9945-4e80-aea7-275105cb8643</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>cd153609-10e9-4c8b-84e5-41cd73120943</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>179adbec-b8f9-4da4-bd7c-b6988fdbf8e9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="631d3eab-374e-4d0e-9111-67e0e5baae06" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="出金对账(需手动)" searchProperties="true">
            <con:settings>
                <con:setting id="f4ec3b44-64b5-4b17-8c38-907e5d52a9a0fileName">入金</con:setting>
                <con:setting id="ba3c6283-b7bc-4e5d-9f5d-655c5d7cfc6afileName">对账</con:setting>
                <con:setting id="2cee2f1c-af30-4d01-978a-5564d1cffa7efileName">对账</con:setting>
                <con:setting id="0c76d1af-f21d-4f5c-89e7-fd6e6081a056fileName">入金对账%28需手动%29</con:setting>
                <con:setting id="b2317c8c-d3f7-44f6-9f37-6b7c9d5e527ffileName">入金对账%28需手动%29</con:setting>
                <con:setting id="1ac3cdb7-fd7c-4659-a43e-de64eba0940efileName">出金对账%28需手动%29</con:setting>
                <con:setting id="631d3eab-374e-4d0e-9111-67e0e5baae06fileName">出金对账%28需手动%29</con:setting>
            </con:settings>
            <con:testStep type="calltestcase" name="Run TestCase - 对账接口" id="9d01c8fe-848d-4f30-8197-99427b2c176e">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>ab8906a1-3b94-4f94-9388-53060c708f33</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>type</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>begin_time</con:name>
                            <con:value>1543557431</con:value>
                        </con:property>
                        <con:property>
                            <con:name>end_time</con:name>
                            <con:value>1555682623</con:value>
                        </con:property>
                        <con:property>
                            <con:name>return_msg</con:name>
                            <con:value>
                                {"msg_id":"","code":0,"msg":"","data":{"url":"https://139.219.129.26:40339/files/19700101_19700101.csv"}}
                            </con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>return_msg</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="calltestcase" name="Run TestCase-入金对账请求" id="3f0032a0-f3c7-420f-9030-50f3403aab40"
                          disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:targetTestCase>76c2f8a4-951f-494a-a0c8-24a2ef178edf</con:targetTestCase>
                    <con:properties>
                        <con:property>
                            <con:name>message</con:name>
                            <con:value>http://42.159.155.44:40339/files/in_20181130_20181213.csv</con:value>
                        </con:property>
                        <con:property>
                            <con:name>出入金类型</con:name>
                            <con:value>1</con:value>
                        </con:property>
                        <con:property>
                            <con:name>开始时间</con:name>
                            <con:value>${#TestCase#开始时间}</con:value>
                        </con:property>
                        <con:property>
                            <con:name>结束时间</con:name>
                            <con:value>${#TestCase#结束时间}</con:value>
                        </con:property>
                    </con:properties>
                    <con:returnProperties>
                        <con:entry>message</con:entry>
                    </con:returnProperties>
                    <con:runMode>PARALLELL</con:runMode>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="downloadFiles" id="c475f520-5a2c-438f-8b40-415b8455d862"
                          disabled="true">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="7cb833ac-d086-4a55-822c-1e32247da54c"
                            name="downloadFiles" postQueryString="false" mediaType="application/xml"
                            downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>${Run TestCase-入金对账请求#message}</con:endpoint>
                    <con:request/>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:attachment>
                        <con:name>in_20181123_201811302632195037889636840.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811302632195037889636840.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811302632195037889636840.csv</con:url>
                        <con:id>3dd14eff-f8fc-4a28-8068-ecd849977964</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811306076817833798337393.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811306076817833798337393.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811306076817833798337393.csv</con:url>
                        <con:id>992bc5e0-b566-4374-b01d-36ea0e96d504</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811303985836226281124064.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811303985836226281124064.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811303985836226281124064.csv</con:url>
                        <con:id>2ebe6144-4472-4b4d-a721-8d2d24a8c111</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_20181130485091523965045405.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_20181130485091523965045405.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_20181130485091523965045405.csv</con:url>
                        <con:id>0160aa49-428d-4906-a9d1-925e7d2d4955</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201811303528880127235685249.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201811303528880127235685249.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201811303528880127235685249.csv</con:url>
                        <con:id>c7fbee5d-c2e4-4711-8128-666e1d160d96</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181123_201812131665968294907385453.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181123_201812131665968294907385453.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181123_201812131665968294907385453.csv</con:url>
                        <con:id>4aea7354-bcb3-43b1-8a38-841515232bb3</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181130_201812136822892826078680293.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181130_201812136822892826078680293.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181130_201812136822892826078680293.csv</con:url>
                        <con:id>71f7e8b1-0222-4ffb-a393-ebf2b08dfdfe</con:id>
                    </con:attachment>
                    <con:attachment>
                        <con:name>in_20181130_201812131314383023288728051.csv</con:name>
                        <con:contentType>application/octet-stream</con:contentType>
                        <con:contentId>in_20181130_201812131314383023288728051.csv</con:contentId>
                        <con:url>C:/Users/DELL/AppData/Local/Temp/in_20181130_201812131314383023288728051.csv</con:url>
                        <con:id>4bcfc397-214d-4319-beff-1bac981104a8</con:id>
                    </con:attachment>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="jdbc" name="JDBC Request-查询入金表" id="4c04e29a-d84a-42cd-918f-905eb4ad15ef">
                <con:settings>
                    <con:setting id="prettyPrintResponse">true</con:setting>
                </con:settings>
                <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dbConnectionName>cus-test</con:dbConnectionName>
                    <con:driver>com.mysql.jdbc.Driver</con:driver>
                    <con:connectionString>jdbc:mysql://139.219.140.220:3306/wallet?user=custodian&amp;password=PASS_VALUE</con:connectionString>
                    <con:password>custodian</con:password>
                    <con:connectionProperties/>
                    <con:query>SELECT * FROM `depositlog` where operatetime >= '${#TestCase#开始时间}' and operatetime &lt;=
                        '${#TestCase#结束时间}'
                    </con:query>
                    <con:properties/>
                </con:config>
            </con:testStep>
            <con:testStep type="datasource" name="DataSource" id="d8c55bd1-53b4-49b9-8d23-622e0800241a">
                <con:settings/>
                <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dataSource type="Excel">
                        <con:configuration>
                            <file>C:/Users/DELL/Desktop/in_20181130_201812131314383023288728051.xlsx</file>
                            <worksheet/>
                            <cell>A9</cell>
                            <ignoreEmpty>false</ignoreEmpty>
                            <evaluateFormulas>false</evaluateFormulas>
                        </con:configuration>
                    </con:dataSource>
                    <con:property>Serialnumber</con:property>
                    <con:property>businessNo</con:property>
                    <con:property>coinType</con:property>
                    <con:property>txType</con:property>
                    <con:property>amount</con:property>
                    <con:property>handlingfee</con:property>
                    <con:property>time</con:property>
                    <con:property>fromAddr</con:property>
                    <con:property>destAddr</con:property>
                    <con:restartOnRun>true</con:restartOnRun>
                </con:config>
            </con:testStep>
            <con:testStep type="datagen" name="DataGen" id="39589223-faa6-426b-ad16-be6e8fb66489">
                <con:settings/>
                <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:property type="Number">
                        <con:configuration>
                            <start>0</start>
                            <end>10000</end>
                            <step>1</step>
                            <pattern/>
                            <random>false</random>
                            <persist>false</persist>
                        </con:configuration>
                        <con:name>number</con:name>
                        <con:mode>STEP</con:mode>
                        <con:shared>false</con:shared>
                    </con:property>
                </con:config>
            </con:testStep>
            <con:testStep type="groovy" name="断言字段一致" id="118cb350-eb74-479a-9a05-15eecb8a2d98">
                <con:settings/>
                <con:config>
                    <script>import java.text.SimpleDateFormat

                        def number = context.expand( '${DataGen#number}' )
                        log.info number
                        //String resultF = context.expand( '${Run TestCase-业务操作状态查询#message#$.result['+number+']}'
                        ).toString()
                        def coinTypeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.COINTYPE[1]}'
                        )
                        def fromAddrDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.FROMADDR[1]}'
                        )
                        def amountDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.AMOUNT[1]}'
                        ).toBigDecimal()
                        def handlingfeeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.HANDLINGFEE[1]}'
                        ).toBigDecimal()
                        def timeDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.OPERATETIME[1]}'
                        ).toLong()
                        def destAddrDB = context.expand(
                        '${JDBC Request-查询入金表#ResponseAsXml#//Results[1]/ResultSet[1]/Row['+number+']/FUNDCOLLECTIONLOG.LEDGERADDR[1]}'
                        )

                        def coinTypeF = context.expand( '${DataSource#coinType}' )
                        def amountF = context.expand( '${DataSource#amount}' ).toBigDecimal()
                        def handlingfeeF = context.expand( '${DataSource#handlingfee}' ).toBigDecimal()
                        def timeF = context.expand( '${DataSource#time}' )
                        def fromAddrF = context.expand( '${DataSource#fromAddr}' )
                        def destAddrF = context.expand( '${DataSource#destAddr}' )
                        //2018-11-29 04:38:08
                        //log.info timeDB
                        Date date = new Date(timeDB*1000)
                        time = date.format("yyyy-MM-d aH:mm", TimeZone.getTimeZone('UTC'))
                        //log.info time

                        assert coinTypeDB.equals(coinTypeF)
                        assert fromAddrDB.equals(fromAddrF)
                        assert destAddrDB.equals(destAddrF)
                        assert timeF.equals( time)
                        assert handlingfeeDB== handlingfeeF
                        assert amountDB == amountF


                        //def slurper = new JsonSlurper()
                        //def json = slurper.parseText(resultF)
                        ////log.info json.hash
                        //assert coinTypeDB.equals( json.coinType)
                        //assert hashDB.equals( json.hash)
                        //assert fromAddrDB.equals( json.fromAddr)
                        //assert exchangeCoinAddrDB.equals( json.exchangeCoinAddr)
                        //assert rechargeAmountDB.equals( json.rechargeAmount)
                        //assert rechargeTimeDB.equals( json.rechargeTime)
                        //assert rechargeStatusDB.equals( json.rechargeStatus)
                    </script>
                </con:config>
            </con:testStep>
            <con:testStep type="datasourceloop" name="DataSource Loop" id="cd443654-ade5-4214-aa2c-af9e90360312">
                <con:settings/>
                <con:config>
                    <dataSourceStep>DataSource</dataSourceStep>
                    <targetStep>DataGen</targetStep>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>开始时间</con:name>
                    <con:value>1543557431</con:value>
                </con:property>
                <con:property>
                    <con:name>结束时间</con:name>
                    <con:value>1555682623</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>a7a7774a-27ef-4239-8539-5d2a6ea0a251</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>98e737a2-9945-4e80-aea7-275105cb8643</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>cd153609-10e9-4c8b-84e5-41cd73120943</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>179adbec-b8f9-4da4-bd7c-b6988fdbf8e9</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
        <con:testCase id="a788c355-6f44-4021-bac2-329976c20043" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="获取批次号" searchProperties="true" disabled="true">
            <con:settings>
                <con:setting id="c1d08213-77c7-440c-9215-9d46d61083b1fileName">获取批次号</con:setting>
                <con:setting id="5c18318b-220a-4fe4-a029-c6fbe8aaa834fileName">获取批次号</con:setting>
                <con:setting id="acd94a41-69ff-43e5-8575-d3421c6fb2c1fileName">获取批次号</con:setting>
                <con:setting id="a788c355-6f44-4021-bac2-329976c20043fileName">获取批次号</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="datagen" name="DataGen" id="79481bd4-2a7f-48f2-b608-26e29860d674">
                <con:settings/>
                <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:property type="Number">
                        <con:configuration>
                            <start>0</start>
                            <end>100000</end>
                            <step>1</step>
                            <pattern/>
                            <random>false</random>
                            <persist>true</persist>
                            <current>116.0</current>
                        </con:configuration>
                        <con:name>批次号</con:name>
                        <con:mode>STEP</con:mode>
                        <con:shared>true</con:shared>
                    </con:property>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="33ad4be8-b133-4149-b95e-897864285672">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"
                                   ignoreEmpty="false" transferToAll="false" entitize="false"
                                   transferChildNodes="false">
                        <con:name>批次号</con:name>
                        <con:sourceType>批次号</con:sourceType>
                        <con:sourceStep>DataGen</con:sourceStep>
                        <con:targetType>批次号</con:targetType>
                        <con:targetStep>#TestCase#</con:targetStep>
                        <con:type>XQUERY</con:type>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:properties>
                <con:property>
                    <con:name>批次号</con:name>
                    <con:value>116</con:value>
                </con:property>
            </con:properties>
            <con:reportParameters/>
            <con:breakPoints>
                <con:testStepId>bf47f906-e4a4-4ff1-9931-e3c720caefcc</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>b7ef4be3-f800-4a0f-a224-219ff640a91a</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>6a4dbbc3-9612-4696-8564-2a820a4731ca</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>4dd75fd3-8a61-4d4d-9a85-32e203151264</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>76e903e6-0906-47ca-9a1d-93225139802e</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>f2691b76-d299-4dca-a78d-6c05adb81560</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
            <con:breakPoints>
                <con:testStepId>2be7367f-20cd-4744-94cd-904de79c7510</con:testStepId>
                <con:status>NONE</con:status>
                <con:properties/>
            </con:breakPoints>
        </con:testCase>
    </con:testSuite>
    <con:testSuite id="51ba118d-a6ac-458c-9261-e52e4b8dd737" name="前端测试">
        <con:settings>
            <con:setting id="51ba118d-a6ac-458c-9261-e52e4b8dd737fileName">前端测试</con:setting>
        </con:settings>
        <con:savedRecentRuns>1</con:savedRecentRuns>
        <con:runType>SEQUENTIAL</con:runType>
        <con:properties/>
        <con:reportParameters/>
        <con:testCase id="fb953130-397f-44c3-af1d-29a1fb57cb6a" failOnError="true" failTestCaseOnErrors="true"
                      keepSession="false" maxResults="0" name="1.3.17.平台审核公司approver" searchProperties="true">
            <con:settings>
                <con:setting id="fb953130-397f-44c3-af1d-29a1fb57cb6afileName">1.3.17.平台审核公司approver</con:setting>
            </con:settings>
            <con:savedRecentRuns>1</con:savedRecentRuns>
            <con:testStep type="httprequest" name="HTTP Test Request" id="977ef322-71e0-442f-8f7e-854dea630887">
                <con:settings/>
                <con:config method="PUT" xsi:type="con:HttpRequest" id="3dd8e022-ffae-4780-bdcc-54b176291bd2"
                            name="HTTP Test Request" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>https://42.159.152.215/manager/v1/customers/account/approver</con:endpoint>
                    <con:request>{
                        "approver_email": "",
                        "approved": true
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:testStep type="httprequest" name="HTTP Test Request1" id="98eab1d6-466e-4efc-87b2-334a521c704d">
                <con:settings/>
                <con:config method="POST" xsi:type="con:HttpRequest" id="e712842a-d4bf-4100-9ec5-6cb98dacda8e"
                            name="HTTP Test Request1" postQueryString="false" mediaType="application/json"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>https://chain.so/api/v2/send_tx/LTCTEST</con:endpoint>
                    <con:request>{
                        "tx_hex":"01000000015f77e8c65907cf778c5798a4186e50a29f862f3a994c613dc7ff6068e86000aa000000006b4830450221008ba48cb81d3c6dba0f6a0fa49589cfa985c21b620c9724b299707e8db9d29a2e0220036cee55464e6f1e56f5c4973933734dff8b5b4ab0e4b87dfcd67cedc4c1afbd012103a5e329c0c2ae451a8ba2702d3dccb41b2bd41eaa264d7ebbc10870b1f13773d1ffffffff01a4909800000000001976a914a4494c68343c5662b1907b1d756f7a48bc4217a388ac00000000"
                        }
                    </con:request>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters/>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
        </con:testCase>
    </con:testSuite>
    <con:restMockService id="7071bcca-5ef3-4f7f-ab39-693a259345bf" port="8083" path="/" host="localhost" name="模拟账务系统返回"
                         docroot="">
        <con:settings>
            <con:setting id="7071bcca-5ef3-4f7f-ab39-693a259345bffileName">模拟账务系统返回</con:setting>
        </con:settings>
        <con:properties/>
        <con:onRequestScript>def requestBody = mockRequest.getRequestContent()
            log.info "requestBody:" + requestBody
            log.info "mockRequest:" + mockRequest.getPath()
        </con:onRequestScript>
        <con:headerValidator/>
        <con:restMockAction name="/v1/addresses/confirm" method="POST" resourcePath="/api/v1/addresses/confirm"
                            id="657c71c1-065b-4f3b-9821-f80dee17f293">
            <con:settings>
                <con:setting id="657c71c1-065b-4f3b-9821-f80dee17f293fileName">%2Fv1%2Faddresses%2Fconfirm</con:setting>
            </con:settings>
            <con:defaultResponse>正常返回</con:defaultResponse>
            <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
            <con:dispatchConfig/>
            <con:dispatchPath xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <con:dispatchXPath/>
            <con:routeScript/>
            <con:response name="正常返回" id="09619906-9a4f-4d1f-884f-535b6c55484f" httpResponseStatus="200"
                          mediaType="application/json" dataSource="">
                <con:settings/>
                <con:script>import groovy.json.JsonSlurper
                    import com.eviware.soapui.support.types.StringToObjectMap
                    import com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext

                    log.info "多签地址创建通知"
                    def project =
                    mockRequest.getContext().getMockRunner().getMockContext().getMockService().getProject()
                    def slurper = new JsonSlurper()
                    def json = slurper.parseText(mockRequest.requestContent)
                    def data = json.data
                    def hash = json.hash
                    def sign = json.sign
                    Map&lt;String,String> map = new HashMap();
                    StringToObjectMap parameter = new StringToObjectMap(map);
                    def runner = mockRequest.getContext().getMockRunner()
                    def testcase = project.testSuites["钱包服务接口"].testCases['16进制转字符串']
                    testcase.setPropertyValue('hex', data);
                    def result = testcase.run(parameter,false);
                    def script_result = result.getResults().get(0).getMessages()[0].split("Script-result:")[1]
                    def ret_msg = slurper.parseText(script_result)
                    log.info ret_msg
                    def coin = ret_msg.data.coin_type
                    def address = ret_msg.data.address
                    def is_succ = ret_msg.data.is_succ
                    def tx_id = ret_msg.data.tx_id
                    //if(is_succ == true){//成功则回填suite中的address字段
                    if(coin == "BTC"){
                    // log.info tx_id
                    project.testSuites["BTC冒烟用例"].setPropertyValue("返回tx_id",tx_id);//获得tx_id，回填至用例变量中
                    project.testSuites["BTC冒烟用例"].setPropertyValue("新用户地址",address);//获得新用户地址，回填至用例变量中
                    }
                    if(coin == "LTC"){
                    // log.info tx_id
                    project.testSuites["LTC冒烟用例"].setPropertyValue("返回tx_id",tx_id);//获得tx_id，回填至用例变量中
                    project.testSuites["LTC冒烟用例"].setPropertyValue("新用户地址",address);//获得新用户地址，回填至用例变量中
                    }

                    //log.info data
                    /*以下为测试代码*/
                    //def coinType = json.coinType//获得币种
                    //def hash = json.hash//获得交易哈希
                    //def status = json.rechargeStatus//进度
                    //log.info json
                    //map.put("hex","616161");
                    //def parameter = new StringToObjectMap()
                    //testRunner.testCase.testSuite.project.testSuites["钱包服务接口"].testCases['16进制转字符串'].run(testRunner,
                    context)
                    //def result = project.testSuites["钱包服务接口"].testCases['16进制转字符串'].run(parameter,false)
                    //def casepro = project.testSuites["钱包服务接口"].testCases['16进制转字符串']
                    //log.info casepro
                    //def teststep = testcase.testSteps['Groovy Script']
                    //testcase.setRunFromHereContext(parameter);
                    //def aa = testcase.getRunFromHereContext();
                    //def a = [Script-result:
                    {"msg_id":"BTC1548748736","data":{"tx_id":"autotest_BTC_","coin_type":"BTC","address":"2MxeTbrWaLkq2gmcHgKMTXRDpAyrSRVbGHK","is_succ":true}}]
                    //log.info json1
                    //.split(":")[1]
                    //def step = project.testSuites["钱包服务接口"].testCases['16进制转字符串'].testSteps['Groovy Script']
                    //def testStepContext = new WsdlTestRunContext(step)
                    //def result = step.run(runner, testStepContext)
                    //def myTestStepResult = testRunner.runTestStepByName("Test Request - login")
                    //def myStatus = myTestStepResult.getStatus()
                    //testRunner.testCase.testSuite.project.testSuites["ONT冒烟用例"].setPropertyValue("txHash",json.data.txHash);
                    /*以上为测试代码*/
                </con:script>
                <con:responseContent>{}</con:responseContent>
            </con:response>
        </con:restMockAction>
        <con:restMockAction name="/v1/report-risk" method="POST" resourcePath="/api/v1/report-risk"
                            id="5158308f-389a-482c-b6e3-ce057c3c3258">
            <con:settings>
                <con:setting id="5158308f-389a-482c-b6e3-ce057c3c3258fileName">%2Fv1%2Freport-risk</con:setting>
            </con:settings>
            <con:defaultResponse>正常返回</con:defaultResponse>
            <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
            <con:dispatchConfig/>
            <con:dispatchPath xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <con:dispatchXPath/>
            <con:routeScript/>
            <con:response name="正常返回" id="52ab96eb-6ddd-4d96-9c47-b8b626701916" httpResponseStatus="200" dataSource="">
                <con:settings/>
                <con:responseContent/>
            </con:response>
        </con:restMockAction>
        <con:restMockAction name="/v1/transactions" method="POST" resourcePath="/api/v1/transactions/"
                            id="8a7db092-914a-4297-81a2-a618023d6b6d">
            <con:settings>
                <con:setting id="8a7db092-914a-4297-81a2-a618023d6b6dfileName">%2Fv1%2Ftransactions%2F</con:setting>
            </con:settings>
            <con:defaultResponse>正常返回</con:defaultResponse>
            <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
            <con:dispatchConfig/>
            <con:dispatchPath xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <con:dispatchXPath/>
            <con:routeScript/>
            <con:response name="正常返回" id="203828a4-3488-40a0-891e-4e8126a15d5f" httpResponseStatus="200"
                          mediaType="application/json" dataSource="">
                <con:settings/>
                <con:script>import groovy.json.JsonSlurper
                    import com.eviware.soapui.support.types.StringToObjectMap
                    import com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext

                    def project =
                    mockRequest.getContext().getMockRunner().getMockContext().getMockService().getProject()
                    def slurper = new JsonSlurper()
                    def json = slurper.parseText(mockRequest.requestContent)
                    def data = json.data
                    def hash = json.hash
                    def sign = json.sign
                    Map&lt;String,String> map = new HashMap();
                    StringToObjectMap parameter = new StringToObjectMap(map);
                    def runner = mockRequest.getContext().getMockRunner()
                    def testcase = project.testSuites["钱包服务接口"].testCases['16进制转字符串']
                    testcase.setPropertyValue('hex', data);
                    def result = testcase.run(parameter,false);
                    def script_result = result.getResults().get(0).getMessages()[0].split("Script-result:")[1]
                    def ret_msg = slurper.parseText(script_result)
                    log.info "出金上报通知:" + ret_msg
                    //log.info ret_msg.data
                    def coin = ret_msg.data.coin_type
                    //def address = ret_msg.data.address
                    //def is_succ = ret_msg.data.is_succ
                    //def tx_id = ret_msg.data.hash
                    if(coin == "BTC"){
                    project.testSuites["BTC冒烟用例"].setPropertyValue("出金tx_id",ret_msg.data.tx_id);//获得出金tx_id，回填至用例变量中
                    project.testSuites["BTC冒烟用例"].setPropertyValue("出金hash",ret_msg.data.tx_hash);//获得出金hash，回填至用例变量中
                    }
                    //def coin = ret_msg.data.coin_type
                    //def address = ret_msg.data.address
                    //def is_succ = ret_msg.data.is_succ
                    //def tx_id = ret_msg.data.tx_id
                    ////if(is_succ == true){//成功则回填suite中的address字段
                    //if(coin == "BTC"){
                    //// log.info tx_id
                    // project.testSuites["BTC冒烟用例"].setPropertyValue("返回tx_id",tx_id);//获得tx_id，回填至用例变量中
                    // project.testSuites["BTC冒烟用例"].setPropertyValue("新用户地址",address);//获得新用户地址，回填至用例变量中
                    //}
                    //}

                    //log.info data
                    /*以下为测试代码*/
                    //def coinType = json.coinType//获得币种
                    //def hash = json.hash//获得交易哈希
                    //def status = json.rechargeStatus//进度
                    //log.info json
                    //map.put("hex","616161");
                    //def parameter = new StringToObjectMap()
                    //testRunner.testCase.testSuite.project.testSuites["钱包服务接口"].testCases['16进制转字符串'].run(testRunner,
                    context)
                    //def result = project.testSuites["钱包服务接口"].testCases['16进制转字符串'].run(parameter,false)
                    //def casepro = project.testSuites["钱包服务接口"].testCases['16进制转字符串']
                    //log.info casepro
                    //def teststep = testcase.testSteps['Groovy Script']
                    //testcase.setRunFromHereContext(parameter);
                    //def aa = testcase.getRunFromHereContext();
                    //def a = [Script-result:
                    {"msg_id":"BTC1548748736","data":{"tx_id":"autotest_BTC_","coin_type":"BTC","address":"2MxeTbrWaLkq2gmcHgKMTXRDpAyrSRVbGHK","is_succ":true}}]
                    //log.info json1
                    //.split(":")[1]
                    //def step = project.testSuites["钱包服务接口"].testCases['16进制转字符串'].testSteps['Groovy Script']
                    //def testStepContext = new WsdlTestRunContext(step)
                    //def result = step.run(runner, testStepContext)
                    //def myTestStepResult = testRunner.runTestStepByName("Test Request - login")
                    //def myStatus = myTestStepResult.getStatus()
                    //testRunner.testCase.testSuite.project.testSuites["ONT冒烟用例"].setPropertyValue("txHash",json.data.txHash);
                    /*以上为测试代码*/
                </con:script>
                <con:responseContent>{}</con:responseContent>
            </con:response>
        </con:restMockAction>
        <con:restMockAction name="/v1/transactions/deposit" method="POST" resourcePath="/api/v1/transactions/deposit"
                            id="a0c7bba8-8a01-4931-9e1f-9fe1e8ce6bcc">
            <con:settings>
                <con:setting id="a0c7bba8-8a01-4931-9e1f-9fe1e8ce6bccfileName">%2Fv1%2Ftransactions%2Fdeposit
                </con:setting>
            </con:settings>
            <con:defaultResponse>正常返回</con:defaultResponse>
            <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
            <con:dispatchConfig/>
            <con:dispatchPath xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <con:dispatchXPath/>
            <con:routeScript/>
            <con:response name="正常返回" id="a75b6f81-e82d-4cde-9355-86a9a175f7c6" httpResponseStatus="200"
                          mediaType="application/json" dataSource="">
                <con:settings/>
                <con:script>import groovy.json.JsonSlurper
                    import com.eviware.soapui.support.types.StringToObjectMap
                    import com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext


                    def project =
                    mockRequest.getContext().getMockRunner().getMockContext().getMockService().getProject()
                    def slurper = new JsonSlurper()
                    def json = slurper.parseText(mockRequest.requestContent)
                    def data = json.data
                    def hash = json.hash
                    def sign = json.sign
                    Map&lt;String,String> map = new HashMap();
                    StringToObjectMap parameter = new StringToObjectMap(map);
                    def runner = mockRequest.getContext().getMockRunner()
                    def testcase = project.testSuites["钱包服务接口"].testCases['16进制转字符串']
                    testcase.setPropertyValue('hex', data);
                    def result = testcase.run(parameter,false);
                    def script_result = result.getResults().get(0).getMessages()[0].split("Script-result:")[1]
                    def ret_msg = slurper.parseText(script_result)
                    log.info "入金通知:" + ret_msg
                    def coin = ret_msg.data.coin_type
                    //def address = ret_msg.data.address
                    //def is_succ = ret_msg.data.is_succ
                    def tx_id = ret_msg.data.hash
                    //if(is_succ == true){//成功则回填suite中的address字段
                    if(coin == "BTC"){
                    project.testSuites["BTC冒烟用例"].setPropertyValue("入金hash",tx_id);//获得入金hash，回填至用例变量中
                    }
                    //}

                    //log.info data
                    /*以下为测试代码*/
                    //def coinType = json.coinType//获得币种
                    //def hash = json.hash//获得交易哈希
                    //def status = json.rechargeStatus//进度
                    //log.info json
                    //map.put("hex","616161");
                    //def parameter = new StringToObjectMap()
                    //testRunner.testCase.testSuite.project.testSuites["钱包服务接口"].testCases['16进制转字符串'].run(testRunner,
                    context)
                    //def result = project.testSuites["钱包服务接口"].testCases['16进制转字符串'].run(parameter,false)
                    //def casepro = project.testSuites["钱包服务接口"].testCases['16进制转字符串']
                    //log.info casepro
                    //def teststep = testcase.testSteps['Groovy Script']
                    //testcase.setRunFromHereContext(parameter);
                    //def aa = testcase.getRunFromHereContext();
                    //def a = [Script-result:
                    {"msg_id":"BTC1548748736","data":{"tx_id":"autotest_BTC_","coin_type":"BTC","address":"2MxeTbrWaLkq2gmcHgKMTXRDpAyrSRVbGHK","is_succ":true}}]
                    //log.info json1
                    //.split(":")[1]
                    //def step = project.testSuites["钱包服务接口"].testCases['16进制转字符串'].testSteps['Groovy Script']
                    //def testStepContext = new WsdlTestRunContext(step)
                    //def result = step.run(runner, testStepContext)
                    //def myTestStepResult = testRunner.runTestStepByName("Test Request - login")
                    //def myStatus = myTestStepResult.getStatus()
                    //testRunner.testCase.testSuite.project.testSuites["ONT冒烟用例"].setPropertyValue("txHash",json.data.txHash);
                    /*以上为测试代码*/
                </con:script>
                <con:responseContent>{}</con:responseContent>
            </con:response>
        </con:restMockAction>
    </con:restMockService>
    <con:authRepository/>
    <con:tags/>
</con:soapui-project>
